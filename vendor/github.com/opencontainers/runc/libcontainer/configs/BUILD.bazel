load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "blkio_device.go",
        "cgroup_unsupported.go",
        "config.go",
        "device.go",
        "hugepage_limit.go",
        "interface_priority_map.go",
        "mount.go",
        "namespaces.go",
        "namespaces_syscall_unsupported.go",
        "namespaces_unsupported.go",
        "network.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "cgroup_linux.go",
            "config_linux.go",
            "device_defaults.go",
            "namespaces_linux.go",
            "namespaces_syscall.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "cgroup_windows.go",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "config_linux_test.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "config_windows_test.go",
        ],
        "//conditions:default": [],
    }),
    library = ":go_default_library",
)

go_test(
    name = "go_default_xtest",
    srcs = ["config_test.go"],
    deps = [":go_default_library"],
)
