apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-addon: kops-controller.addons.k8s.io
    k8s-app: kops-controller
    version: v1.16.0-alpha.1
  name: kops-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kops-controller
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-addon: kops-controller.addons.k8s.io
        k8s-app: kops-controller
        version: v1.16.0-alpha.1
    spec:
      containers:
      - command:
        - /usr/bin/kops-controller
        - --cloud=aws
        - --config=memfs://clusters.example.com/minimal.example.com
        - --metrics-addr=0
        - --v=2
        image: kope/kops-controller:1.14.0-alpha.1
        name: kops-controller
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: Default
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccount: kops-controller
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-addon: kops-controller.addons.k8s.io
  name: kops-controller
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-addon: kops-controller.addons.k8s.io
  name: kops-controller
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-addon: kops-controller.addons.k8s.io
  name: kops-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kops-controller
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:kube-system:kops-controller
