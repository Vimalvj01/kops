apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    k8s-addon: core.addons.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    k8s-addon: core.addons.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeadm:node-proxier
  labels:
    k8s-addon: core.addons.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: kube-proxy
  namespace: kube-system
{{ if IsIPv6Only }}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ip-address-type: "dualstack"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "443"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "tcp"
#  service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/healthz"
    dns.alpha.kubernetes.io/external: "{{ .MasterPublicName }}"
  name: apiserver-public
  namespace: kube-system
spec:
  selector:
    k8s-app: kube-apiserver 
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
  type: LoadBalancer
{{ end }}