# ---------------------------------------------------------------
#
# Private Network Topology in AWS
#
# Inspired by https://github.com/kubernetes/kops/issues/428
#
# This will handle deploying k8s instance into a private subnet.
#
# Where a private subnet means:
# A subnet doesn't have a route to the Internet gateway.
#
# Utility Subnet - A subnet that is used to bridge a private
# subnet to a public subnet with a NGW
#
# ---------------------------------------------------------------


# ---------------------------------------------------------------
# IAM - Nodes
# ---------------------------------------------------------------
iamRole/nodes.{{ ClusterName }}:
  rolePolicyDocument: resources/iam/kubernetes-node-role.json
iamRolePolicy/nodes.{{ ClusterName }}:
  role: iamRole/nodes.{{ ClusterName }}
  policyDocument: resources/iam/kubernetes-node-policy.json
iamInstanceProfile/nodes.{{ ClusterName }}: {}
iamInstanceProfileRole/nodes.{{ ClusterName }}:
  instanceProfile: iamInstanceProfile/nodes.{{ ClusterName }}
  role: iamRole/nodes.{{ ClusterName }}

# ---------------------------------------------------------------
# Security Group - Nodes
# ---------------------------------------------------------------
securityGroup/nodes.{{ ClusterName }}:
  vpc: vpc/{{ ClusterName }}
  description: 'Security group for nodes'
  removeExtraRules:
  - port=22
securityGroupRule/node-egress:
  securityGroup: securityGroup/nodes.{{ ClusterName }}
  egress: true
  cidr: 0.0.0.0/0
securityGroupRule/all-node-to-node:
  securityGroup: securityGroup/nodes.{{ ClusterName }}
  sourceGroup: securityGroup/nodes.{{ ClusterName }}
securityGroupRule/all-node-to-master:
  securityGroup: securityGroup/masters.{{ ClusterName }}
  sourceGroup: securityGroup/nodes.{{ ClusterName }}



{{ range $ig := NodeSets }}
# ---------------------------------------------------------------
# AutoScaleGroup - Nodes
#
# The AutoScaleGroup for the Nodes
# ---------------------------------------------------------------
launchConfiguration/{{ $ig.Name }}.{{ ClusterName }}:
  sshKey: sshKey/{{ SSHKeyName }}
  securityGroups:
    - securityGroup/nodes.{{ ClusterName }}
  iamInstanceProfile: iamInstanceProfile/nodes.{{ ClusterName }}
  imageId: {{ $ig.Spec.Image }}
  instanceType: {{ $ig.Spec.MachineType }}
  associatePublicIP: false
  userData: resources/nodeup.sh {{ $ig.Name }}
  rootVolumeSize: {{ or $ig.Spec.RootVolumeSize "20" }}
  rootVolumeType: {{ or $ig.Spec.RootVolumeType "gp2" }}
{{ if $ig.Spec.MaxPrice }}
  spotPrice: "{{ $ig.Spec.MaxPrice }}"
{{ end }}
autoscalingGroup/{{ $ig.Name }}.{{ ClusterName }}:
  launchConfiguration: launchConfiguration/{{ $ig.Name }}.{{ ClusterName }}
  minSize: {{ or $ig.Spec.MinSize 2 }}
  maxSize: {{ or $ig.Spec.MaxSize 2 }}
  subnets:
{{ range $zone := $ig.Spec.Zones }}
    # Nodes in private topology get launched into the private subnet
    - subnet/private-{{ $zone }}.{{ ClusterName }}
{{ end }}
  tags:
  {{ range $k, $v := CloudTags $ig }}
    {{ $k }}: "{{ $v }}"
  {{ end }}



{{ end }}
