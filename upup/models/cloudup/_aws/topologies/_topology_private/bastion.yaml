{{ if WithBastion }}
# ---------------------------------------------------------------
#
# Bastion Host for Private Network Topologies in AWS
#
# The bastion host will live in one of the utility subnets
# created in the private topology. The bastion host will have
# port 22 TCP open to 0.0.0.0/0. And will have internal SSH
# access to all private subnets.
#
# ---------------------------------------------------------------






# ---------------------------------------------------------------
# Security Group - Bastion
#
# The security group that the bastion lives in
# ---------------------------------------------------------------
securityGroup/bastion.{{ ClusterName }}:
  vpc: vpc/{{ ClusterName }}
  description: 'Security group for bastion'
  removeExtraRules:
  - port=22
securityGroupRule/bastion-egress:
  securityGroup: securityGroup/nodes.{{ ClusterName }}
  egress: true
  cidr: 0.0.0.0/0
securityGroupRule/all-node-to-bastion:
  securityGroup: securityGroup/bastion.{{ ClusterName }}
  sourceGroup: securityGroup/nodes.{{ ClusterName }}
securityGroupRule/all-master-to-bastion:
  securityGroup: securityGroup/bastion.{{ ClusterName }}
  sourceGroup: securityGroup/masters.{{ ClusterName }}
securityGroupRule/ssh-external-to-bastion:
  securityGroup: securityGroup/bastion.{{ ClusterName }}
  sourceGroup: securityGroup/bastion-elb.{{ ClusterName }}
  protocol: tcp
  fromPort: 22
  toPort: 22


# ---------------------------------------------------------------
# Security Group - Bastion ELB
#
# The security group that the bastion lives in
# ---------------------------------------------------------------
securityGroup/bastion-elb.{{ ClusterName }}:
  vpc: vpc/{{ ClusterName }}
  description: 'Security group for bastion ELB'
  removeExtraRules:
  - port=22
securityGroupRule/bastion-elb-egress:
  securityGroup: securityGroup/bastion-elb.{{ ClusterName }}
  egress: true
  cidr: 0.0.0.0/0
securityGroupRule/ssh-external-to-bastion-elb:
  securityGroup: securityGroup/bastion-elb.{{ ClusterName }}
  cidr:  0.0.0.0/0
  protocol: tcp
  fromPort: 22
  toPort: 22


# ---------------------------------------------------------------
# Bastion Load Balancer
#
# This is the ELB in front of the privately hosted bastion ASG
# ---------------------------------------------------------------
loadBalancer/bastion.{{ ClusterName }}:
  id: {{ GetELBName32 "bastion" }}
  securityGroups:
    - securityGroup/bastion-elb.{{ ClusterName }}
  subnets:
  {{ range $zone := .Zones }}
    - subnet/utility-{{ $zone.Name }}.{{ ClusterName }}
  {{ end }}
  listeners:
    22: { instancePort: 22 }
loadBalancerAttachment/bastion-elb-attachment.{{ ClusterName }}:
  loadBalancer: loadBalancer/bastion.{{ ClusterName }}
  autoscalingGroup: autoscalingGroup/bastion.{{ ClusterName }}



# ---------------------------------------------------------------
# ASG - The Bastion itself
#
# Define the bastion host. Hard coding to a t2.small for now.
# we probably want to abstract this out in a later feature.
# ---------------------------------------------------------------
launchConfiguration/bastion.{{ ClusterName }}:
  sshKey: sshKey/{{ SSHKeyName }}
  securityGroups:
   - securityGroup/bastion.{{ ClusterName }}
  iamInstanceProfile: iamInstanceProfile/masters.{{ ClusterName }}
  imageId: {{ GetBastionImageId }}
  instanceType: t2.small
  associatePublicIP: false
  rootVolumeSize: 20
  rootVolumeType: gp2
autoscalingGroup/bastion.{{ ClusterName }}:
  minSize: 1
  maxSize: 1
  subnets:
    - subnet/private-{{ GetBastionZone }}.{{ ClusterName }}
  launchConfiguration: launchConfiguration/bastion.{{ ClusterName }}
  tags:
    Name: bastion-{{ GetBastionZone }}.{{ ClusterName }}
    KubernetesCluster: {{ ClusterName }}

{{ end }}
