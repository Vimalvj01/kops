// Code generated by go-bindata.
// sources:
// upup/models/cloudup/_aws/master/_master_asg/master_asg.yaml
// upup/models/cloudup/_aws/master/_master_dns/master_dns.yaml
// upup/models/cloudup/_aws/master/_master_lb/master_lb.yaml
// upup/models/cloudup/_aws/master/_master_single/master_single.yaml
// upup/models/cloudup/_aws/master/_not_master_lb/not_master_lb.yaml
// upup/models/cloudup/_aws/master/master.yaml
// upup/models/cloudup/_aws/network.yaml
// upup/models/cloudup/_aws/nodes.yaml
// upup/models/cloudup/_aws/resources/iam/kubernetes-master-policy.json.template
// upup/models/cloudup/_aws/resources/iam/kubernetes-master-role.json.template
// upup/models/cloudup/_aws/resources/iam/kubernetes-node-policy.json.template
// upup/models/cloudup/_aws/resources/iam/kubernetes-node-role.json.template
// upup/models/cloudup/_aws/resources/nodeup.sh.template
// upup/models/cloudup/_aws/sshkey.yaml
// upup/models/cloudup/_gce/master.yaml
// upup/models/cloudup/_gce/network.yaml
// upup/models/cloudup/_gce/nodes.yaml
// upup/models/cloudup/_gce/resources/nodeup.sh.template
// upup/models/cloudup/pki/kubecfg
// upup/models/cloudup/pki/kubelet
// upup/models/cloudup/pki/master
// upup/models/cloudup/resources/cloudinit.yaml.template
// upup/models/cloudup/resources/cluster-name.template
// upup/models/cloudup/resources/config.yaml.template
// upup/models/cloudup/tokens/tokens.yaml
// upup/models/config/_aws/defaults.options
// upup/models/config/_aws/master/_master_dns/defaults.options
// upup/models/config/_aws/master/_master_single/defaults.options
// upup/models/config/_gce/defaults.options
// upup/models/config/components/docker/_e2e_storage_test_environment/e2e.options
// upup/models/config/components/docker/_networking_kubenet/kubenet.options
// upup/models/config/components/docker/docker.options
// upup/models/config/components/kube-apiserver/_aws/kube-apiserver.aws.options
// upup/models/config/components/kube-apiserver/_gce/kube-apiserver.gce.options
// upup/models/config/components/kube-apiserver/kube-apiserver.options
// upup/models/config/components/kube-controller-manager/_aws/kube-controller-manager.aws.options
// upup/models/config/components/kube-controller-manager/_gce/kube-controller-manager.gce.options
// upup/models/config/components/kube-controller-manager/_networking_classic/kube-controller-manager.networking-classic.options
// upup/models/config/components/kube-controller-manager/_networking_kubenet/_networking_external/kube-controller-manager.networking-external.options
// upup/models/config/components/kube-controller-manager/_networking_kubenet/kube-controller-manager.networking-kubenet.options
// upup/models/config/components/kube-controller-manager/kube-controller-manager.options
// upup/models/config/components/kube-dns/kube-dns.options
// upup/models/config/components/kube-proxy/kube-proxy.options
// upup/models/config/components/kube-scheduler/kube-scheduler.options
// upup/models/config/components/kubelet/_aws/kubelet.aws.options
// upup/models/config/components/kubelet/_gce/kubelet.gce.options
// upup/models/config/components/kubelet/_isolate_masters/kubelet.options
// upup/models/config/components/kubelet/_networking_kubenet/kubelet.kubenet.options
// upup/models/config/components/kubelet/kubelet.options
// upup/models/config/defaults.options
// upup/models/nodeup/_automatic_upgrades/_debian_family/files/etc/apt/apt.conf.d/20auto-upgrades
// upup/models/nodeup/_automatic_upgrades/_debian_family/packages/unattended-upgrades
// upup/models/nodeup/_kope_routing/files/etc/kubernetes/manifests/kope-routing.manifest.template
// upup/models/nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template
// upup/models/nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template.meta
// upup/models/nodeup/_kope_routing/files/var/log/kope-routing.log
// upup/models/nodeup/_kope_routing/files/var/log/kope-routing.log.meta
// upup/models/nodeup/_kubernetes_master/_aws/kope-aws/files/etc/kubernetes/manifests/kope-aws.manifest.template
// upup/models/nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh
// upup/models/nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh.meta
// upup/models/nodeup/_kubernetes_master/_kube-master-addons/services/kube-master-addons.service
// upup/models/nodeup/_kubernetes_master/certs/files/srv/kubernetes/ca.crt.template
// upup/models/nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.cert.template
// upup/models/nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.key.template
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd-events.manifest
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd.manifest
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log.meta
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log
// upup/models/nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log.meta
// upup/models/nodeup/_kubernetes_master/etcd/users/etcd
// upup/models/nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/addons/namespace.yaml
// upup/models/nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh
// upup/models/nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh.meta
// upup/models/nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh
// upup/models/nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh.meta
// upup/models/nodeup/_kubernetes_master/kube-addons/services/kube-addons.service
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/etc/kubernetes/manifests/kube-apiserver.manifest.template
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template.meta
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template.meta
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log
// upup/models/nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log.meta
// upup/models/nodeup/_kubernetes_master/kube-controller-manager/files/etc/kubernetes/manifests/kube-controller-manager.template
// upup/models/nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log
// upup/models/nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log.meta
// upup/models/nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-rc.yaml.template
// upup/models/nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-svc.yaml.template
// upup/models/nodeup/_kubernetes_master/kube-scheduler/files/etc/kubernetes/manifests/kube-scheduler.template
// upup/models/nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log
// upup/models/nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log.meta
// upup/models/nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh
// upup/models/nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh.meta
// upup/models/nodeup/_kubernetes_pool/_kube-node-unpacker/files/srv/salt/kube-bins/kube-proxy.tar.asset
// upup/models/nodeup/_kubernetes_pool/_kube-node-unpacker/services/kube-node-unpacker.service
// upup/models/nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount
// upup/models/nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount.meta
// upup/models/nodeup/_kubernetes_pool/kube-proxy/files/etc/kubernetes/manifests/kube-proxy.manifest.template
// upup/models/nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template
// upup/models/nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template.meta
// upup/models/nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log
// upup/models/nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log.meta
// upup/models/nodeup/_protokube/files/etc/sysconfig/protokube.template
// upup/models/nodeup/_protokube/services/protokube.service.template
// upup/models/nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf
// upup/models/nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf.meta
// upup/models/nodeup/docker/_systemd/files/etc/sysconfig/docker.template
// upup/models/nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck
// upup/models/nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck.meta
// upup/models/nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart
// upup/models/nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart.meta
// upup/models/nodeup/docker/_systemd/services/docker-healthcheck.service
// upup/models/nodeup/docker/_systemd/services/docker-healthcheck.service.meta
// upup/models/nodeup/docker/_systemd/services/docker-healthcheck.timer
// upup/models/nodeup/docker/_systemd/services/docker.service
// upup/models/nodeup/docker/files/usr/share/doc/docker/apache.txt
// upup/models/nodeup/docker/packages/_jessie/docker-engine
// upup/models/nodeup/docker/packages/_xenial/docker-engine
// upup/models/nodeup/docker/packages/bridge-utils
// upup/models/nodeup/docker/packages/libapparmor1
// upup/models/nodeup/docker/packages/libltdl7
// upup/models/nodeup/docker/packages/perl
// upup/models/nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset
// upup/models/nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset.meta
// upup/models/nodeup/kubelet/files/etc/sysconfig/kubelet.template
// upup/models/nodeup/kubelet/files/usr/local/bin/kubelet.asset
// upup/models/nodeup/kubelet/files/usr/local/bin/kubelet.asset.meta
// upup/models/nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template
// upup/models/nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template.meta
// upup/models/nodeup/kubelet/services/kubelet.service
// upup/models/nodeup/logrotate/files/etc/cron.hourly/logrotate
// upup/models/nodeup/logrotate/files/etc/cron.hourly/logrotate.meta
// upup/models/nodeup/logrotate/files/etc/logrotate.d/docker
// upup/models/nodeup/logrotate/files/etc/logrotate.d/docker-containers
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kube-addons
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kube-apiserver
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kube-controller-manager
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kube-proxy
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kube-scheduler
// upup/models/nodeup/logrotate/files/etc/logrotate.d/kubelet
// upup/models/nodeup/logrotate/packages/logrotate
// upup/models/nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset
// upup/models/nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset.meta
// upup/models/nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset
// upup/models/nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset.meta
// upup/models/nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset
// upup/models/nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset.meta
// upup/models/nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset
// upup/models/nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset.meta
// upup/models/nodeup/ntp/_aws/packages/ntp
// upup/models/nodeup/ntp/_aws/services/ntp
// upup/models/nodeup/top/_debian_family/packages/apt-transport-https
// upup/models/nodeup/top/_debian_family/packages/nfs-common
// upup/models/nodeup/top/_debian_family/packages/python-apt
// upup/models/nodeup/top/_debian_family/packages/socat
// upup/models/nodeup/top/_redhat_family/packages/git
// upup/models/nodeup/top/_redhat_family/packages/python
// upup/models/nodeup/top/_ubuntu/packages/git
// upup/models/nodeup/top/_ubuntu/packages/netcat-traditional
// upup/models/nodeup/top/files/usr/local/share/doc/kubernetes/LICENSES
// upup/models/nodeup/top/packages/curl
// upup/models/proto/_aws/master_volumes.yaml
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cloudup_awsMaster_master_asgMaster_asgYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4b\x6f\xd3\x40\x10\xbe\xe7\x57\x8c\x4c\x0f\x70\xc0\xa6\x3d\x21\x4b\x1c\xda\x82\xda\x08\x8a\x22\x52\x71\xe0\x12\x4d\x9c\x89\xb3\xea\x7a\xd7\xda\x87\xd4\xa4\xea\x7f\x67\x5f\x8e\xed\xd4\xd0\x9e\xbc\x3b\x33\xdf\xb7\xf3\xf8\xc6\x4f\x4f\xa0\x50\xd4\x04\x67\x0d\x94\x5f\xe0\x0e\xb5\x21\xa5\xe1\xf9\x79\x36\x7b\x07\x97\xcb\x1b\xd8\x4a\x05\x4d\xb0\xce\x38\x5a\x51\xed\xae\xa5\xd8\xb2\xda\x2a\x34\x4c\x8a\xc2\xe1\xcf\x9a\xfc\x27\x36\xe4\x30\x79\x0c\xd4\xb9\xb3\x5e\x73\xeb\xcf\xc9\x53\xce\x00\xb4\xde\x7d\xa7\x7d\x99\xbe\x1e\xb9\x5c\xde\xba\x53\x0a\xf1\x11\x54\x59\xc5\xcc\xfe\x46\x49\xdb\x6a\x8f\x01\xf8\x38\xb6\x16\xff\x7c\xc2\x45\x33\x6c\xe6\x42\x1b\x14\x15\x2d\x94\xdc\x32\x4e\xe5\x84\xed\xff\x14\x0d\xd6\x34\xdf\x94\x10\x0b\x5b\xb6\x54\xe5\x73\x6f\x4b\xee\x44\x75\xbf\x6f\x69\x14\x73\x87\xd5\x8e\x89\x60\x8f\x91\xa8\xb5\xac\x18\x1a\x5a\xd8\x35\x67\xd5\x7c\x31\x0a\xbf\x3c\xf5\x46\x90\xd5\xa4\xbe\xa2\xc1\x12\x14\x69\x69\x55\x45\xba\x10\x72\x43\xb6\xcd\xf5\x0e\x56\x0f\x76\x4d\x4a\x90\x21\xbd\x4a\x23\x01\x50\x52\x9a\xdf\x92\xdb\x86\x96\xec\x10\x73\x72\x13\xeb\xde\xf9\x35\xf2\x42\x76\xf1\x29\x8b\x2f\xf5\xb0\x63\x29\x93\xb0\x50\x50\x56\xb7\x17\x01\xe7\xa2\xd8\x76\x50\xf3\xe3\x42\xb1\xaa\x1b\x5e\x2b\x4d\xb8\x96\x90\x8d\x1a\x73\x0c\xca\x3c\x9e\xc4\x26\xa8\x0b\xad\x91\xba\x42\xce\x44\x1d\x07\xdb\x2b\xe9\x35\x21\x35\x4c\xc4\x5a\xcf\xfd\x05\x1f\xfb\x8b\xb6\x6b\xd7\x9e\xa0\x9c\x5e\xd8\x07\x2f\xec\x2e\x9d\x3f\x52\x90\x8e\x09\x07\x6d\x05\x40\x78\xfb\xe0\x05\x3c\x25\x89\x3e\x69\x80\x89\x15\x28\xa7\x8c\x6f\xdd\x0b\x47\x69\xb0\x4e\x52\x7f\xf8\xac\x73\x26\x0b\x25\x8f\x1a\x75\xad\x3c\xcf\x86\xbe\x8d\xd0\x05\x13\xce\x23\x90\x3b\x27\xb6\x2c\xef\xae\x2f\xc9\xb3\x34\x2f\x21\x0d\xbc\xbf\x45\x7d\x8f\x35\x64\x49\x39\x2b\xbe\xce\x3e\x74\x7d\x18\x90\xb7\x41\x8f\x89\x7a\x9a\xb1\x9b\x60\x24\x9f\xe0\xf5\x5e\xf7\xf3\x30\xc6\xed\x44\xf8\x87\x18\x09\xdf\x7e\x5c\xcd\xb8\xc4\xcd\x15\x72\xbf\x3f\x2a\x7a\x1b\x12\x66\xb8\x8e\x83\x96\x4d\x4e\x7e\xc8\x50\x8e\x6e\xc5\x64\xbe\x7e\x0f\x4f\x74\x56\xbe\xb0\x14\xaf\x3c\x7c\x52\x73\x3a\xfe\x0d\x00\x00\xff\xff\xad\x8f\x01\x9d\x39\x05\x00\x00")

func cloudup_awsMaster_master_asgMaster_asgYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMaster_master_asgMaster_asgYaml,
		"cloudup/_aws/master/_master_asg/master_asg.yaml",
	)
}

func cloudup_awsMaster_master_asgMaster_asgYaml() (*asset, error) {
	bytes, err := cloudup_awsMaster_master_asgMaster_asgYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/_master_asg/master_asg.yaml", size: 1337, mode: os.FileMode(420), modTime: time.Unix(1473349571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsMaster_master_dnsMaster_dnsYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xce\xcf\x4b\xcb\x4c\x2f\x2d\x4a\x2c\xc9\xcc\xcf\x53\x48\xcb\x2f\x52\x48\x54\x70\xf1\x0b\x56\xc8\x4b\xcc\x4d\x05\x73\x4b\x32\x52\x15\x72\x13\x8b\x4b\x52\x8b\xb8\xb8\x52\xf2\x8a\xa3\xf2\xf3\x52\xf5\xab\xab\x15\xf4\x80\x8a\x40\x6c\x85\xda\x5a\x2b\x85\xea\x5a\x2e\x2e\x40\x00\x00\x00\xff\xff\x26\xec\xa9\xdd\x4b\x00\x00\x00")

func cloudup_awsMaster_master_dnsMaster_dnsYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMaster_master_dnsMaster_dnsYaml,
		"cloudup/_aws/master/_master_dns/master_dns.yaml",
	)
}

func cloudup_awsMaster_master_dnsMaster_dnsYaml() (*asset, error) {
	bytes, err := cloudup_awsMaster_master_dnsMaster_dnsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/_master_dns/master_dns.yaml", size: 75, mode: os.FileMode(420), modTime: time.Unix(1468372720, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsMaster_master_lbMaster_lbYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x4f\x1b\x3d\x10\xbe\xe7\x57\x8c\x96\x57\x02\x0e\x9b\xf0\x16\x7a\xb1\xd4\x4a\x21\x54\x05\x89\xa2\x08\x72\xe2\x82\x1c\xef\x6c\xd6\xaa\x63\xaf\xfc\x01\x4d\x51\xfe\x7b\x67\xd6\x01\x02\x2c\x02\x14\x29\x5a\xcf\x97\x9f\x79\xe6\xf1\xec\xc0\xc4\xd9\x5a\x2f\x92\x97\x51\x3b\x0b\x77\x0d\x7a\x04\x69\xe1\xc7\xf9\x31\xd4\xde\xd9\x18\x20\x36\x08\x4b\x19\x22\x7a\xd8\x93\xad\x0e\xe8\x6f\xd1\x07\xd0\x16\x5a\xe9\xa3\x56\xc9\x48\xbf\x3f\x18\xec\xc0\xaf\x1c\x44\xa9\x03\xe3\x64\x75\x2c\x8d\xb4\x0a\xfd\x88\x92\x86\xf7\xf7\x30\x31\x89\xfd\x17\x72\x89\xb0\x5e\x8b\x01\x80\xae\xc4\xa6\x72\x49\x7e\x8f\xad\x91\x0a\x61\xb8\x1d\x58\x0c\x0b\x28\xca\x82\x12\x28\x3e\xa0\x4a\x5e\xc7\xd5\x4f\xef\x52\x1b\xb8\x02\x40\xf9\xdc\xda\x7f\x19\xe7\xa6\xb9\xc5\x48\x49\x7c\x93\xb4\x0b\x84\xff\xfe\x3a\x8b\x20\xbe\xc1\x30\x03\xbf\xa6\x63\xc8\xc1\x5d\xd9\x2e\x61\x44\xe1\x39\x70\xbd\x2e\x5f\xd7\x25\x0b\xda\x2a\x27\x19\x4d\x1e\x4b\xd4\x64\x60\x47\x47\x87\x02\xee\x89\xa6\x10\x99\x86\xa9\xf3\x51\xb0\x11\xd6\xcc\xd5\x03\xed\x08\x35\x5d\x5e\x7a\x54\x8e\x58\x5d\x41\x83\xd2\xc4\xa6\x54\x0d\xaa\xdf\xe1\x19\x8d\xa7\x9d\x67\xd2\x39\xde\xa6\x74\x3b\x43\xc0\xfb\x63\xa0\x94\x28\xfd\x02\x09\x5b\x31\x9b\x4c\x05\x01\x2c\xd8\xa6\x97\xe8\x12\x19\xbf\xf2\x98\x2c\xc5\xdf\x4a\x23\xe0\xff\x03\x3a\x66\x88\xab\x59\xe3\x31\x34\xce\xd0\x0c\xbf\x90\x35\xd9\xd7\xf6\x43\xee\xf4\x6a\x33\x1e\x58\xf0\x7c\xa0\x76\xfe\x41\x4d\x2c\x94\x0f\x0c\x8f\xdb\xba\x6d\x95\xe0\xbf\x51\x5f\x03\x15\x06\xe5\x75\xcb\x02\x16\xb0\xdb\x73\x1f\x8b\x99\xe4\xda\xe9\x19\x5c\xbd\xb9\x3f\xec\x32\xbc\xb1\x31\xee\x0e\xea\x64\x0c\xe0\x82\x90\x87\xe7\x90\x2e\x93\xc1\x51\x76\x94\x84\xae\x34\x73\xf1\x52\x88\xa2\x5f\x81\xdb\x32\x66\x94\xb9\x88\x80\xe8\x13\xd2\x51\xe9\x8a\x06\x74\x30\xec\x7e\xa3\x03\x86\x72\x3a\x9b\x4d\xaf\x20\xba\xed\x17\xd7\x41\x0f\x20\x19\x25\x56\xb0\xc7\xed\x8c\xa7\x67\x20\x95\xa2\x6a\xfb\x3d\x60\x9b\x18\xdb\x50\xe2\x1f\xca\xb6\xd2\x94\xd1\x31\xee\x8f\x82\x7e\xc5\x6d\x86\x49\x9e\x71\xb5\xd4\x76\x72\x76\x72\x99\xed\xad\x77\xd1\x29\x47\x9a\x88\xaa\xa5\x33\x71\xbb\x7c\x94\x38\x0b\xc8\x3d\x9d\x1e\x59\xee\x6b\x90\x13\x5f\x34\xfc\x76\x53\x66\xce\xfd\xe4\xc8\x77\x5b\xda\x4c\xb9\x7f\x1b\xb8\xe4\x15\x7e\x8a\x89\x4f\x75\xcc\x8b\x41\xd7\x70\x2a\xc3\x4c\x2e\xa0\xb8\xc9\x58\x6e\x2a\x1b\xba\x55\xf6\xb4\x2c\x2d\xd7\x2f\xbf\x77\x6d\x93\x97\xaf\x63\x8d\x6f\x56\xd2\x34\xcd\x8d\x56\x5b\xef\x80\x77\x94\x00\x0a\xe4\x8f\x2e\xf0\xe4\xe2\xea\x3a\xaf\x27\x72\x5f\x62\x6e\x6c\xb6\x6a\x29\xac\x18\xf3\x53\x9e\x75\xcf\xfb\xfc\xb3\x7b\x61\x6b\xb5\x0d\xfe\x05\x00\x00\xff\xff\xd9\x50\xf2\x7d\x26\x06\x00\x00")

func cloudup_awsMaster_master_lbMaster_lbYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMaster_master_lbMaster_lbYaml,
		"cloudup/_aws/master/_master_lb/master_lb.yaml",
	)
}

func cloudup_awsMaster_master_lbMaster_lbYaml() (*asset, error) {
	bytes, err := cloudup_awsMaster_master_lbMaster_lbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/_master_lb/master_lb.yaml", size: 1574, mode: os.FileMode(420), modTime: time.Unix(1469456104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsMaster_master_singleMaster_singleYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x0c\x9c\x1c\x92\x83\x25\xec\x6d\x21\x60\x0f\xc9\xc6\x68\x84\x36\xad\x91\xa4\x29\xd0\x4b\x40\x49\x63\x9b\x08\x45\x12\xfc\x08\xea\x06\xfe\xef\x25\x45\xd2\x92\x61\x35\x49\xd1\x8b\x44\x0e\x67\x1e\x87\x6f\xde\xcc\x09\xdc\x10\x6d\x50\xc1\x82\xb9\x3f\x6d\xa0\x5a\xc2\x45\xdb\x2a\xd4\x3a\xc3\x60\xaa\x96\x45\xd7\xfb\xe4\x2f\x2f\xf0\x3f\xb3\x7e\xf9\x99\x74\x08\xbb\x5d\x99\x01\x48\x5b\x33\xef\x54\x82\x3b\xce\x03\xda\x32\xda\x9c\x8b\xf3\x30\x64\xfd\x85\xdf\xa2\x16\x56\x35\x58\x02\xd6\xfa\x41\x30\xdb\xe1\x6f\x61\x43\xcc\x57\x4d\xf9\xfa\x23\x6e\x4b\x78\xb2\x35\x2a\x8e\x06\x75\x4e\x45\x8c\x9a\x53\x99\x65\x27\x70\x61\x0c\x69\x36\x10\x6c\x3e\x79\x23\xe2\x26\xa3\x5c\x1b\xc2\x1b\x5c\xa4\x67\x04\xdf\x0e\xb9\x19\x30\xe6\x64\x6f\xf4\x8f\x49\x31\xe5\x7e\xf5\x5a\x92\x7b\x82\x4a\x78\x9b\xab\xe3\x6c\x17\x97\x77\xf0\xdc\x33\x31\x91\x75\xa0\xe8\x38\xe5\x10\xf0\x57\x69\x07\x88\x77\x16\xa2\xc5\x67\xea\x81\x0b\xb7\x28\x74\x5b\xfb\x67\x7c\x43\x10\x9c\x6d\x01\x7f\x48\x6c\x8c\x5b\x23\xfc\x74\x9f\x3c\xcf\x1c\x82\x22\x7c\x8d\x70\xea\x0d\x50\xfe\x97\x14\xf1\xdd\x6d\x75\x64\x21\x2a\x2e\xa5\x9a\xbd\x99\xb3\x7f\xa2\xb6\xb5\x53\x40\x19\xff\x85\xf3\x09\x57\xec\x76\x93\x69\x4b\x45\x9f\x89\xc1\x4a\x46\x31\xf7\xea\x3c\x8d\xc9\x54\xdc\x7d\x38\x61\x23\x81\x6a\x7f\x07\xc0\xd3\xbf\xbd\xc4\x94\x60\x29\x9b\x12\x66\xff\xcc\xc6\x67\x2d\xd7\x05\x8d\x00\xee\x90\x48\x9a\xa7\xed\x71\x26\x33\xcf\x08\x5d\x01\x17\x06\xce\xae\x89\xbe\x27\x6b\x98\x3d\x06\xe4\x47\x56\xcf\xce\x43\x02\x07\xe0\xa1\xa1\x22\xf4\x34\x22\xf2\x36\x04\x6a\xbd\xe9\x3b\x24\xfc\x3d\x2b\x77\x77\xd7\x6e\x35\x10\xa1\xb1\xb1\x8a\x9a\xed\x07\x25\xac\x8c\xaf\x9c\x1f\x5a\x5f\x2b\x3f\x25\x5d\x15\xcb\xb3\x54\x62\x45\x99\xd7\xd8\x91\xed\x55\x84\x8e\xac\xb1\x6a\x0f\x0b\xe0\x6d\xf1\x38\x22\xdd\x6f\x25\x1e\xf8\xdc\x38\x7d\x53\xde\xdb\x83\x27\xd1\x5a\x34\xd4\x15\x75\xb9\x9f\x38\x46\x59\x74\x27\x56\xa3\xba\x22\x86\x94\xa0\xe2\x94\xd1\x05\x17\x2d\x5a\x99\xeb\x0d\x3c\x0e\xe3\x23\x32\xef\x42\x6a\x26\x9a\xa7\xab\x5e\xdb\x37\x44\x4a\x37\x69\x22\x37\x5e\x9e\x12\x08\x63\x60\x36\x08\x28\x37\xd8\xa1\x22\x2c\xf6\x81\xee\x7d\x06\x95\xb7\x5e\xe2\x67\xa3\x54\x2b\xbe\x12\x53\x4f\x38\xcf\x17\x09\x2a\xdc\xaa\x53\xe5\xe7\x10\x0c\x9e\xb1\x40\x40\x9b\x0f\x96\xe4\x05\xf0\x40\x95\xb1\x84\x8d\xdd\x46\xa6\xe4\x37\x88\x63\xa4\x13\xdf\x74\xb7\xc2\x1a\x84\x95\x50\x69\xd0\x28\x6f\x48\x22\x77\xb1\xfd\xfe\x9e\xd4\xbe\xc2\xc3\xba\x98\x2a\x69\x43\x5b\x35\x1e\xf7\xd5\xf2\xb6\xa7\xe3\xa0\xa0\xef\x99\x45\xb1\x3b\x36\xa1\x31\x86\xbe\xf0\x67\xfb\x69\x99\x60\xfc\x90\x5c\x7c\xba\xcc\x98\x20\xed\x25\x61\xde\xa4\x8e\xe7\xe3\x68\x30\xcc\x27\x07\xc9\x38\xbc\x3c\xd8\x15\x93\x0d\xf7\x87\x4f\x1a\x58\xff\x15\x00\x00\xff\xff\x4f\xfa\x10\xde\x5b\x07\x00\x00")

func cloudup_awsMaster_master_singleMaster_singleYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMaster_master_singleMaster_singleYaml,
		"cloudup/_aws/master/_master_single/master_single.yaml",
	)
}

func cloudup_awsMaster_master_singleMaster_singleYaml() (*asset, error) {
	bytes, err := cloudup_awsMaster_master_singleMaster_singleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/_master_single/master_single.yaml", size: 1883, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsMaster_not_master_lbNot_master_lbYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x41\x8b\x22\x31\x10\x85\xef\xfe\x8a\x07\x73\x71\x60\xdc\x39\xac\xa7\xbe\xb9\xba\xec\x0a\x22\x8d\x0a\x7b\x8e\x49\xb5\x1d\x48\xa7\x42\x52\xbd\x2a\xe2\x7f\xdf\x6a\x1b\x59\x9c\x5b\xbd\x4a\xbd\xf7\x3e\xf2\x86\x25\xc7\xc6\x9f\xfa\x6c\xc4\x73\x44\xc3\x19\xd2\x12\x3a\x53\x84\xf2\x07\xce\x2d\x45\x44\x16\xf4\xc5\xc7\x13\x0c\x36\x6c\xdc\xd1\x04\x13\x2d\x65\x4c\x7f\x6e\x7e\xbc\x4f\xde\xf0\x87\x40\x97\x44\x56\xd4\x6b\x04\xe4\x35\x62\xcc\x59\xd7\x30\xce\x65\x2a\x05\xbe\x20\xf5\xc7\xe0\x4b\x4b\xee\x03\xda\xb3\xda\xee\x87\x65\x21\x4d\x4f\x10\x46\x62\x1f\x65\x18\x46\x67\x19\x93\x23\x91\x1b\x96\x9c\x14\xa5\x90\xed\xb3\x97\x2b\x4e\x99\xfb\x54\xe0\x7c\xd6\xda\x70\x7d\xba\x46\x6e\x25\x76\x54\x30\xf5\x51\x95\x71\xe0\x06\x7f\xbd\x79\x1c\x3c\x88\x35\xf8\xf7\xe1\x50\xef\xbf\xb8\x14\xc6\x84\xc0\x67\xed\x9b\x0e\x1f\xb1\xa8\xd7\x30\xd6\x2a\xfc\xfb\xe4\x59\xfc\x6b\xe8\xdd\xf5\x81\x3e\x5b\x91\x54\x66\x74\x51\x67\x34\x61\x26\x3c\x1b\x63\xaa\x09\xf0\x72\x5d\xbd\xca\xcf\xf1\xac\x7c\xbb\xdd\xb0\x0c\xfd\x30\x6f\x4d\x47\xb8\xdf\xd5\x68\xbd\xcb\x15\xf4\x65\xe1\x3a\x1f\x97\xeb\xd5\x6e\xdc\xa7\xcc\xc2\x96\x43\x05\xb1\x49\x75\x93\xb9\xab\x39\x4b\x85\xf9\xfc\xbb\x6a\xe1\xff\xea\x5f\x00\x00\x00\xff\xff\x80\xa5\xf2\x32\xd4\x01\x00\x00")

func cloudup_awsMaster_not_master_lbNot_master_lbYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMaster_not_master_lbNot_master_lbYaml,
		"cloudup/_aws/master/_not_master_lb/not_master_lb.yaml",
	)
}

func cloudup_awsMaster_not_master_lbNot_master_lbYaml() (*asset, error) {
	bytes, err := cloudup_awsMaster_not_master_lbNot_master_lbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/_not_master_lb/not_master_lb.yaml", size: 468, mode: os.FileMode(420), modTime: time.Unix(1469456104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsMasterMasterYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\xcd\x8e\xda\x30\x10\xc7\xef\x3c\xc5\x48\x7b\xd8\x53\xc8\x6a\x8f\xb9\xa1\x5d\xa9\xe5\xb0\x15\x62\x0f\x3d\xbb\x66\x02\x2e\x8e\x27\x1a\xdb\x6d\x11\xe2\xdd\x3b\x8e\x03\x15\x52\x20\xa0\x22\x24\xc4\x30\x1f\xff\xdf\x7c\xf8\x09\xe6\xb3\x0f\xd0\xe4\x6a\xb3\x8e\xac\x82\x21\x37\x79\x82\xef\x08\x9a\x51\x05\x04\xe5\xc0\x38\x1f\x94\xd3\x08\x4c\x16\xa1\x26\x86\xb0\x41\x68\x94\x0f\xc8\x13\xa3\x9a\xa5\xfc\x5d\x66\xd3\x4f\xf7\x7b\x78\xb3\x31\xfd\xfe\xa6\x1a\x84\xc3\xa1\x9a\x40\x97\xb8\x20\x6b\xf4\xee\x9d\x74\x6c\xd0\x85\x0a\x18\x3d\x45\xd6\xe8\x4b\x29\x51\x6e\xe3\x0f\x64\x87\x01\x7d\x91\x2b\x15\x29\x67\xfa\xd3\x0b\xce\x51\x23\x57\x18\x57\xaa\x60\x14\x4a\x22\xdb\x3b\x79\x72\xfc\x3f\xa2\x79\x3f\x95\x05\x53\x6d\xae\x0e\x00\xf6\x87\xa1\x8c\xf1\xb1\x99\xf3\x84\xae\xaf\x9b\x65\xef\x18\x86\x2c\xfc\x13\x75\x64\x13\x76\xb0\x66\x8a\x6d\xb7\xe4\x7e\xc1\xbe\xf7\x7c\x49\x8e\xeb\xbc\xbf\x5a\x5d\xa5\xaf\x72\x08\x66\x85\x5e\xb3\x69\xd3\x81\x55\xf0\x7c\x51\xcf\x3f\x27\x9c\x99\xb5\xf4\x1b\xea\x68\x2d\xe0\x5a\x36\xe3\xcf\x31\x96\xf1\xd4\x4f\x91\xfd\x49\xfe\x2c\xa4\x82\x1b\xc1\x25\xb1\x2f\x01\x81\x23\x8a\xa9\xcd\x8a\x2b\x78\x99\x76\x9f\xf2\xa5\x1b\xcf\xe7\x57\x30\x1e\xa8\x45\x07\x81\x60\xb6\x6a\x8c\x7b\x9b\xbf\x2f\x07\xb0\xbc\xdf\x14\xf8\x47\xea\x3b\x65\x8b\x40\xfd\xf9\xfc\x17\x5f\x06\x12\xcf\x49\xb7\x3f\x61\xa6\x40\x9a\xac\x90\xeb\x56\xec\x9a\xa9\x59\x10\xcb\x31\xbf\xbe\x8a\x19\xe8\x64\x48\x0b\x1f\x59\x00\xb4\xbc\xe8\xa0\xec\x36\xf5\xd1\x8b\x0e\x74\xa1\xac\x3d\x1e\xfe\x63\x7a\xc8\x8f\xeb\xce\xb4\x0b\xd8\x8e\xe4\x98\x46\xa1\x53\xd4\x28\x72\x57\xea\x71\xc0\x7f\x03\x00\x00\xff\xff\x18\xd3\xcd\x47\x4e\x05\x00\x00")

func cloudup_awsMasterMasterYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsMasterMasterYaml,
		"cloudup/_aws/master/master.yaml",
	)
}

func cloudup_awsMasterMasterYaml() (*asset, error) {
	bytes, err := cloudup_awsMasterMasterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/master/master.yaml", size: 1358, mode: os.FileMode(420), modTime: time.Unix(1469456104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsNetworkYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x3d\x6f\xdb\x30\x10\xdd\xf5\x2b\x0e\x69\xc7\x46\x4e\x3b\x12\xe8\x10\x58\x40\x93\xc5\x36\xe2\xa0\x43\x37\x4a\xbc\xd8\x44\x25\x52\x25\x29\x19\x6e\xa0\xff\xde\xa3\x48\x44\x52\xaa\x08\x36\xb4\x08\xf7\xf8\xde\xbd\xfb\x6a\xeb\x62\xf5\xfa\x0a\xeb\xb2\xb1\x0e\xcd\x86\x57\x08\x5d\xc7\x12\x00\x29\x18\x10\x90\x6e\xd0\x9d\xb4\xf9\xfd\x98\x51\x9c\xc2\xf6\xc8\x0d\x06\x68\xdf\xff\xfe\xdc\xad\x03\x52\x48\x61\x26\x94\xf5\x63\xf6\x14\x20\x54\x3c\x2f\x31\x53\x76\xdf\xd4\xb5\x36\x8e\x81\x33\x0d\x8e\x81\x07\x6d\x9d\xa2\xe4\x36\x42\x09\xe9\xc8\x17\x50\xda\x4d\xd3\x7c\x82\xe7\x6d\xb6\x65\x70\xd2\x4d\x29\x20\x47\x38\x68\x2d\xc0\x69\x28\x0c\x72\x87\xe0\x8e\x68\x11\xb8\x8d\x3e\xbf\x78\xa8\x45\x23\x5f\xce\x1e\xaa\x12\x71\x2c\xea\x6d\xed\xa4\x56\x76\xbe\x6c\xa1\x2b\x2e\x95\x0f\xec\xd1\x10\x93\x0c\xdd\x57\xfc\xaf\x56\x3b\xa3\x5b\x29\x50\x64\x9b\x7d\x34\x87\x7f\xe0\x09\x0f\x24\x05\x37\x8d\xbd\x45\x6e\xdd\xed\xd7\x9b\x50\xf0\xa0\xc2\x00\x8b\x6f\xa9\x54\x94\x45\xf1\xd2\x33\xb1\xb4\xf8\xff\x2b\x02\xa2\x58\xd7\xa5\x85\xae\xea\xc6\xe1\x94\xa6\x84\x67\x25\x34\xb0\xec\x21\x5b\xef\x62\x15\xf7\xd6\xea\x42\x72\xff\x3f\x5f\x10\xbd\x67\x30\x3b\x65\xef\x60\x68\x07\x83\xc5\xde\x8c\x2d\x04\x5b\xe8\x7e\x50\xc7\x4f\xfc\x3c\x9f\xf7\xe3\x45\x59\x70\x94\x18\x4d\x75\x3f\xfb\xa5\xb8\xba\x9a\xc0\x5d\xdd\xa5\xfd\xb7\xba\xf3\xcf\x07\x39\x06\x4b\xd2\x6f\xeb\xfb\xc6\xf6\x17\x30\x2d\x93\xbd\x0f\xcc\xca\x2c\x19\xa4\x90\xe1\xea\x80\xf0\x99\xf6\x09\x81\x7d\x87\xf4\x17\xfd\xd8\x1e\xb4\x4d\x4e\xd2\x9e\xd6\xa3\x69\x64\xa5\xd7\x0f\x95\xb7\x5c\x96\x3c\x97\xa5\x74\x67\xaf\xdf\xcf\x60\x22\x3a\xbe\xd6\x00\x0c\xb7\x1a\xef\x3e\x84\xe3\xd2\x9b\x70\xfd\xa3\xe9\xbc\x5b\xbb\x0b\x2c\x5f\x31\x8a\xd0\x0a\x06\x17\xb7\x24\x19\x6d\xe7\xbf\x00\x00\x00\xff\xff\xd7\x0e\x33\x0e\xd1\x04\x00\x00")

func cloudup_awsNetworkYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsNetworkYaml,
		"cloudup/_aws/network.yaml",
	)
}

func cloudup_awsNetworkYaml() (*asset, error) {
	bytes, err := cloudup_awsNetworkYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/network.yaml", size: 1233, mode: os.FileMode(420), modTime: time.Unix(1469599198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsNodesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5b\x6f\x32\x37\x10\x7d\xe7\x57\x8c\xf8\xaa\x7e\x4f\x40\xca\x53\xb5\x52\x1f\x10\x91\x52\xd4\x26\x42\x50\xb5\x52\x5f\x22\xc7\x0c\x8b\x1b\xe3\x59\xf9\xd2\x84\x44\xf9\xef\x1d\xdb\xbb\x5c\xc2\x06\x88\x52\x45\x4a\x62\xcf\x39\xe3\x33\xd7\xfd\x06\x93\xd1\x2d\x48\x32\x4b\x55\x06\x2b\xbc\x22\xd3\xf9\x06\x7f\x21\x48\x8b\xc2\x23\x08\x03\xca\x38\x2f\x8c\x44\xb0\xa4\x11\x96\x64\xc1\xaf\x10\x0c\x2d\xd0\x75\x94\x58\xcf\xf8\x76\x90\x4e\xfd\xd7\x57\x18\xeb\xe0\x3c\xda\x3b\xb1\x46\x78\x7b\x2b\x3a\x90\x58\x53\xd2\x4a\x6e\xae\x49\x86\x35\x1a\x5f\x80\x45\x47\xc1\x4a\x74\x03\x76\x30\x78\x0c\x0f\x68\x0d\x7a\x74\xbd\xe8\xa7\x17\x19\xfd\x7f\x1c\x2b\x69\xfc\x67\xfe\xb9\x57\x0a\x38\x23\x87\x71\xd5\xa7\x94\x64\xf4\x4e\xcb\xa4\x4e\xc5\xd4\xd2\x52\x9d\x08\x1b\x5e\xdf\xda\xf0\xe7\x52\xa5\x0e\xe1\x29\x9e\x0b\x9f\xbc\x38\x05\x5c\xdd\x71\x2e\xad\x43\x19\xac\xf2\x1b\x28\x2d\x85\x2a\x15\x36\x17\xb5\x31\xdc\xc4\xfb\x53\x7a\xff\xad\x64\x11\x7f\x0d\xda\xe4\x30\x4b\x5a\x55\xc5\x8e\x2a\xe0\xfb\xfc\x83\xc7\xbe\x47\x41\x23\xad\xe9\x09\x96\x41\x6b\xc0\x92\x2b\xf2\x4e\xc2\x2c\xd4\xf1\xf4\xb2\x35\x3e\x7d\x00\x28\xe0\x22\xc9\x4c\xab\x1d\x80\xb7\x01\xf9\x28\xd5\xc2\x16\x70\xd5\x4f\x3f\x83\xab\xa8\x65\x3e\xff\x15\x94\x03\xaa\xd0\x80\xa7\xd4\xea\x4f\x64\xf5\xa2\x45\x92\x73\xab\x1e\x3e\xb3\x7f\x23\x74\xcf\x53\x6a\x99\x2f\x68\xcb\x62\xd8\x32\x5a\xac\x95\x19\x4f\xae\x67\x75\xcb\x5a\xf2\x24\x49\xb3\x6a\x59\xf1\x79\x69\x69\x3d\x25\xcb\xcd\x3b\x1c\xf2\xd1\xd3\xf6\xc0\xf2\xef\xa2\x7b\x90\x3c\xb6\x5e\xe8\xc7\x18\x41\x4b\x4d\x93\x7a\xa1\x75\x6e\xf2\xaf\x2b\xcf\x23\xf4\x29\xd2\xb1\xd4\xb5\x88\x76\x77\x91\xde\x8c\x3d\xab\xb8\x76\xf9\xbf\x69\xe6\x2b\x2b\x4c\x89\xf0\x43\x82\xa0\x87\xe2\x97\x14\xc6\x1c\xbd\xab\xa3\xfa\x5d\x04\x23\x57\xe3\xfd\x85\x0a\x3f\xc2\x68\x7e\xb3\x37\x60\xfa\x18\x13\x47\xa8\xf1\xda\xaf\x1f\x6c\x1f\x3a\xee\xba\xdf\x70\x53\xd4\x7f\x23\x8f\x5b\x96\xff\xdb\x0b\x6d\x3f\x9a\x34\x2d\x00\xbd\x8b\x8b\x79\xbc\x73\x3e\xb9\x87\xd4\x5a\x94\x38\x59\xa4\x56\xde\x86\x34\xaf\x50\xf6\x27\xd1\x52\x83\x6a\x77\x7f\x6c\x2a\x6c\x41\xde\x0a\xb9\x52\x26\x59\x33\x5e\x38\x47\x52\xf1\xda\x9a\x86\x07\xde\xc9\x93\x69\x0b\x69\xf4\x1e\x93\xa9\xc1\xa1\xbd\x16\x5e\xec\x2f\xfb\xc8\x0b\x55\xdf\xad\xe0\x7e\xb7\xf3\xef\x2b\x22\x9d\x16\x29\xf9\x3f\x49\xf3\x17\x62\xae\x5e\xb2\x3a\x2e\xdd\xe1\x5b\xb3\x03\x0c\x74\x87\x57\xdd\x66\x0b\x37\x86\x6d\x68\x27\xc8\x29\xc0\x6e\x59\x0d\x13\x9b\xb1\x6a\x79\x94\x89\xe7\xa9\x55\xb2\x29\x6d\x45\x3e\x1d\x0b\xe8\xb6\x24\x6d\x0b\xed\x46\x5f\x68\x16\xa9\x29\x45\xf0\xe4\xa4\xd0\xca\x94\xb9\xf8\x17\xf7\x5a\x4b\xa3\x16\x6d\x97\x97\x79\x64\x87\xbc\xd8\x3e\xce\xe9\x6d\x36\xc2\xb0\xc6\x8a\xe7\x13\xd8\x6c\x6c\xb0\x2e\x3c\x70\x09\xb9\xd7\x77\x23\xfa\x42\x06\xe3\x7c\x1e\xf2\xfe\xe6\x5b\x97\x39\x69\x28\x12\x2f\xc9\x4f\xf8\x56\xd9\xbb\x54\xf2\xb6\x15\x65\x3d\x51\x8f\x3f\xbb\xbe\xa2\x81\x6d\x3e\xb6\x5c\x91\x9f\xba\x9d\x3d\xf0\x7f\x01\x00\x00\xff\xff\x8f\xa8\x94\x46\x5b\x09\x00\x00")

func cloudup_awsNodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsNodesYaml,
		"cloudup/_aws/nodes.yaml",
	)
}

func cloudup_awsNodesYaml() (*asset, error) {
	bytes, err := cloudup_awsNodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/nodes.yaml", size: 2395, mode: os.FileMode(420), modTime: time.Unix(1473349571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x91\x31\x6b\xc3\x30\x10\x85\x77\xff\x8a\x43\x64\x0a\x4e\x1a\x3b\x94\x82\xa0\x83\x0b\xa5\x14\x12\x08\x0d\x74\x09\x19\x14\xe5\x1c\x44\x1d\x09\x24\x99\x16\x84\xfe\x7b\xcf\x72\x68\x3d\x04\x9a\x14\x4a\x17\x0f\xef\xd3\xbd\x7b\xf7\x1c\x32\x00\xf6\x8a\xd6\x29\xa3\x19\x07\x56\xce\x8a\x72\x52\xcc\x26\xc5\x1d\xcb\x3b\xb4\xf6\xc2\xe3\x11\xb5\x27\xb8\x21\x01\x20\xa4\x2f\xa1\xc7\xba\x46\xd9\xe9\xac\x6a\x1a\xf3\x9e\xde\x27\x50\x49\xdf\xbb\x6d\x18\xca\x92\x8f\xd9\xf6\x0b\xbd\xa0\x33\xad\x95\x98\x20\x81\xa4\xc7\xfc\x7a\x63\x6b\x5a\x8f\xb7\xf3\xbf\x31\xc7\x46\x38\xaf\x64\x63\xc4\x7e\x27\x1a\xa1\xa5\xd2\x87\x0b\x36\x65\x21\x80\xaa\x61\xba\xa4\x69\xb4\x2b\xb4\x47\xe5\xba\x5e\xdd\x74\x3d\x7f\x68\xe5\x1b\x7a\x07\x31\xa6\xb7\x57\x87\x62\xae\xbb\xf5\x6c\x80\x93\x46\x76\x01\xac\xd0\x07\x84\x91\xca\x61\xb4\x03\x7e\x7f\x51\x96\x7e\x94\x82\x8f\x54\x8c\x79\x08\xa8\xf7\x03\xc2\xc8\xf5\xb9\x5a\xae\x2c\xd6\xea\x83\x46\x38\x05\xe1\x9c\x44\x5a\x10\xe3\xcd\x98\x0d\xd7\xd3\xe8\xb7\xeb\xaf\xfb\x4f\xc7\x3e\xa1\xef\x73\x2e\x8c\x14\x89\xe4\x49\x5f\x28\x77\x02\x0c\xce\xff\x90\xff\xec\xe3\xc7\x36\xb2\xa1\xbe\xcd\x62\xf6\x19\x00\x00\xff\xff\xe4\x84\x34\x23\x81\x03\x00\x00")

func cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplate,
		"cloudup/_aws/resources/iam/kubernetes-master-policy.json.template",
	)
}

func cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplate() (*asset, error) {
	bytes, err := cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/resources/iam/kubernetes-master-policy.json.template", size: 897, mode: os.FileMode(420), modTime: time.Unix(1472329913, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\x0a\x4b\x2d\x2a\xce\xcc\xcf\x53\xb2\x52\x50\x32\x32\x30\x34\xd2\x35\x34\xd0\x35\x34\x57\xd2\x01\x49\x05\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x00\x25\xa3\x81\x02\x0a\x0a\xd5\x60\x12\x28\xe5\x9a\x96\x96\x9a\x0c\x12\x57\x72\xcc\xc9\xc9\x2f\x07\xab\x07\x4b\x04\x14\x65\xe6\x25\x67\x16\x24\xe6\x00\xe5\xaa\x81\x46\xa4\x16\x95\x65\x26\xa7\x82\x14\x56\x57\x2b\x78\x3a\xfa\x42\x05\x5c\x9d\x8d\x14\x6a\x6b\x95\x6a\xe1\xfa\x1c\x93\x4b\xa0\xae\x28\x2e\x29\xb6\x72\x2c\x2e\x2e\xcd\x4d\x0d\xca\xcf\x49\x55\x02\x2b\xa8\x05\x92\xb1\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xe2\x05\x2b\xd6\xb2\x00\x00\x00")

func cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplate,
		"cloudup/_aws/resources/iam/kubernetes-master-role.json.template",
	)
}

func cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplate() (*asset, error) {
	bytes, err := cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/resources/iam/kubernetes-master-role.json.template", size: 178, mode: os.FileMode(420), modTime: time.Unix(1469599198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xd1\xab\xda\x30\x14\xc6\xdf\xfb\x57\x84\xe0\x53\xe9\xbd\xbb\x2a\x63\x10\xd8\x43\x9d\xdb\x10\xdc\x10\xdd\x7c\x11\x1f\x62\x3c\xb5\xc1\xb4\x19\x49\x3a\xe7\x4a\xfe\xf7\x25\xb1\xab\xa2\x85\x6d\x82\xec\xa5\x0f\xdf\xf7\x9d\x5f\x4e\xcf\x39\x75\x84\x10\x5e\x82\xd2\x5c\x96\x98\x20\x3c\x78\xe9\x0f\x9e\xfa\x2f\x4f\xfd\x37\x38\xf1\xd6\xc2\x50\x03\x05\x94\xc6\x99\x2b\x27\x20\x54\x87\xaf\xb3\xde\x67\x19\x30\xaf\xe3\x54\x08\x79\x08\xf9\x60\xa4\xcc\x34\x34\x60\x03\x32\x06\xcd\x14\xdf\x40\x7c\x0e\xcc\x41\xcb\x4a\x31\xf0\x91\x18\x07\xd5\x26\x77\xc1\x53\x63\x28\xcb\x97\x52\x54\x05\x3c\x82\x3f\x86\x87\xf1\x57\x58\xc9\xca\xc0\xeb\x21\x89\xf1\xba\x0b\xbd\x72\xec\xf5\xbd\xf0\x46\x41\xfe\x37\x14\xf9\x08\x26\xad\x4c\x2e\x15\xff\x49\x7d\xe2\x8b\xdc\x43\xd9\x96\x35\xa1\x11\x35\x2c\x7f\x97\x03\xdb\x4f\xe9\x11\x54\xfa\x9d\x72\x41\x37\x5c\x70\x73\xbc\x8e\x3a\xde\x58\x1e\x4a\x21\xe9\xf6\xab\x12\x1f\xa4\x0a\x15\x1d\xa9\x39\x7c\x93\x9a\x1b\xa9\x8e\x33\x29\x38\xbb\x01\xfd\x3e\x8e\x36\xc7\x41\x5f\x67\xa6\x5c\x9b\x49\x41\x77\xb7\x4e\xe8\xd8\xbd\x12\x5c\xdc\x78\x9d\xb3\x6c\xd7\x14\xd5\x35\xe2\x19\x7a\xfe\x2c\xb7\x30\x03\x55\x70\xed\x2f\x5f\x3f\x2f\x86\xa3\x8a\xed\xc1\x68\x64\x6d\x48\xfe\xfb\xbd\x68\xbf\xc9\xce\x45\xb6\x5d\xbb\xc7\x15\x2d\x77\x80\x7a\x3c\x41\xbd\x0d\x22\x6f\xff\xa2\x93\x53\xa1\x6b\xba\xc7\xad\x4d\xea\x1a\xca\xed\x85\x83\x1d\x73\x92\x7e\x9a\x29\xc8\xf8\x0f\x57\x42\x5c\x1b\x84\x38\xd1\xe1\xad\x7d\x15\xe3\xcb\xc7\x5d\xe9\x99\x7a\xf7\x6d\x85\x5f\x75\x63\x3f\xf5\x39\x95\x2c\xdc\x14\x4e\x82\xee\xb7\x75\x32\x70\xf7\x2a\xfe\xe3\x34\xfe\x38\x8b\xe8\x52\x5f\x47\x36\xfa\x15\x00\x00\xff\xff\x16\x3b\x3d\x4f\x1f\x05\x00\x00")

func cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplate,
		"cloudup/_aws/resources/iam/kubernetes-node-policy.json.template",
	)
}

func cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplate() (*asset, error) {
	bytes, err := cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/resources/iam/kubernetes-node-policy.json.template", size: 1311, mode: os.FileMode(420), modTime: time.Unix(1472329898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\x0a\x4b\x2d\x2a\xce\xcc\xcf\x53\xb2\x52\x50\x32\x32\x30\x34\xd2\x35\x34\xd0\x35\x34\x57\xd2\x01\x49\x05\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x00\x25\xa3\x81\x02\x0a\x0a\xd5\x60\x12\x28\xe5\x9a\x96\x96\x9a\x0c\x12\x57\x72\xcc\xc9\xc9\x2f\x07\xab\x07\x4b\x04\x14\x65\xe6\x25\x67\x16\x24\xe6\x00\xe5\xaa\x81\x46\xa4\x16\x95\x65\x26\xa7\x82\x14\x56\x57\x2b\x78\x3a\xfa\x42\x05\x5c\x9d\x8d\x14\x6a\x6b\x95\x6a\xe1\xfa\x1c\x93\x4b\xa0\xae\x28\x2e\x29\xb6\x72\x2c\x2e\x2e\xcd\x4d\x0d\xca\xcf\x49\x55\x02\x2b\xa8\x05\x92\xb1\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xe2\x05\x2b\xd6\xb2\x00\x00\x00")

func cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplate,
		"cloudup/_aws/resources/iam/kubernetes-node-role.json.template",
	)
}

func cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplate() (*asset, error) {
	bytes, err := cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/resources/iam/kubernetes-node-role.json.template", size: 178, mode: os.FileMode(420), modTime: time.Unix(1469599198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsResourcesNodeupShTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5f\x73\xda\x48\x12\x7f\xd7\xa7\xe8\xc8\x5c\x02\xbb\x96\x30\xde\xbb\xdc\x5d\xb2\xdc\x2d\x6b\x93\x32\x15\x17\x5c\x01\xde\x54\x2a\xe7\xa2\x06\x69\x80\x29\x84\x46\x37\x33\x02\x3b\x0e\xdf\xfd\xba\x47\x23\x21\xb0\x93\xb7\xe5\x05\x49\xd3\xdd\xf3\xeb\x3f\xbf\xee\x3e\x7b\xd5\x9e\x8b\xb4\x3d\x67\x7a\xe5\x9d\xc1\x95\xcc\x1e\x95\x58\xae\x0c\x5c\x5e\x74\xde\xc2\x74\xc5\xe1\x63\x3e\xe7\x2a\xe5\x86\x6b\xe8\xe5\x66\x25\x15\xfe\x27\x09\x58\x29\x0d\x8a\x6b\xae\xb6\x3c\x0e\xbd\x33\x54\xbf\x15\x11\x4f\x35\x8f\x21\x4f\x63\xae\xc0\xa0\x7a\x2f\x63\x11\xfe\xb9\x93\x73\xf8\x83\x2b\x2d\x64\x0a\x97\xe1\x05\x34\x49\xc0\x77\x47\x7e\xeb\x3d\x5a\x78\x94\x39\x6c\xd8\x23\xa4\xd2\x40\xae\x39\x9a\x10\x1a\x16\x22\xe1\xc0\x1f\x22\x9e\x19\x10\x29\x44\x72\x93\x25\x82\xa5\x11\x87\x9d\x30\x2b\x7b\x8d\x33\x82\x30\xe0\xb3\x33\x21\xe7\x86\xa1\x34\x43\xf9\x0c\xdf\x16\x75\x39\x60\xc6\x02\xa6\xdf\xca\x98\xec\x5d\xbb\xbd\xdb\xed\x42\x66\xc1\x86\x52\x2d\xdb\x49\x21\xa8\xdb\xb7\x83\xab\xfe\x70\xd2\x0f\x10\xb0\x55\xb9\x4b\x13\xae\xc9\xf1\xff\xe5\x42\xa1\xab\xf3\x47\x60\x19\xe2\x89\xd8\x1c\x51\x26\x6c\x07\x52\x01\x5b\x2a\x8e\x67\x46\x12\xde\x9d\x12\x46\xa4\xcb\x73\xd0\x72\x61\x76\x4c\x71\xb4\x12\x0b\x6d\x94\x98\xe7\xe6\x28\x58\x25\x3a\xf4\xb9\x2e\x80\xe1\x62\x29\xf8\xbd\x09\x0c\x26\x3e\xfc\xde\x9b\x0c\x26\xe7\x68\xe3\xd3\x60\x7a\x33\xba\x9b\xc2\xa7\xde\x78\xdc\x1b\x4e\x07\xfd\x09\x8c\xc6\x70\x35\x1a\x5e\x0f\xa6\x83\xd1\x10\xdf\x3e\x40\x6f\xf8\x19\x3e\x0e\x86\xd7\xe7\xc0\x31\x54\x78\x0d\x7f\xc8\x14\xe1\x47\x90\x82\xc2\x68\x53\x07\x13\xce\x8f\x00\x2c\x64\x01\x48\x67\x3c\x12\x0b\x11\xa1\x5f\xe9\x32\x67\x4b\x0e\x4b\xb9\xc5\x72\x40\x77\x20\xe3\x6a\x23\x34\x25\x53\x23\xbc\x18\xad\x24\x62\x23\x0c\x33\xf6\xcb\x33\xa7\x42\xcf\xd3\xdc\x40\x20\x81\x2b\xc5\x1f\x84\x29\x5f\x53\x99\xe3\x71\xf5\x9a\x89\x8c\x2f\x98\x48\x3c\x6f\x38\xba\xee\xdf\xfd\x67\x76\x37\xbe\xed\x3e\x3d\xc1\x50\xc6\xfc\x2e\x9b\xc8\x5c\x61\xde\xf7\xfb\xf2\xf4\xa6\x37\xb9\x39\x3d\xbe\xc1\x62\x26\x11\x6f\x91\xa7\x11\xc1\x01\x04\x90\x2b\x1e\x88\x54\x1b\x96\x24\x41\x2c\x54\xb3\x05\x4f\x1e\xc0\x60\x38\x99\xf6\x6e\x6f\x67\xd7\x83\x71\xd7\x6f\x6f\x99\x6a\x47\x54\x02\xed\x75\x55\xf5\xa5\x92\x8f\xd2\x9b\x35\x6a\x42\x90\x41\xe3\xa9\xa6\xb8\xc7\x93\x28\x3e\xfd\x86\xd7\x9f\xc1\x98\x1b\x85\xf5\x01\xb1\xdc\xa5\x89\x64\x94\x6b\x23\x12\xd8\x61\x1c\xd1\x5b\x61\x42\x98\xb2\x35\x32\x8b\xc1\x8a\x30\x63\x18\xf1\x91\x02\x81\xe5\x8a\x7e\xeb\x82\x56\x8d\x0e\x55\x84\xcd\xc7\x8a\x75\xca\x52\xc6\xf3\x10\xae\xb0\x30\xe6\x48\x22\x1f\xc4\xe2\x20\x21\x28\xfe\xeb\x14\x2f\xa5\xe4\x36\x2e\x7f\x06\xac\xba\x52\x49\x53\x59\x96\x80\x42\xaf\x7c\x0a\xa4\x0a\xe6\xb9\x36\x2e\x30\x89\x8c\x58\x02\x81\xb2\xc0\xba\x7e\xa3\x43\xfe\xeb\x95\x58\x18\xe8\x78\xf8\x98\xab\x44\x77\x9b\xd0\xf8\x09\x5a\xf8\xb6\x5b\x11\x45\x8d\xca\xf9\x7b\x34\xed\x11\xad\xa8\x84\x50\x88\x08\xe0\x37\x9e\x48\xfc\xcb\x6f\xf7\x7b\xbf\x3a\x2f\xaf\x20\x72\x77\x0b\x89\xb3\xb3\x9f\xda\x7b\xdf\x9d\xaa\x0d\x04\x0b\x52\x25\x81\xea\x2b\x7a\xf9\x0a\x22\xb2\x8b\x87\x41\x20\xb2\xed\x5f\x21\xb8\x95\x07\x39\xfc\x18\xc9\x34\xe5\x91\x09\x8c\xd8\x70\x99\x53\x2b\xc3\x8f\xca\x66\xe2\x6d\xf9\x14\xc4\x3c\xc1\x1e\xd1\xb9\x70\xe0\x08\x18\xc6\x27\x75\xd7\x00\xf0\x68\x85\x56\xbb\x5d\xf8\x80\xb5\x58\x50\xb9\x4a\x62\xa1\x11\x16\xd9\x45\x2a\x84\xd0\xed\x96\x00\x79\x82\x10\xbf\x7c\x81\xc0\xba\x4d\xc1\x43\x4c\xf7\xf7\xf0\xfa\x35\x02\xdf\xb2\x44\xc4\xcc\xf0\xc0\x66\xfb\x80\xb9\x92\xfc\x1e\x08\x5b\xd1\x4e\x9b\xea\x19\x4b\xa0\x00\x01\x0b\x0b\xef\x7b\x58\x34\xaf\x6c\xbd\x08\xeb\xe4\xbe\xda\x8d\xd7\xce\x59\x5e\xba\x0b\xcd\xc9\x4d\xaf\x03\x5d\x70\xea\xad\xda\x45\x27\x57\xfd\xd0\x4c\x5d\x6b\x21\xaa\x47\xcc\x4a\xae\x4a\x24\xee\x7b\x2c\x53\xee\x79\x07\x7b\x34\x77\xca\x24\x68\xe7\xf9\x7b\xd0\x09\xe7\x19\x35\xa4\x39\xc7\x9a\xe3\xa0\x5c\x24\x8a\x6b\xec\x29\xbc\xbd\xf0\x9c\x39\xa4\xe5\x51\x16\x4e\xcb\xdd\x95\xa3\x2d\xf7\xea\x23\x36\x4d\x2c\x28\x1e\xe3\xc1\xe5\xe1\x80\x45\x26\x67\x09\x01\x2c\x9e\xba\x8d\x26\xb1\x4f\xe7\x1b\x70\x99\x85\x6f\xc0\x76\x6b\x78\xf3\x04\x99\x12\xa9\x21\x22\xef\xdf\xb4\xe0\xdb\x37\x4b\x15\xaf\x4c\x0a\x66\xa4\xb0\x80\x39\x79\xd5\xa5\xd7\xf2\xc2\xd3\x24\x55\x71\x2d\x2f\x88\xa4\x52\x79\x86\x92\xe7\x05\xf3\x2b\x4b\xe8\x2d\xd7\xe9\x1b\x83\xa3\xd0\x44\xab\xca\x03\xa8\xd9\xae\x52\x51\xc4\x1e\x79\x6d\x23\x5f\xef\x9b\x1a\x27\x84\x41\x42\x6d\x36\x4c\xbb\x48\x59\x08\xe8\x08\xf9\x00\xfe\x39\x16\xef\x7f\x53\xff\x48\xc9\xd2\xab\xec\x2a\x8a\x27\x9c\x69\xee\x94\xcf\x60\x3a\xba\x1e\x35\xbf\x6e\xb8\x4a\x1e\xd3\xb4\xf5\x0e\xfb\xf6\x8e\xda\xe1\xb8\x8f\x8d\xf3\x33\x36\x9b\x2d\xc7\x81\x40\xc3\x9e\xa6\x3f\x6d\x01\x96\x78\xb6\x77\x29\x3e\x97\xd2\x58\x2b\x32\x43\x72\x8b\xaf\x96\x0c\xa1\x57\x4f\x55\x8a\x73\x20\xcf\x66\x65\x7b\x6a\xd6\x3d\xa0\xc8\x1e\x86\xca\xde\x6f\xd9\xde\x75\xaa\x4a\x81\x4d\xd9\xc6\x36\xa5\x9a\xb5\x2f\x17\xf7\x55\x7f\xaa\x73\xa9\x36\x87\xde\x05\xa7\xf9\x3a\xb5\xed\x9a\x69\x5d\xc9\x1a\x74\xf4\x29\xc2\xf3\x0e\xc9\xbc\xc1\x31\xfb\xef\x5a\xca\x4b\x1e\x51\x9d\xdb\x44\x37\x29\x36\x0b\x1c\x9d\x31\x75\x58\x9e\x6e\x5b\xbe\xe3\xcc\x71\x3b\xa7\xd1\x70\xe2\xc8\x6f\xf7\xed\xbf\xb4\x43\xb2\xe2\xda\xea\x8b\x28\x1b\xcd\x88\x99\x9a\x6a\x19\x96\xbd\xd5\xf4\x5b\x45\xb1\x78\x2f\x01\x2c\x34\xa0\x79\x7a\xed\xde\x62\x7c\x8e\xb0\x92\x73\x7d\xe9\x19\x5e\xc4\x49\x33\x76\xb5\x91\x31\xfc\xfc\xe0\xec\x1f\xd5\xdc\x77\xeb\x6d\x80\xfb\x22\xbe\x53\xc7\xa4\x86\x81\x5b\x00\xda\xe1\xd1\x9a\x70\x22\x25\xf9\x12\x97\x33\xbb\x1d\x3a\xc5\xf3\xa2\x7f\x84\x34\xe2\xec\xac\x7e\xa9\x9a\xab\x21\x56\x74\x97\xce\xdf\x6a\x99\xba\x92\x79\x12\x13\xf1\xaa\x71\xe1\x94\x6a\x3d\x3a\x0c\x7d\xef\xd0\xde\x0a\xbd\x71\x9e\xda\xb5\xca\x49\x83\x5b\x3b\x40\x47\x4a\x64\xc6\xb7\xce\x7c\x42\x12\xe4\x29\x25\x9c\xf8\x30\x67\xd1\x7a\xa9\x6c\x09\x20\x49\x76\x52\xad\x71\xcc\xdb\x57\x5a\x69\x35\xee\xb4\x4b\xdc\xf9\xf2\x79\x88\xd5\xdf\x8e\x65\xb4\xe6\xaa\xfc\xc3\xbd\x2d\xc7\xdd\xf6\xf2\x97\xbf\xff\xf3\x17\xb4\x8c\x46\x03\x97\xb4\xd7\x47\x61\x3d\x1c\xb8\x80\x3a\x87\xf1\xa9\xf9\x7c\xe7\x79\x0f\x61\xdb\x99\xb1\x53\x78\xd1\xfd\xe1\x46\x65\x3f\xcd\xb0\x74\xc3\x47\xb6\xc1\xfa\x0b\xb6\xdd\x7f\x20\x23\x69\x71\xfa\x13\x7e\x9e\xe7\x55\xdd\xd3\x81\xa4\x3f\x20\x9c\x02\x49\x65\x98\xa2\x2d\xdd\x36\xc5\xe7\xeb\xa2\xe7\x11\x1b\xfe\x05\xc7\x90\x7f\xfd\x15\x66\xb3\xfe\xe8\xc3\xec\xe3\xdd\xef\xfd\x59\x7f\xf8\x87\x87\x9b\xe8\x98\xd3\xea\x5b\xec\xa3\x57\x85\xf1\x9e\x5a\x6a\x5a\x48\x4f\x84\xbd\xd3\xba\xfa\x21\x42\x2a\x17\x8b\xee\xff\x01\x00\x00\xff\xff\xde\x70\x3c\xbc\xb3\x0d\x00\x00")

func cloudup_awsResourcesNodeupShTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsResourcesNodeupShTemplate,
		"cloudup/_aws/resources/nodeup.sh.template",
	)
}

func cloudup_awsResourcesNodeupShTemplate() (*asset, error) {
	bytes, err := cloudup_awsResourcesNodeupShTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/resources/nodeup.sh.template", size: 3507, mode: os.FileMode(493), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_awsSshkeyYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x2e\xce\xf0\x4e\xad\xd4\xaf\xae\x56\x08\x0e\xf6\x00\xb2\xfc\x12\x73\x53\x6b\x6b\xad\xb8\x14\x14\x0a\x4a\x93\x72\x32\x93\x81\x42\x56\x0a\x45\xa9\xc5\xf9\xa5\x45\xc9\xa9\xc5\xfa\x40\xe5\xba\x10\x09\xdd\xec\xd4\x4a\x2e\x40\x00\x00\x00\xff\xff\xb9\x41\x60\x06\x3e\x00\x00\x00")

func cloudup_awsSshkeyYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_awsSshkeyYaml,
		"cloudup/_aws/sshkey.yaml",
	)
}

func cloudup_awsSshkeyYaml() (*asset, error) {
	bytes, err := cloudup_awsSshkeyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_aws/sshkey.yaml", size: 62, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_gceMasterYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x4b\x6f\xdb\x3c\x10\xbc\xeb\x57\x2c\xec\xb3\xec\x0f\x5f\x73\xd2\xcd\x8d\xd1\x56\x87\xc4\x86\x6d\xf4\xd0\x4b\x40\x8b\x6b\x99\x30\x5f\xe5\x23\x42\x12\xe4\xbf\x77\x29\xca\x8f\xa0\x71\xd0\x5c\x84\xd5\xec\xec\xee\x70\x96\x1c\xc3\x66\x31\x5f\x54\xb0\x8e\xd6\x1a\x17\x40\x45\x19\x84\x95\x08\x8a\xf9\x80\xce\x17\x85\xa5\xaf\xa0\x58\x87\xb9\xf0\x87\xe9\x21\x6e\xd1\x69\x0c\xe8\xcb\x4c\x29\x5f\x5e\xe0\x56\xc6\x14\xde\x33\x85\xf0\xfa\x5a\x15\x00\xcf\x46\x63\x05\x94\x9a\xfc\xa2\x88\x40\xc2\xbc\x78\xc6\xef\x5f\x7b\xd4\x38\x98\xdc\xf5\xe5\x3f\x8d\x8c\x0a\xd7\x94\x82\xff\xff\xcb\xbc\xc7\x1e\xda\x3c\x59\x7c\x97\x9b\x12\x30\xb2\xbc\xf4\x9e\x8f\x52\x45\x31\x86\x85\x45\x3d\x48\x86\x1f\x9b\xcd\x72\x5d\xec\x84\xc3\x8e\x49\xb9\x8a\x12\xdf\x11\xbd\x0f\xc1\xfa\xbf\xa5\x27\x64\xc6\x95\xd0\xb7\xf5\x7c\x35\x1c\x85\xea\x3a\xe3\x0e\xd5\x31\x98\x72\xdc\x31\xb2\x29\x9d\xc8\x44\xd7\xe0\x8a\xe9\x16\x7d\xaf\xf5\xb2\x96\xf2\x81\xb9\x16\xc3\x86\xb5\x39\x3b\x1c\x83\xfe\x73\x9a\xe4\x99\x0e\x79\x05\xa1\xb1\xd5\xcd\xcd\x97\x74\x92\x19\x61\x0d\x0b\xc7\x05\x40\xbd\x2c\x84\x9d\x71\xee\xd0\xfb\x7f\x35\x9f\x65\xfa\xe5\xcc\x65\xdc\x4a\xd1\xd4\xcb\xc1\xaf\x0c\x82\xd0\x3e\x30\xdd\x60\x71\x0c\xa6\xe7\x8a\x8b\x7e\xc2\x9e\x3a\x7e\x4a\xcb\x95\x7b\xa0\x58\xb3\x17\xfa\xbc\xe0\x61\xe0\xdd\x19\xce\x3c\xa1\x58\xfb\x86\x51\x27\xe0\xe8\xec\x15\x4f\x3f\xda\x56\x63\x2c\xed\x89\x22\x80\x12\x7c\x30\x8e\xda\x95\xce\x0c\x40\x63\x94\x8d\x81\x80\x6e\x00\x94\xd1\x82\x48\x42\xb7\x03\x20\x4d\xdb\xd2\x5f\xd9\x39\x11\x90\xb0\x86\xe9\xda\x7e\x33\xae\x63\x2e\x2d\xd1\xc5\x04\x72\x7a\x25\xc3\x90\xc1\x17\x4b\xc9\xcf\xbf\xa2\x64\x14\x06\xc6\x59\x60\xb9\xdb\x38\x15\x95\xa8\x1f\x2b\xa0\x05\xf4\x37\x2f\x6f\x21\x61\x05\xd5\x8b\x1d\xe0\x6f\x98\xdc\x1b\x8e\x35\x29\x87\x51\x23\x4d\xe4\x82\xc2\x51\xee\x47\x8a\x8d\xde\x89\xf6\xb2\xc1\x89\x33\x79\x62\x4a\xc2\xc3\x59\xd9\x43\x56\x96\x3a\xa3\xf4\x78\x6c\x41\x17\xc5\x85\x68\x4b\xdf\x38\x61\xc3\x65\x2b\x4d\x83\xa3\x9d\xf8\xfd\xb5\x51\x3d\xf2\xe1\x1c\xcd\x4f\x4a\xb3\x19\xa5\x26\x37\xde\xea\x3d\xe3\x44\xb4\x0e\x51\xd9\x20\xb6\x92\x58\x3b\x46\x3a\xff\x04\x00\x00\xff\xff\x10\xe7\xf3\x8d\xd2\x04\x00\x00")

func cloudup_gceMasterYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_gceMasterYaml,
		"cloudup/_gce/master.yaml",
	)
}

func cloudup_gceMasterYaml() (*asset, error) {
	bytes, err := cloudup_gceMasterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_gce/master.yaml", size: 1234, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_gceNetworkYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x30\x14\x84\x77\xff\x8a\x53\x61\x4d\xdb\x04\x52\x21\x4b\x0c\x15\x0c\xb0\x30\xa4\xbf\xc0\xb2\x5f\xa8\x85\x63\x47\xb6\xa3\x0c\x55\xfe\x3b\x4e\x31\xa2\x4a\x19\x2a\x6f\xef\xde\xbd\xbb\xcf\xa7\x13\xee\x2d\xc5\xd1\xf9\xaf\x0f\xd1\x11\xf8\x33\x56\x8a\x5a\x31\x98\xb8\xc2\x34\x31\x96\xc5\xcd\x72\x71\x9a\x38\x03\xa4\x56\x9e\xa3\xdc\xae\xab\xc7\xed\x3a\xbd\x4d\xb9\x63\xec\x0e\x7b\x63\xdc\x08\x61\x0c\xb4\x8d\xe4\xad\x30\x88\x5e\xb4\xad\x96\xac\xd5\x9e\xc6\xa4\x34\x83\xa1\x7f\x8e\x16\x39\xbc\xf8\x35\xce\x29\x79\x85\xe3\xaf\xcc\xa5\x2d\xd5\x04\x82\x1b\xbc\xa4\x46\xd8\x4f\x0a\xe7\x46\x3f\x7d\x9e\x92\x24\xe6\x36\xa4\xe6\x4b\x40\x81\x28\x7b\x5e\x16\xbb\xba\x7e\xa8\xf3\x64\x50\xcb\x89\x96\x5d\x3f\x83\x1c\x0e\x6f\xd0\x01\xae\x27\x8b\xe8\x10\x8f\x84\x94\x6a\xd4\xcd\x18\x21\x1c\x8b\x24\xef\x55\xa7\xed\xcb\xfb\x6b\x93\xff\xed\x8a\x28\xef\x5f\x81\x2c\xbc\x17\x34\x67\x8e\xaa\x62\xec\x3b\x00\x00\xff\xff\xdf\xc1\x82\x6a\xc3\x01\x00\x00")

func cloudup_gceNetworkYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_gceNetworkYaml,
		"cloudup/_gce/network.yaml",
	)
}

func cloudup_gceNetworkYaml() (*asset, error) {
	bytes, err := cloudup_gceNetworkYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_gce/network.yaml", size: 451, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_gceNodesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x4b\x6f\xdb\x30\x0c\xbe\xfb\x57\x10\xed\xae\x4e\xbb\xab\x81\x6d\xd8\x5a\xac\x08\x86\x3e\xd0\xe6\xb4\x4b\xc1\xd8\xb4\x23\x44\x96\x34\x89\x9a\x97\x16\xfd\xef\xa3\xfc\x48\xdd\x66\xc1\x6e\xf4\xc7\xc7\xf7\x91\x14\xfd\xfc\x0c\x1e\x4d\x43\xf0\xc1\xd8\x8a\x02\x31\x14\x9f\x60\x71\x23\xf6\x03\x71\x80\x97\x97\x2c\x53\x26\x30\x9a\x92\x56\xd4\x3a\x8d\x4c\x67\x92\x33\x45\x2f\x7e\xd0\x4e\x82\xf2\x04\xf5\x59\xcb\x31\xf8\xce\x53\xad\xfe\x24\x17\x8f\x69\x45\x06\x60\x88\x3b\xeb\xb7\xc5\x64\x9c\x55\x54\x63\xd4\x2c\xae\x16\xcb\x8d\x32\xb4\xda\x39\x2a\x60\xce\x90\xaa\x5e\xbf\x3a\x93\x24\x80\x53\x58\xdd\x5e\xde\x16\x70\x8d\x5b\x82\xd2\x9a\x5a\x35\xd1\xe3\x5a\x93\xf8\xd6\xd6\xf2\xa5\x0a\xdb\xa1\x94\xab\xf2\xa4\xa8\x42\x5f\xcd\x7c\x0f\xea\x89\xae\xbe\x15\xf0\xf1\xfc\x7c\x86\x2e\x5b\x6c\xfe\xc1\xde\xc3\x03\x6f\x89\x66\xe9\xbe\x5b\xdf\x49\xb9\x02\xd8\x47\x9a\x89\x79\x88\xce\x59\xcf\xe0\x3c\x49\xcf\xac\x44\x0e\xf4\x75\xbe\x48\xd0\x0c\x2c\xa0\x46\x1d\x52\x66\x28\xad\xa3\x90\x26\x03\x90\x4b\x1f\xad\x8b\x4c\xb9\xef\x46\xa0\xb5\x46\xb1\xf5\xca\x34\x23\xa0\x6d\xd3\xc8\x57\xde\x79\xc5\x34\x62\x41\x22\x44\x5f\xee\x6d\x9a\x22\x31\x56\xc8\x38\x94\x3c\x85\x6d\x5c\x53\x4e\xe6\x77\x01\x9e\x82\x8d\xbe\xa4\x70\x36\x61\x99\xf4\xa9\x6a\xa0\x5f\xfb\xd5\x29\x86\x93\x52\xdb\x58\x29\x31\x4f\x86\x8e\x5f\xdb\xeb\x08\xc2\xc6\x46\x5d\x49\x2f\x76\x2d\xc3\xde\x01\xea\x0e\x77\xa1\x97\x40\xc0\x9b\x69\x15\x10\x6c\x4b\xdd\x86\xfc\xa0\x71\x00\xe7\x12\xf6\x24\x8b\x1d\xb6\x1a\x1e\x93\x24\x2f\x6f\x82\xc2\x63\x8b\x81\xc9\x27\x6d\x24\x33\x9a\x34\xc8\x0a\x3d\x47\x97\x87\xd2\x2b\xc7\xf3\x52\x69\xc0\xd1\x2d\xc2\xe6\x18\x55\x8f\x1c\xf2\x38\x6b\x75\xcf\x62\xaa\x89\xa4\xd4\x31\x71\xe7\x06\x5b\x7a\xab\xf6\x15\x97\x40\xc6\x66\xbf\xb2\xfd\xbb\x5f\x61\xd3\x1f\x4b\x8b\x46\x96\x51\x4d\x67\x70\xe5\x6d\x74\xef\x0f\x66\xb8\x97\x23\xe7\xd2\xa4\x8c\x54\xfe\xc9\x9a\xf1\x2d\x2e\x7e\x8a\x39\x88\x5c\x63\xd8\xe7\xdc\xf4\x32\xe7\xb5\x0f\xaa\xf5\x6a\x7d\x43\x9c\xde\xfb\xdb\xd8\x0b\x1b\x0d\x0f\x21\xef\x0f\xbc\x38\x40\x8e\x9d\xfc\x51\xe2\xfd\xd5\x67\xb3\x19\x67\xa7\xf0\x55\x6b\xdb\xc9\xdd\x60\x5d\xab\x12\x6a\x6f\xdb\xe1\x42\x20\xff\x3c\x18\x59\xad\x3c\x75\xa8\xf5\x7d\xd4\x3d\xed\x6c\xba\xb9\xc0\xff\xf9\x8b\x0c\x2b\xbb\x4f\x7f\xb4\xd0\xf7\xbb\xb8\x18\x96\xb7\xbc\xeb\xc1\xf9\x4c\x56\x69\x8f\xf0\x96\x42\x9c\x98\x24\x52\x35\x6d\x98\x4b\x37\x5a\xb1\x9a\x2c\x55\xb6\x93\x49\x61\xb2\x70\x33\x1d\x64\xc9\x2e\xfb\x1b\x00\x00\xff\xff\x06\xfb\xa8\x05\x58\x05\x00\x00")

func cloudup_gceNodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_gceNodesYaml,
		"cloudup/_gce/nodes.yaml",
	)
}

func cloudup_gceNodesYaml() (*asset, error) {
	bytes, err := cloudup_gceNodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_gce/nodes.yaml", size: 1368, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudup_gceResourcesNodeupShTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x6f\x53\xe3\xc8\xf1\x7e\xaf\x4f\xd1\x2b\xfc\x5b\xec\x3b\x24\x61\xee\x77\x9b\x84\x2d\x27\xe7\x00\x7b\xb8\x8e\x98\x0b\x86\x6c\x6d\x6d\x28\x6a\x2c\x8d\xed\x09\xf2\x8c\x32\x33\xb2\xd7\xc7\xfa\xbb\xa7\x7b\x34\x12\xc2\xc0\xbe\x48\xe5\x78\x81\xa5\xf9\xd3\xf3\x4c\xf7\xd3\x4f\xb7\xf6\xde\x24\x53\x21\x93\x29\x33\x8b\x60\x0f\x4e\x54\xb1\xd1\x62\xbe\xb0\x70\x74\xd8\x7f\x07\xd7\x0b\x0e\xbf\x94\x53\xae\x25\xb7\xdc\xc0\xb0\xb4\x0b\xa5\xf1\x37\xcf\xc1\xad\x32\xa0\xb9\xe1\x7a\xc5\xb3\x38\xd8\xc3\xed\x17\x22\xe5\xd2\xf0\x0c\x4a\x99\x71\x0d\x16\xb7\x0f\x0b\x96\xe2\x8f\x9f\x39\x80\x7f\x70\x6d\x84\x92\x70\x14\x1f\x42\x97\x16\x84\x7e\x2a\xec\xbd\x47\x0b\x1b\x55\xc2\x92\x6d\x40\x2a\x0b\xa5\xe1\x68\x42\x18\x98\x89\x9c\x03\xff\x92\xf2\xc2\x82\x90\x90\xaa\x65\x91\x0b\x26\x53\x0e\x6b\x61\x17\xee\x18\x6f\x04\x61\xc0\x27\x6f\x42\x4d\x2d\xc3\xd5\x0c\xd7\x17\xf8\x36\x6b\xaf\x03\x66\x1d\x60\xfa\x5b\x58\x5b\x1c\x27\xc9\x7a\xbd\x8e\x99\x03\x1b\x2b\x3d\x4f\xf2\x6a\xa1\x49\x2e\x46\x27\x67\xe3\xc9\x59\x84\x80\xdd\x96\x1b\x99\x73\x43\x17\xff\x77\x29\x34\x5e\x75\xba\x01\x56\x20\x9e\x94\x4d\x11\x65\xce\xd6\xa0\x34\xb0\xb9\xe6\x38\x67\x15\xe1\x5d\x6b\x61\x85\x9c\x1f\x80\x51\x33\xbb\x66\x9a\xa3\x95\x4c\x18\xab\xc5\xb4\xb4\x4f\x9c\x55\xa3\xc3\x3b\xb7\x17\xa0\xbb\x98\x84\x70\x38\x81\xd1\x24\x84\xbf\x0e\x27\xa3\xc9\x01\xda\xf8\x38\xba\x3e\xbf\xbc\xb9\x86\x8f\xc3\xab\xab\xe1\xf8\x7a\x74\x36\x81\xcb\x2b\x38\xb9\x1c\x9f\x8e\xae\x47\x97\x63\x7c\xfb\x00\xc3\xf1\x27\xf8\x65\x34\x3e\x3d\x00\x8e\xae\xc2\x63\xf8\x97\x42\x13\x7e\x04\x29\xc8\x8d\x2e\x74\x30\xe1\xfc\x09\x80\x99\xaa\x00\x99\x82\xa7\x62\x26\x52\xbc\x97\x9c\x97\x6c\xce\x61\xae\x56\x48\x07\xbc\x0e\x14\x5c\x2f\x85\xa1\x60\x1a\x84\x97\xa1\x95\x5c\x2c\x85\x65\xd6\x8d\x3c\xbb\x54\x1c\x04\x86\x5b\x88\x14\x70\xad\xf9\x17\x61\xeb\x57\xa9\x4a\x9c\x6e\x5e\x0b\x51\xf0\x19\x13\x79\x10\x8c\x2f\x4f\xcf\x6e\x7e\xbd\xbb\xb9\xba\x18\x3c\x3c\xc0\x58\x65\xfc\xa6\x98\xa8\x52\x63\xdc\xb7\xdb\x7a\xf6\x7c\x38\x39\xdf\x9d\x3e\x47\x32\xd3\x92\x60\x56\xca\x94\xe0\x00\x02\x28\x35\x8f\x90\xe5\x22\x8d\x90\xcc\x6b\xa5\xef\xf1\x0e\xdd\x1e\x3c\x04\x00\x7b\x70\xca\x59\x5e\x91\xe9\xe7\x93\x33\x78\x5c\x00\x53\x8d\xff\xa3\xb2\x00\xcd\x52\x1e\x43\xf7\x23\xc7\xc8\xe7\x1b\x0a\xc9\x29\x7a\x98\xfc\xc4\x20\x57\xf6\xc0\x99\x41\x37\x80\xb0\xfb\x06\xfe\x55\x1a\xeb\x38\x8c\x76\xd0\x68\xa6\xc8\x16\x83\xf5\x42\x11\x47\x70\x1c\xe9\x68\x2c\xd3\x16\x2d\xd3\x51\x20\x66\x8e\xea\xce\x8a\x30\x72\xdf\xe2\x31\x2c\xdb\xc0\x86\xdb\xb8\x87\xa3\xa5\xb4\x22\x87\x39\xa6\xa1\xb4\xb0\x50\x06\x53\x6f\xc9\x2d\xcb\x98\x65\xf1\x5c\xa9\x79\xce\x63\x21\x2d\x46\x06\xef\xf1\xf6\xcf\x49\xc6\x57\x89\x2c\xf3\xfc\x3d\x1e\x1d\x10\xc9\x79\xba\x50\xb0\xff\x91\x39\x26\x3a\xd8\xb5\x6f\x70\x03\xdd\xa4\x6b\xf5\x86\xa6\x90\xb2\xc8\x0f\x95\xaf\xf8\xab\x07\xf4\xe2\x38\xde\x77\x56\x4d\xce\x79\x01\x3f\xe0\x73\xa6\x24\x7f\x19\x66\xa7\x4b\xbf\x92\x2d\x39\x44\x33\xf8\xfa\xb5\x82\x72\x87\x24\x50\xfa\xae\xf7\xbf\x03\x8b\x31\x59\x4b\xf8\xf0\xf7\xd3\xf1\x7f\x8f\x4f\xfc\xee\xf8\x46\xbf\xbe\x8a\x2e\xf0\x86\xc3\xf1\x23\xfd\x5a\x76\x91\x71\x8f\x50\x7b\xd0\x7d\x82\xbb\xd7\x0b\x83\x17\xf8\x2e\x24\x92\x2c\xcf\xa3\x4c\x68\x4f\xf5\xd1\x78\x72\x3d\xbc\xb8\xb8\x3b\x1d\x5d\x0d\xc2\x64\xc5\x74\x92\x92\xe4\x25\xf7\x8d\xca\xd7\x9b\x42\x5c\xbd\xbc\xc7\x9d\x10\x15\xd0\x79\x68\x6d\xdc\xe2\x4c\x9a\xed\x8e\xb5\x8f\x4f\x4b\x9d\x47\x35\x7d\xfc\xc9\x34\x06\x51\x44\xa9\x8d\x3f\x9a\xa3\x8b\xe0\x47\x7c\x32\x28\xee\x18\x8c\xe8\x1c\xf6\xff\xe6\x77\x44\x1f\x72\xb6\x52\xfa\x18\x7e\x76\xc4\xdb\x87\xd0\x6b\x74\x6d\x32\xa1\x12\x80\xd2\x58\x6f\x48\x56\xfd\xc4\xc1\xc6\x9a\x90\x30\xeb\x85\xd3\x24\x9d\x87\xfe\xd6\x39\x66\x0f\xae\xdc\x81\x0c\x5d\xbd\x96\xb9\x62\x99\xa7\xc2\x9a\x13\x1b\x30\x69\x63\xb8\x66\xf7\x58\xe3\x18\x2c\x48\x3d\x28\x93\x19\x90\x24\x61\xa6\xa2\x02\x99\xaa\xc0\x75\xfa\xa4\xcd\x4e\x19\x17\xac\x5f\x17\x15\x9c\x8f\xe1\x04\x25\x7a\x8a\xe5\x2c\xac\x72\xd9\xaf\x10\xa4\x84\xf7\x12\x0f\x25\x99\xed\x1c\x7d\x0f\xa8\xff\xf5\x26\x43\x04\xa9\x01\xc5\x41\xfd\x14\x29\x1d\x4d\x51\x40\xbc\xe3\x72\x95\x62\xf8\x23\xed\x80\x0d\xc2\x4e\x9f\x22\x63\x16\x62\x66\xa1\x4f\xa4\x41\xbf\x9a\x41\x17\x3a\xdf\x01\x09\xc5\x7a\x41\xc5\xd2\xea\x92\x37\x74\x25\x82\x92\xf3\xb1\x14\x85\x9d\x07\x5a\xfe\xf9\xa7\xdb\x6d\xd8\xcc\xd7\x47\x50\x99\x1d\x54\x2b\xf6\xf6\xbe\x4b\xb6\xa1\x9f\xd5\x4b\xca\x5c\x9c\xa0\x05\xcd\x28\xde\xf2\x8d\x0f\xea\x0c\xc3\x28\x8a\xd5\xff\x43\x74\xa1\x1e\xd7\xe1\x60\xaa\xa4\xe4\xa9\x8d\xac\x58\x72\x55\x52\x53\xd1\x84\xfe\x5d\xfd\x14\x65\x3c\xc7\x6a\xdd\x3f\xf4\xe0\x08\x18\xfa\x47\xfa\x63\xea\xa4\x18\x0c\xe0\x03\x52\xa7\x2a\xaa\x4d\x10\xab\x1d\x71\x15\x5d\x4c\x98\x18\x06\x83\x1a\x20\xcf\x11\xe2\xe7\xcf\x10\xb9\x6b\x93\xf3\x10\xd3\xed\x2d\xbc\x7d\x8b\xc0\x57\x2c\x17\xc8\x1c\x1e\xb9\x68\x3f\x62\x6e\x56\xbe\x06\xc2\xd5\x16\xbf\x9b\xa8\x8e\x14\xa8\x40\xc0\xcc\xc1\x7b\x0d\x8b\xe1\x8d\xad\x17\x61\xed\x9c\xd7\x3a\xf1\xd4\x5f\x96\xd7\xd7\x85\xee\xe4\x7c\xd8\x87\x01\xf8\xed\xbd\xd6\x41\x3b\x47\x7d\xd3\x4c\x7b\xd7\x4c\x34\x8f\x18\x95\x52\xd7\x48\xfc\x78\x2d\x50\xb5\x3d\xea\x00\xeb\x20\x18\x7f\xf3\xf7\x95\xa0\xb9\xaa\xc9\x91\x73\x54\x29\x2b\x4f\x84\x2d\xb9\x7b\x77\x58\xeb\x1d\xa6\xe5\x93\x28\xec\xd2\xdd\xd3\xd1\xd1\xbd\x19\xc4\xf6\x05\x09\xc5\x33\x9c\x38\x7a\x9c\x60\xa9\x2d\x59\x4e\x00\xab\xa7\x41\xa7\x4b\xd9\x67\xca\x25\xf8\xc8\xc2\x57\x60\xeb\x7b\xd8\x7f\x80\x02\x2b\xba\xa5\x44\xde\xee\xf7\x48\xee\x29\x55\x82\x3a\x28\x18\x91\xca\x02\xc6\xe4\xcd\x80\x5e\xeb\x03\x77\x83\xd4\xf8\xb5\x3e\x20\x55\x5a\x97\x05\xae\x3c\xa8\x32\xbf\xb1\x84\xb7\xe5\xae\xa2\x2f\x99\x4d\x17\xcd\x0d\xa0\x65\xbb\x09\x45\xe5\x7b\xcc\x6b\xe7\xf9\xb6\xa4\x1a\xec\xd5\x2c\x26\xd4\x72\xc9\x8c\xf7\x94\x83\x80\x17\xa1\x3b\x40\x78\x80\xe4\xfd\xa7\x7c\x5a\x06\x5c\x7a\xd5\xaa\x82\x7d\x0b\x67\x86\x37\x3d\xcf\xf5\xe5\xe9\x65\xf7\xb7\x25\xd7\xf9\x46\xca\xde\x31\x76\x50\x6b\x92\xc3\xab\x33\x94\xf4\x4f\x28\x36\x58\xb4\xa4\xa2\xb6\x9b\xfa\x70\xea\x65\x5c\xe2\x39\xed\xd2\x7c\xaa\x94\x75\x56\x54\x81\xc9\x2d\x7e\x73\xc9\x10\x07\xed\x50\x49\xec\xc8\xca\xe2\xae\x96\xa7\x6e\xfb\x06\xe4\xd9\xc7\xf6\x6e\x1b\xf6\x9c\x76\xed\x6e\x25\xc7\x52\x81\x23\x51\x6a\x59\xfb\x7c\x78\xdb\xe8\x53\x3b\x97\x5a\x1d\xe1\x71\xb4\x1b\xaf\x5d\xdb\x5e\x4c\xdb\x9b\x9c\x41\x9f\x3e\x95\x7b\x8e\x31\x99\x97\xd8\xf0\xfe\xa5\x15\xf2\x3a\x8f\x88\xe7\x2e\xd0\x5d\xf2\xcd\x0c\x9b\xd8\x8c\x14\x96\xcb\x55\x2f\xf4\x39\xf3\x54\xce\xa9\x34\xec\x5c\xe4\xa7\xdb\xe4\xff\x92\x98\xac\x78\x59\x7d\x11\x65\xa7\x9b\x32\xdb\xda\x5a\xbb\x65\xeb\x76\x86\xbd\x8a\x2c\xc1\x4b\x00\xab\x1d\xd8\x2c\xec\x1c\xbb\x75\x18\x9f\x23\x6c\xd6\x79\x5d\x7a\x86\x17\x71\x52\x2d\x5f\x2c\x55\x06\xdf\x7f\xf1\xf6\x9f\x70\xee\x55\xbe\x8d\xb0\x2f\xc0\x77\x52\x4c\x12\x0c\xec\x4f\xd0\x0e\x4f\x5d\x9f\x43\xad\xe5\x1c\x3f\x93\xdc\x77\x9a\xdf\x78\x50\xe9\x47\xdc\xb4\x6d\x2f\xb1\xb9\x29\x62\x95\xba\xf4\x7f\x6c\x45\xea\x44\x95\x79\x46\x89\xd7\x94\x0b\xbf\xa9\xa5\xd1\x71\x1c\x3e\xeb\xbf\xae\x4a\xe9\x3e\x70\xfc\x6a\xf0\x0d\x11\x98\x54\x8b\xc2\x86\xee\x32\xf4\x1d\x50\x4a\x0a\x38\xe5\xc3\x94\xa5\xf7\x73\xed\x28\x80\x49\xe2\x1a\x7a\x56\xbd\x52\xe3\x62\xb0\x73\x99\xe3\xb7\x45\x39\x8d\x91\xfd\x49\xa6\xd2\x7b\xae\xeb\x1f\xfc\x82\x2a\xb1\x53\x39\xfa\xe1\x0f\x7f\xa2\x4e\x10\x8d\x46\x3e\x68\x6f\x9f\xb8\xf5\x71\xc2\x3b\xd4\x5f\x18\x9f\xba\xcf\xbb\xb1\xf7\x10\x27\xde\x8c\xab\xc2\xb3\xc1\x37\x7b\x3d\x37\x74\x87\xd4\x8d\x37\x6c\x49\xed\xd9\x6a\xf0\x47\xcc\x48\x6a\x9c\x7e\x87\xbf\x20\x68\xc4\xd3\x63\xa4\x1f\x20\x98\x62\x5e\x7d\x16\x91\xfb\x49\x13\x5f\xf9\x6e\x0b\x9e\xf7\xb7\xc1\x2e\x33\xbe\x79\x08\x05\xdc\x1d\xf0\x9f\x00\x00\x00\xff\xff\xbb\xc4\xf2\xba\xff\x10\x00\x00")

func cloudup_gceResourcesNodeupShTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudup_gceResourcesNodeupShTemplate,
		"cloudup/_gce/resources/nodeup.sh.template",
	)
}

func cloudup_gceResourcesNodeupShTemplate() (*asset, error) {
	bytes, err := cloudup_gceResourcesNodeupShTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/_gce/resources/nodeup.sh.template", size: 4351, mode: os.FileMode(493), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupPkiKubecfg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4e\xad\x2c\x48\xcc\x2c\xd2\xcf\x2e\x4d\x4a\x4d\x4e\x4b\xb7\xe2\x52\x50\x28\x2e\x4d\xca\x4a\x4d\x2e\xb1\x52\x48\xce\xb3\x85\x0a\x03\x45\x4b\x2a\x0b\x52\x81\x42\x39\x99\xa9\x79\x25\x5c\x80\x00\x00\x00\xff\xff\xe1\x34\x5e\x15\x36\x00\x00\x00")

func cloudupPkiKubecfgBytes() ([]byte, error) {
	return bindataRead(
		_cloudupPkiKubecfg,
		"cloudup/pki/kubecfg",
	)
}

func cloudupPkiKubecfg() (*asset, error) {
	bytes, err := cloudupPkiKubecfgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/pki/kubecfg", size: 54, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupPkiKubelet = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\x4e\xad\x2c\x48\xcc\x2c\xd2\xcf\x2e\x4d\x4a\xcd\x49\x2d\xb1\xe2\x52\x50\x28\x2e\x4d\xca\x4a\x4d\x2e\xb1\x52\x48\xce\xb3\x85\x0a\x03\x45\x4b\x2a\x0b\x52\x81\x42\x39\x99\xa9\x79\x25\x5c\x80\x00\x00\x00\xff\xff\xdf\x1f\x4b\x1d\x36\x00\x00\x00")

func cloudupPkiKubeletBytes() ([]byte, error) {
	return bindataRead(
		_cloudupPkiKubelet,
		"cloudup/pki/kubelet",
	)
}

func cloudupPkiKubelet() (*asset, error) {
	bytes, err := cloudupPkiKubeletBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/pki/kubelet", size: 54, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupPkiMaster = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x41\x4b\xc3\x40\x10\x85\xef\xfe\x8a\x61\x4f\x7a\x68\x8a\xd7\x82\x07\xb1\x07\x83\x58\x02\x2d\x78\x2c\x93\xdd\x69\x59\xb3\xd9\xc4\x9d\xdd\x94\x52\xfa\xdf\xdd\x4d\x82\x52\x62\xd5\x5b\xb2\xef\xcd\xbc\x6f\x5e\x45\xc7\x16\xb5\x9b\xd7\xc8\x9e\xdc\xe2\x06\x80\x43\xf9\x4e\xd2\x2f\x40\xda\x87\x2a\x94\xe4\x2c\x79\xe2\xd9\x60\x88\xba\x3f\xb6\xb4\x00\x26\xd7\xf5\xbf\x68\xe2\xb3\x45\x4f\x2b\xac\x89\xd3\x02\x80\x19\x7c\x0f\x4e\x1e\x32\x45\x3b\x0c\xc6\x5f\x15\x32\xee\xe4\xaf\x62\x76\x3a\x41\xf6\x64\x42\x02\x5a\xae\xd6\xcb\xa6\x46\x6d\xe1\x7c\x1e\x87\x44\x92\x5f\x7b\xdc\x22\x94\x46\xcb\x44\x16\x65\x31\xd5\x73\xdb\xc3\x9b\x1f\x1c\x6f\x64\xcc\x8b\x6d\x0e\x76\x1d\x2f\xd5\x92\xf2\x02\xee\x7b\x4b\xd4\xf4\x0e\x6c\xe3\xe1\xf6\x19\x79\x83\x7b\x10\xdb\xa1\x9c\xad\xb2\x2c\xee\x12\xc8\xe0\xa1\x8f\x84\xd9\x04\x55\xb8\xa6\xd3\x8a\x1c\x08\x3c\xb0\x18\x48\x2f\x7a\xdb\x20\x57\x5f\xdd\x91\x89\xdb\xb4\xcc\x8b\xf9\xa4\xfe\x59\x5c\x3c\x1e\x3e\x22\xa7\x28\x32\x4c\x57\xf2\xf6\x92\xfe\xcc\xd3\xed\xa3\x52\x8e\x98\xff\x9d\x67\xd5\xc5\xd7\x67\x00\x00\x00\xff\xff\x9a\x91\xe5\x36\x44\x02\x00\x00")

func cloudupPkiMasterBytes() ([]byte, error) {
	return bindataRead(
		_cloudupPkiMaster,
		"cloudup/pki/master",
	)
}

func cloudupPkiMaster() (*asset, error) {
	bytes, err := cloudupPkiMasterBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/pki/master", size: 580, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupResourcesCloudinitYamlTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x70\x2a\xcd\xcc\x49\xf1\xcb\x4f\x49\x75\xce\xcf\x4b\xcb\x4c\x57\x50\x4a\xce\xc9\x2f\x4d\xc9\xcc\xcb\x2c\x51\x52\x50\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x2d\xd6\x4f\x06\xcb\xea\x55\x26\xe6\xe6\xe8\x95\xa4\xe6\x16\xe4\x24\x96\xa4\x2a\x29\x38\x16\xa5\x17\x2b\xd4\xd6\x02\x02\x00\x00\xff\xff\xbf\x6d\x65\xf9\x47\x00\x00\x00")

func cloudupResourcesCloudinitYamlTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudupResourcesCloudinitYamlTemplate,
		"cloudup/resources/cloudinit.yaml.template",
	)
}

func cloudupResourcesCloudinitYamlTemplate() (*asset, error) {
	bytes, err := cloudupResourcesCloudinitYamlTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/resources/cloudinit.yaml.template", size: 71, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupResourcesClusterNameTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\xf2\x4b\xcc\x4d\x55\xa8\xad\x05\x04\x00\x00\xff\xff\x25\x81\x26\xb3\x12\x00\x00\x00")

func cloudupResourcesClusterNameTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudupResourcesClusterNameTemplate,
		"cloudup/resources/cluster-name.template",
	)
}

func cloudupResourcesClusterNameTemplate() (*asset, error) {
	bytes, err := cloudupResourcesClusterNameTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/resources/cluster-name.template", size: 18, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupResourcesConfigYamlTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x08\x4a\xcd\x4b\x49\x2d\xf2\xcb\x4f\x49\x0d\x2d\x70\xce\xcf\x4b\xcb\x4c\x57\x70\x2c\x4a\x2f\x56\xa8\xad\x05\x04\x00\x00\xff\xff\x70\xfa\x2f\xa3\x1d\x00\x00\x00")

func cloudupResourcesConfigYamlTemplateBytes() ([]byte, error) {
	return bindataRead(
		_cloudupResourcesConfigYamlTemplate,
		"cloudup/resources/config.yaml.template",
	)
}

func cloudupResourcesConfigYamlTemplate() (*asset, error) {
	bytes, err := cloudupResourcesConfigYamlTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/resources/config.yaml.template", size: 29, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudupTokensTokensYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x41\x0e\x83\x20\x10\x45\xf7\x9e\x62\xe2\xde\x74\xef\x09\x7a\x80\xee\x0d\x95\x29\x25\xc2\x8c\x01\x4c\x6a\x8c\x77\x2f\xb6\xc4\xc6\x8e\xdb\xf7\xdf\x83\x64\x22\xf6\x01\xd3\x65\x98\xee\xd8\xc2\xb2\x56\x55\x01\x4a\x7b\x4b\x07\xb2\x29\x0e\x93\x60\xcd\x18\xf8\x35\x1f\x70\x9c\x63\x42\xdf\xc4\xfe\x89\x7a\x72\x18\xda\x0a\x80\x94\xcf\x3f\xd4\xdf\xa9\xdd\xa7\xfa\x3f\xea\x99\x52\x60\x97\xa7\xce\x2b\x52\xe6\xac\x96\x8e\x78\xc6\xb1\x31\x96\x8c\x6c\xcb\x20\x02\xcf\x64\x13\x87\xd3\xe6\xb7\x89\x4c\x53\x94\x7e\x86\x59\x5c\x16\xb0\x0f\xb8\xaa\x78\x53\x06\xea\x6e\xe0\x11\xbb\xc0\x53\xda\x9e\x81\x75\xdd\x6f\x98\x79\x53\xf8\xe7\x8a\xb9\x43\xd2\x9b\xf1\x0e\x00\x00\xff\xff\xec\xfc\xaf\x2f\x9d\x01\x00\x00")

func cloudupTokensTokensYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudupTokensTokensYaml,
		"cloudup/tokens/tokens.yaml",
	)
}

func cloudupTokensTokensYaml() (*asset, error) {
	bytes, err := cloudupTokensTokensYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloudup/tokens/tokens.yaml", size: 413, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _config_awsDefaultsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x3d\x0e\xc3\x20\x0c\x05\xe0\x9d\x53\x3c\xa9\x7b\x07\xc6\xde\xa1\x5b\xd5\xcc\x8e\x78\xe4\x47\x10\x10\xb6\x15\x71\xfb\x7c\x5f\x51\xe3\xf8\xb7\xe2\x95\xbf\xd9\xf9\xc1\xd6\x63\x08\x2f\x2c\xc4\xe9\x6a\x90\x72\xcb\x54\xb8\x12\x02\x8b\xef\xca\x74\x78\xc5\x3a\x91\x98\xc5\x8b\x21\xb7\x01\xdb\x89\xab\x25\xea\x13\x00\x00\xff\xff\x71\x0d\x10\x8b\x50\x00\x00\x00")

func config_awsDefaultsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_config_awsDefaultsOptions,
		"config/_aws/defaults.options",
	)
}

func config_awsDefaultsOptions() (*asset, error) {
	bytes, err := config_awsDefaultsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/_aws/defaults.options", size: 80, mode: os.FileMode(420), modTime: time.Unix(1469599198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _config_awsMaster_master_dnsDefaultsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xc8\x4c\x53\xf0\x48\x2c\x0e\x49\x4c\x57\x50\x8a\xcf\x4d\x2c\x2e\x49\x2d\x8a\xcf\x49\x52\x52\xa8\xad\xe5\xf2\x05\xf3\x3c\xf3\x80\x44\x5e\x62\x8e\x5f\x62\x6e\xaa\x95\x02\x50\x83\x1e\x44\x3c\xa0\x34\x29\x27\x33\x19\x24\x0a\x52\x0b\x14\x4f\xcd\x29\x4e\xc5\xa5\x2d\xb1\x20\x53\x2f\x13\x2a\xa2\x07\x54\xeb\x9c\x53\x0a\x52\x84\xac\x3b\x2f\x05\xc4\x02\x04\x00\x00\xff\xff\xb6\x27\xb1\x83\x91\x00\x00\x00")

func config_awsMaster_master_dnsDefaultsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_config_awsMaster_master_dnsDefaultsOptions,
		"config/_aws/master/_master_dns/defaults.options",
	)
}

func config_awsMaster_master_dnsDefaultsOptions() (*asset, error) {
	bytes, err := config_awsMaster_master_dnsDefaultsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/_aws/master/_master_dns/defaults.options", size: 145, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _config_awsMaster_master_singleDefaultsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x4d\x2c\x2e\x49\x2d\xf2\xcc\x03\x12\x79\x89\x39\x7e\x89\xb9\xa9\x56\x0a\x86\xe6\x46\x7a\x46\x06\x7a\x06\x7a\x96\x5c\x80\x00\x00\x00\xff\xff\x54\x11\x3d\x05\x1f\x00\x00\x00")

func config_awsMaster_master_singleDefaultsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_config_awsMaster_master_singleDefaultsOptions,
		"config/_aws/master/_master_single/defaults.options",
	)
}

func config_awsMaster_master_singleDefaultsOptions() (*asset, error) {
	bytes, err := config_awsMaster_master_singleDefaultsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/_aws/master/_master_single/defaults.options", size: 31, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _config_gceDefaultsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x4d\x2c\x2e\x49\x2d\xf2\xcc\x4d\x4c\x4f\xb5\x52\xc8\xb6\x28\xd6\x35\xd4\x35\xd2\x4d\x49\x4d\xca\x4c\xcc\xd3\xcd\x4a\x2d\x2e\xce\x4c\xd5\x4d\xcc\x4d\x31\x33\xd1\x35\x32\x30\x34\xd3\x35\x30\xd1\x35\x34\xe7\x82\xe8\x09\xcb\xcf\x29\xcd\x4d\x0d\xa9\x2c\x00\x6a\x2c\x48\xd1\x2d\x2e\x4e\xe1\xe2\xf2\xcb\x4f\x49\x25\xc9\x2c\x40\x00\x00\x00\xff\xff\x71\x10\x06\xe7\x7f\x00\x00\x00")

func config_gceDefaultsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_config_gceDefaultsOptions,
		"config/_gce/defaults.options",
	)
}

func config_gceDefaultsOptions() (*asset, error) {
	bytes, err := config_gceDefaultsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/_gce/defaults.options", size: 127, mode: os.FileMode(420), modTime: time.Unix(1469600130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsDocker_e2e_storage_test_environmentE2eOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\xb2\xe2\x52\x50\x08\x2e\xc9\x2f\x4a\x4c\x4f\xb5\x52\x48\x49\x2d\xcb\x4c\x4e\xcd\x4d\x2c\x28\x48\x2d\x02\x04\x00\x00\xff\xff\xca\x83\x38\x6d\x1f\x00\x00\x00")

func configComponentsDocker_e2e_storage_test_environmentE2eOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsDocker_e2e_storage_test_environmentE2eOptions,
		"config/components/docker/_e2e_storage_test_environment/e2e.options",
	)
}

func configComponentsDocker_e2e_storage_test_environmentE2eOptions() (*asset, error) {
	bytes, err := configComponentsDocker_e2e_storage_test_environmentE2eOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/docker/_e2e_storage_test_environment/e2e.options", size: 31, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsDocker_networking_kubenetKubenetOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\xb2\xe2\x52\x50\x70\x2a\xca\x4c\x49\x4f\xb5\x52\x50\x52\x02\x04\x00\x00\xff\xff\x0a\x6c\x4d\xc2\x14\x00\x00\x00")

func configComponentsDocker_networking_kubenetKubenetOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsDocker_networking_kubenetKubenetOptions,
		"config/components/docker/_networking_kubenet/kubenet.options",
	)
}

func configComponentsDocker_networking_kubenetKubenetOptions() (*asset, error) {
	bytes, err := configComponentsDocker_networking_kubenetKubenetOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/docker/_networking_kubenet/kubenet.options", size: 20, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsDockerDockerOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xc9\x4f\xce\x4e\x2d\xb2\xe2\x52\x50\x70\x2a\xca\x4c\x49\x4f\xb5\x52\x48\x4e\x2a\x32\x00\x72\x7d\xf2\xd3\x7d\x52\xcb\x52\x73\xac\x14\xca\x13\x8b\xf2\x80\x02\x9e\x01\x21\x89\x49\x39\xa9\xc5\x56\x0a\x69\x89\x39\xc5\xa9\x60\x11\xdf\xc4\xe2\x42\x18\x1f\x10\x00\x00\xff\xff\x0f\x72\x81\xc9\x4a\x00\x00\x00")

func configComponentsDockerDockerOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsDockerDockerOptions,
		"config/components/docker/docker.options",
	)
}

func configComponentsDockerDockerOptions() (*asset, error) {
	bytes, err := configComponentsDockerDockerOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/docker/docker.options", size: 74, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeApiserver_awsKubeApiserverAwsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\x0c\xf0\x0c\x4e\x2d\x2a\x4b\x2d\xb2\xe2\x52\x50\x70\xce\xc9\x2f\x4d\x09\x28\xca\x2f\xcb\x4c\x01\x0a\x28\x24\x96\x17\x73\x01\x02\x00\x00\xff\xff\xaa\x57\x6c\xf3\x24\x00\x00\x00")

func configComponentsKubeApiserver_awsKubeApiserverAwsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeApiserver_awsKubeApiserverAwsOptions,
		"config/components/kube-apiserver/_aws/kube-apiserver.aws.options",
	)
}

func configComponentsKubeApiserver_awsKubeApiserverAwsOptions() (*asset, error) {
	bytes, err := configComponentsKubeApiserver_awsKubeApiserverAwsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-apiserver/_aws/kube-apiserver.aws.options", size: 36, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeApiserver_gceKubeApiserverGceOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\x0c\xf0\x0c\x4e\x2d\x2a\x4b\x2d\xb2\xe2\x52\x50\x70\xce\xc9\x2f\x4d\x09\x28\xca\x2f\xcb\x4c\x01\x0a\x28\xa4\x27\xa7\x72\x01\x02\x00\x00\xff\xff\x0d\xb6\xb0\xd1\x24\x00\x00\x00")

func configComponentsKubeApiserver_gceKubeApiserverGceOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeApiserver_gceKubeApiserverGceOptions,
		"config/components/kube-apiserver/_gce/kube-apiserver.gce.options",
	)
}

func configComponentsKubeApiserver_gceKubeApiserverGceOptions() (*asset, error) {
	bytes, err := configComponentsKubeApiserver_gceKubeApiserverGceOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-apiserver/_gce/kube-apiserver.gce.options", size: 36, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeApiserverKubeApiserverOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\x51\x8b\x9c\x30\x14\x85\xdf\xfb\x2b\xc2\xf6\xd5\xea\xec\x76\xa0\x90\x37\x2b\x2d\x0c\x2b\xad\x5d\x97\xbe\x2e\x99\x78\x3b\x06\x63\x22\x37\x37\x6e\x87\x65\xff\x7b\xaf\x19\x99\x42\x6b\x8b\x20\x7a\xcf\x77\xee\x09\x27\xf7\xf1\x08\x65\x73\x68\x01\x67\x40\xf9\x46\x88\x16\x74\x44\x68\x3c\x92\x14\xfb\xfd\x7b\x9e\x34\x8a\xfa\x16\xe7\x85\x44\x07\x04\x41\x8a\x22\xe0\x5c\x0c\xd7\xc1\x6f\xa8\x0d\xfd\x84\xfe\xe7\x79\x45\xc2\xfa\xcb\x40\xd9\x75\x08\x81\xbd\xb7\x77\x1f\xf2\x1d\x3f\xb7\x3c\xfc\x44\xba\xbb\x44\xb3\xd0\x13\x4d\xb2\x28\xae\xba\xdc\xef\x76\x7f\x40\x5f\xf9\x85\xa6\x4b\x47\x80\x19\x1c\x85\xb7\x5b\xae\xbb\x94\x37\x9a\x10\x8c\x77\x95\x77\x84\xde\x4a\xf1\x45\x8d\x10\x26\xa5\xa1\x36\x3f\x40\x9f\xb5\x85\xac\x36\xa3\xa1\x07\xe5\x4e\x80\xd9\x12\x61\x34\x94\x5a\xfb\xe8\x28\x7b\x80\xe0\x23\x6a\xf8\x16\x3d\xa9\xac\xe1\x70\x13\x88\x13\xbf\x7b\x1b\x47\xa8\xd5\x11\x6c\x6a\x2b\x99\x2a\x1b\x59\xc4\x43\x93\x76\x49\xf1\xf2\x22\xf2\x4d\x49\xbc\xbe\xb2\xab\xb2\x86\x37\x55\xe5\x67\x63\xe1\xaf\x32\x0b\xad\x72\x8d\xc4\xd8\x47\x15\x8c\x2e\x23\xf5\xdb\xdc\x71\x91\x9f\x14\xeb\xb9\x0e\x33\xf3\x8f\x75\x5b\x01\xd2\x36\x1d\x52\x83\xb9\x86\xb4\x9a\xd1\x06\xcd\xac\x08\xee\xe1\xfc\x5f\xc3\x00\xcb\xed\x3d\xfa\x01\xdc\xbf\x8f\x32\x38\xff\xec\x9e\x68\x81\xc2\x7a\x98\xda\x9f\x6a\xbe\x22\xee\x3d\xdd\x86\xb5\xfe\x79\x49\x64\xfb\x09\x3a\x29\x08\x23\xf0\xfc\x30\xaa\xb5\xaf\xf4\x25\x6e\x96\xa5\xef\xd4\x64\x2e\xe9\x37\xdc\xd7\xaf\x00\x00\x00\xff\xff\xa7\xc2\x57\x56\xa2\x02\x00\x00")

func configComponentsKubeApiserverKubeApiserverOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeApiserverKubeApiserverOptions,
		"config/components/kube-apiserver/kube-apiserver.options",
	)
}

func configComponentsKubeApiserverKubeApiserverOptions() (*asset, error) {
	bytes, err := configComponentsKubeApiserverKubeApiserverOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-apiserver/kube-apiserver.options", size: 674, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\xce\xcf\x2b\x29\xca\xcf\xc9\x49\x2d\xf2\x4d\xcc\x4b\x4c\x4f\x2d\xb2\xe2\x52\x50\x70\xce\xc9\x2f\x4d\x09\x28\xca\x2f\xcb\x4c\x01\x0a\x28\x24\x96\x17\x73\x01\x02\x00\x00\xff\xff\xac\x28\x3e\x46\x2c\x00\x00\x00")

func configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptions,
		"config/components/kube-controller-manager/_aws/kube-controller-manager.aws.options",
	)
}

func configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/_aws/kube-controller-manager.aws.options", size: 44, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManager_gceKubeControllerManagerGceOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\xce\xcf\x2b\x29\xca\xcf\xc9\x49\x2d\xf2\x4d\xcc\x4b\x4c\x4f\x2d\xb2\xe2\x52\x50\x70\xce\xc9\x2f\x4d\x09\x28\xca\x2f\xcb\x4c\x01\x0a\x28\xa4\x27\xa7\x72\x01\x02\x00\x00\xff\xff\x0b\xc9\xe2\x64\x2c\x00\x00\x00")

func configComponentsKubeControllerManager_gceKubeControllerManagerGceOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManager_gceKubeControllerManagerGceOptions,
		"config/components/kube-controller-manager/_gce/kube-controller-manager.gce.options",
	)
}

func configComponentsKubeControllerManager_gceKubeControllerManagerGceOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManager_gceKubeControllerManagerGceOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/_gce/kube-controller-manager.gce.options", size: 44, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\xce\xcf\x2b\x29\xca\xcf\xc9\x49\x2d\xf2\x4d\xcc\x4b\x4c\x4f\x2d\xb2\xe2\x52\x50\x00\x0a\xa6\x65\xa6\x97\x16\xa5\x3a\xe7\xe4\x97\xa6\x04\xe5\x97\x96\xa4\x16\x5b\x29\x94\x14\x95\xa6\x72\x01\x02\x00\x00\xff\xff\x46\x36\xd8\xc3\x34\x00\x00\x00")

func configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptions,
		"config/components/kube-controller-manager/_networking_classic/kube-controller-manager.networking-classic.options",
	)
}

func configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/_networking_classic/kube-controller-manager.networking-classic.options", size: 52, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\xce\xcf\x2b\x29\xca\xcf\xc9\x49\x2d\xf2\x4d\xcc\x4b\x4c\x4f\x2d\xb2\xe2\x52\x50\x00\x0a\xa6\x65\xa6\x97\x16\xa5\x3a\xe7\xe4\x97\xa6\x04\xe5\x97\x96\xa4\x16\x5b\x29\xa4\x25\xe6\x14\xa7\x72\x01\x02\x00\x00\xff\xff\x7d\xc4\x2a\x13\x35\x00\x00\x00")

func configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptions,
		"config/components/kube-controller-manager/_networking_kubenet/_networking_external/kube-controller-manager.networking-external.options",
	)
}

func configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/_networking_kubenet/_networking_external/kube-controller-manager.networking-external.options", size: 53, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\x75\xce\xcf\x2b\x29\xca\xcf\xc9\x49\x2d\xf2\x4d\xcc\x4b\x4c\x4f\x2d\xb2\xe2\x52\x50\x00\x0a\xa6\x65\xa6\x97\x16\xa5\x3a\xe7\xe4\x97\xa6\x04\xe5\x97\x96\xa4\x16\x5b\x29\x94\x14\x95\xa6\x72\x01\x02\x00\x00\xff\xff\x46\x36\xd8\xc3\x34\x00\x00\x00")

func configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptions,
		"config/components/kube-controller-manager/_networking_kubenet/kube-controller-manager.networking-kubenet.options",
	)
}

func configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/_networking_kubenet/kube-controller-manager.networking-kubenet.options", size: 52, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeControllerManagerKubeControllerManagerOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xcd\x8e\xea\x30\x0c\x85\xf7\xf7\x29\x2c\xee\xe2\xae\xf8\xdd\x5c\xd4\x1d\x2a\x33\x12\xe2\x47\x08\x9e\xc0\xa4\xa6\x13\x91\xc6\x92\x93\x14\x55\x88\x77\x1f\xa7\x20\x34\xa3\x19\x75\x53\x9f\xf3\xd9\x71\x4e\xd6\xe9\x44\x25\xfb\x28\xec\x1c\xc9\x16\x3d\xd6\x24\xc5\x1f\x80\x3d\xc6\x8f\xa3\xb4\xd9\x17\x4f\x91\x42\x01\xe3\x20\xed\xf8\xf2\x12\x14\xda\x62\x88\x8a\xc3\x74\xf6\x7f\x34\xd1\x6f\x5a\xcc\x27\xf3\x89\x1a\x0b\xe7\xd8\x60\xa4\x1d\x57\x54\xae\x96\x07\xed\x8e\x92\x48\x1d\x3d\xec\x6c\xeb\x24\x54\x3a\x4e\xd5\x81\x53\x3f\xfa\x8c\x2e\x64\xf7\x48\xd2\x5a\x43\x0b\x63\x38\xf9\xb8\x17\xdb\xea\x90\x35\x75\xef\xd6\xd1\x8f\x05\xc6\x41\x69\x92\xd1\x85\x3a\x6d\xdd\x70\xbd\xa1\x96\x5c\x01\x33\xad\x0e\xcc\xb1\x5c\xfc\xde\x66\x70\x64\x24\xe6\x5d\x5c\xca\xfb\xef\xb0\x51\xea\x76\xfb\x5a\xc3\xfd\xae\xc0\xaa\xd1\x38\x7a\xab\xff\x83\x41\x9e\x32\x34\xaf\xbc\x86\xcd\x23\xb0\xc1\x03\xff\x0b\x4b\xa6\xe0\xff\x45\x08\x44\x0d\x44\x86\x13\x01\xfa\x0e\x84\xd0\x41\xc5\x57\x1f\x6c\x45\x59\x47\x77\xc5\x2e\xa8\x64\x7d\x0d\x08\x8e\xb0\x22\x01\x72\x64\xa2\x65\x9f\x6f\xd3\x2b\x6f\x4f\x21\x3f\xc8\x37\xed\x19\xe7\x67\x00\x00\x00\xff\xff\x53\xa4\xe8\x17\xbe\x01\x00\x00")

func configComponentsKubeControllerManagerKubeControllerManagerOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeControllerManagerKubeControllerManagerOptions,
		"config/components/kube-controller-manager/kube-controller-manager.options",
	)
}

func configComponentsKubeControllerManagerKubeControllerManagerOptions() (*asset, error) {
	bytes, err := configComponentsKubeControllerManagerKubeControllerManagerOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-controller-manager/kube-controller-manager.options", size: 446, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeDnsKubeDnsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8f\x4d\x8f\x82\x30\x10\x86\xef\xfc\x8a\x49\xf6\xba\x0b\x8b\x1a\x0f\xbd\xca\x85\x90\x08\x11\x13\x8f\xa6\x96\x49\x69\xec\x07\xe9\x14\x39\x10\xfe\xbb\x45\x3c\xce\xfb\x3c\x33\x93\xb7\x1a\x1f\x58\x9c\x5b\x96\x00\x5c\x70\xd0\x4a\x70\x62\xb0\x8b\x53\x8b\xfe\x85\xbe\x6c\x18\xcc\x33\xdc\x50\xeb\xca\xba\xc9\xae\xa9\x12\x58\x36\x90\xff\xc3\xb2\x44\xaf\x70\x86\x2b\xfb\xb1\xd2\x93\x1e\x29\xa0\x8f\xf7\xb6\x74\x33\x7e\xe0\x5a\x17\x35\x83\xda\x0a\x84\x09\x81\x02\xf7\x01\xa8\x57\xc3\xa0\xac\x04\xe3\x3c\x82\x32\x5c\x22\xfd\x7e\xd9\x48\x2b\x08\x3d\x9a\xb8\x5e\xae\x88\x81\x14\x3e\x55\x2e\x93\xce\x49\x8d\x77\xe1\x6c\x88\x0f\xd0\x53\xf6\x8c\x0d\x3a\x4b\x7f\xdc\x74\xc7\x03\xcb\xd3\x7d\xf2\x0e\x00\x00\xff\xff\x3f\x75\xa8\x48\xd4\x00\x00\x00")

func configComponentsKubeDnsKubeDnsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeDnsKubeDnsOptions,
		"config/components/kube-dns/kube-dns.options",
	)
}

func configComponentsKubeDnsKubeDnsOptions() (*asset, error) {
	bytes, err := configComponentsKubeDnsKubeDnsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-dns/kube-dns.options", size: 212, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeProxyKubeProxyOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x50\xc9\x6a\xe3\x40\x10\xbd\xfb\x2b\x1e\x9e\xcb\x0c\xd8\xf2\xe0\xa3\x6e\x33\x39\x99\x38\xc1\x04\xf2\x01\x25\x75\x49\x6a\xdc\x8b\xd2\x8b\x62\x61\xfc\xef\xa9\x96\xb3\x80\x10\xdd\xd5\x6f\xad\xc7\xdc\xf0\x29\xf8\xcb\x5c\xaf\x80\xa3\xef\x8f\x3c\xb1\xa9\xb1\x97\xdb\x2f\xec\xff\x5a\x58\xdd\x0f\x09\x2d\xe5\xc8\x38\x0b\x78\x3b\x16\x34\x1e\x4e\xaf\x88\x89\xc2\x44\x49\x7b\x07\xf9\xba\x6c\x0c\x9c\x57\x1c\x37\x08\x1c\xb3\x49\xda\xf5\xd0\x6e\x51\x52\x6c\x68\x66\x85\xc8\x61\xd2\x2d\x23\x8f\x8a\x12\xc7\x0a\xff\x73\xda\xa0\xd7\xd3\x82\x4d\xb0\x3e\x30\xde\x7d\x36\x0a\x0d\x83\xd0\x04\xa6\x73\x79\x6b\x07\x72\x3d\x2f\x5a\xc9\x23\x0d\x0c\x3f\x71\x18\x98\x94\x98\xbd\x65\x1d\xd8\xb2\x4b\x11\x9d\x0f\xe0\x8b\x8e\x8b\x79\x6b\x72\x4c\x1c\x62\xb5\xf0\xfe\xb9\xf9\x53\x06\x03\x8b\x4d\x1c\xbe\x7d\xda\xd6\xdb\x91\x9c\x96\x84\xcd\x2c\xb6\xd2\x71\xf4\xa1\x34\x23\xf3\xc5\xd1\xae\x94\x5e\x94\x8a\x23\x47\x71\xf3\x1d\xbc\x64\x09\x18\x39\x6c\x4b\x77\x90\x52\x5b\xef\x22\x7e\x73\xd5\x57\xe8\x4c\x96\x54\xea\x4f\x09\x20\xe4\x97\x3b\xaf\x2e\x8b\x5d\xc9\xe8\x60\xa9\xe7\x1a\xd7\xeb\xfd\x84\xf5\xcf\x82\xd7\xb8\xdd\x0a\xe4\x89\x4a\x83\x1a\x43\x4a\x63\xac\x77\x3b\xc1\x56\xf7\xd9\xc1\xc9\x4f\xf2\x3d\x93\xe5\x02\xfe\x08\x00\x00\xff\xff\x70\x19\xd9\xcd\xca\x01\x00\x00")

func configComponentsKubeProxyKubeProxyOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeProxyKubeProxyOptions,
		"config/components/kube-proxy/kube-proxy.options",
	)
}

func configComponentsKubeProxyKubeProxyOptions() (*asset, error) {
	bytes, err := configComponentsKubeProxyKubeProxyOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-proxy/kube-proxy.options", size: 458, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeSchedulerKubeSchedulerOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x3d\x8e\x83\x30\x10\x85\x7b\x4e\xf1\xc4\x16\x5b\xed\x0a\x68\x16\xb9\xde\x2d\x56\x21\x55\x4e\x30\xe0\x27\x82\x62\x6c\xc9\x36\x41\x08\x71\xf7\x98\xfc\x14\xd1\x34\x6f\xbe\x19\x7d\x33\x87\xa9\xe5\xa9\x3b\x53\x4f\x86\x5e\x65\xc0\x51\x42\x4c\x09\x65\xf5\xf3\x5d\xa4\x2a\x55\x5d\xd4\x45\x1a\x34\xae\x6f\x78\xa5\x51\xa8\x52\xf7\x3f\x4a\x4f\x85\x75\x7d\x24\xe4\x97\x24\xfa\x0a\x2f\x53\x8e\x6d\x4b\x5b\x1f\xf8\x75\x0c\xf6\x33\x22\x90\x23\xa2\x43\x4b\x88\x5d\xe0\x29\x06\xda\xcd\x36\x0c\x9a\x3b\x17\x33\xcb\x12\x12\x1a\x6c\x0f\x81\xa1\x68\x7a\xd0\xb0\x8b\x83\xb3\xfb\xf9\x3b\xf9\x7b\x82\xfd\xd3\x37\xa6\x10\xfd\xc4\xec\x16\x00\x00\xff\xff\x26\x3a\x7b\x22\xcf\x00\x00\x00")

func configComponentsKubeSchedulerKubeSchedulerOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeSchedulerKubeSchedulerOptions,
		"config/components/kube-scheduler/kube-scheduler.options",
	)
}

func configComponentsKubeSchedulerKubeSchedulerOptions() (*asset, error) {
	bytes, err := configComponentsKubeSchedulerKubeSchedulerOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kube-scheduler/kube-scheduler.options", size: 207, mode: os.FileMode(420), modTime: time.Unix(1471581503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubelet_awsKubeletAwsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcd\xc1\x0a\xc2\x30\x10\x84\xe1\x7b\x9f\x62\xa8\x6f\x91\x93\xe2\x45\xf0\xa0\x28\xe2\x79\x6d\x46\x5b\x6c\x5c\xd9\x6c\xe2\xeb\x1b\xa5\xd7\x8f\x19\xfe\x7d\xb9\x71\xa6\x87\x0e\xd8\xce\x5a\xe2\xd1\xb4\x4e\x91\x16\x20\x9f\xfc\xc3\x87\x69\x79\x9f\x54\x3d\x20\xea\xf0\xa4\x35\x5c\xe1\x92\x09\x1f\x89\x51\xb3\xbf\x24\x11\x77\xd3\xf4\x97\xcd\xf5\x8c\x44\x97\x28\x2e\xc8\xb4\x3a\x0d\x6c\x97\xdd\x32\x3c\x54\x9a\xb5\x40\x40\xbf\x6e\x85\xbe\xfb\x06\x00\x00\xff\xff\x91\xbc\x4e\x37\x81\x00\x00\x00")

func configComponentsKubelet_awsKubeletAwsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubelet_awsKubeletAwsOptions,
		"config/components/kubelet/_aws/kubelet.aws.options",
	)
}

func configComponentsKubelet_awsKubeletAwsOptions() (*asset, error) {
	bytes, err := configComponentsKubelet_awsKubeletAwsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kubelet/_aws/kubelet.aws.options", size: 129, mode: os.FileMode(420), modTime: time.Unix(1468982797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubelet_gceKubeletGceOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\x41\xaa\xc3\x30\x0c\x05\xf7\x39\x85\x2f\x10\xfe\xde\xdb\x6c\x3e\x94\x42\x49\x4f\x90\x58\xc2\x88\xc4\x7e\x46\xb6\x0a\xbd\x7d\x9d\xb4\x90\xa5\x66\x06\xf4\x6e\xb6\xf2\xce\xcd\x0f\xce\x4d\x3b\x8c\x1e\x8a\x97\x10\xab\x77\x31\x70\x87\xff\x8b\x68\x91\x7c\x07\xb1\x77\x45\x91\xa4\x06\x83\xd5\x71\x55\xa1\x78\x14\xb3\xe5\x26\x89\xa7\xa8\xb0\x52\xbd\xfb\x23\x84\x8d\x75\xa4\x85\x13\x72\x0f\x7e\x2f\xae\x60\xfb\x82\xae\x9e\xef\xda\x38\x5d\xa6\x9e\xf7\xb1\xe5\x44\x33\xd0\x3a\x1d\x3e\x01\x00\x00\xff\xff\x03\x44\x5f\x88\xa5\x00\x00\x00")

func configComponentsKubelet_gceKubeletGceOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubelet_gceKubeletGceOptions,
		"config/components/kubelet/_gce/kubelet.gce.options",
	)
}

func configComponentsKubelet_gceKubeletGceOptions() (*asset, error) {
	bytes, err := configComponentsKubelet_gceKubeletGceOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kubelet/_gce/kubelet.gce.options", size: 165, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubelet_isolate_mastersKubeletOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\xca\x3d\x0a\x03\x21\x10\x06\xd0\xde\x53\xcc\x39\x6c\x63\xc0\x10\x6c\xbc\xc1\xa8\x5f\x64\x60\x18\x83\x3f\xf7\xdf\xed\xb6\x7d\xbc\xc4\x6b\x63\x7e\x4f\x81\x62\x7b\x47\x94\x51\x87\x55\x51\xbc\x3e\x21\x7b\xfa\xb1\x2e\xdc\xfc\x36\x2e\x8a\x80\x72\x7a\x17\xeb\x91\xad\x29\xe6\x7a\x42\x64\x99\x7f\xb1\x34\x1a\x3c\xd9\x30\xb8\x2b\x00\x00\xff\xff\x29\x0d\xc2\x16\x5b\x00\x00\x00")

func configComponentsKubelet_isolate_mastersKubeletOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubelet_isolate_mastersKubeletOptions,
		"config/components/kubelet/_isolate_masters/kubelet.options",
	)
}

func configComponentsKubelet_isolate_mastersKubeletOptions() (*asset, error) {
	bytes, err := configComponentsKubelet_isolate_mastersKubeletOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kubelet/_isolate_masters/kubelet.options", size: 91, mode: os.FileMode(420), modTime: time.Unix(1470924340, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubelet_networking_kubenetKubeletKubenetOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2e\x4d\x4a\xcd\x49\x2d\xb1\xe2\x52\x50\xf0\x4b\x2d\x29\xcf\x2f\xca\x0e\xc8\x29\x4d\xcf\xcc\xf3\x4b\xcc\x4d\xb5\x52\xc8\x06\xca\xe6\xa5\x96\x00\x25\x83\x52\x93\xf3\xf3\x92\x33\x73\x52\x9d\x3d\x5d\x82\xac\x14\x4a\x8a\x4a\x53\xb9\x00\x01\x00\x00\xff\xff\xe3\x77\x91\x81\x3c\x00\x00\x00")

func configComponentsKubelet_networking_kubenetKubeletKubenetOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubelet_networking_kubenetKubeletKubenetOptions,
		"config/components/kubelet/_networking_kubenet/kubelet.kubenet.options",
	)
}

func configComponentsKubelet_networking_kubenetKubeletKubenetOptions() (*asset, error) {
	bytes, err := configComponentsKubelet_networking_kubenetKubeletKubenetOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kubelet/_networking_kubenet/kubelet.kubenet.options", size: 60, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configComponentsKubeletKubeletOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6b\xdb\x4c\x10\xbe\xe7\x57\x0c\xbc\x87\x37\x81\x60\xc9\x4e\x4b\x83\x6e\x89\x5d\xa8\x71\x62\x8c\x5d\xe8\xd1\xac\x76\xc7\xd2\xe2\xd1\x8e\xbb\x1f\x36\x26\xe4\xbf\x77\x56\x72\x93\x40\x0b\xc5\xb0\x98\x99\x67\x9e\x8f\xd9\xd5\x22\xd5\x48\x18\xab\x2b\x80\xaf\x4e\xd5\x84\x33\xac\x53\xd3\x58\xd7\x7c\x53\xce\x10\xfa\x50\x41\xf4\x09\xa5\x3f\x65\xb7\xb3\x4d\x05\x05\x46\x5d\xec\x65\xce\x3b\x8c\x18\x8a\x4e\x39\xbb\xc3\x10\x83\x60\x1e\x88\xf8\xb4\xf2\xf6\x68\x09\x1b\x34\x6f\xb3\x4f\xdc\x3c\xe1\x11\xa9\x82\x49\x66\xa2\x14\x22\xfa\xd9\x72\x53\xc1\xcb\x0b\xfc\x40\xa2\x85\xe3\x93\xdb\xa0\x3f\x5a\x8d\xf3\x15\x8c\x4b\x78\x7d\xfd\x80\xe4\x4e\x59\xd7\x83\x47\xef\xc3\x43\xf5\x02\xec\xcd\x25\x8f\xd3\xc7\x75\xf9\x26\xfb\xa8\xea\x73\xb0\x71\xa6\xb0\x63\xf7\x9e\xe4\x61\x35\xcf\x52\x7d\xb8\x36\xc6\x43\xa8\x8a\x22\x53\x3f\xab\xcc\x3c\x77\x72\x38\x45\x4b\xd5\xe1\x40\xbe\x64\x27\xad\x9f\x09\xbd\x32\x38\x9d\xcf\xd6\x83\x93\x3f\xca\x19\x7d\x35\x90\x7c\xd8\xeb\x1a\x1b\x9b\x4b\x1b\xdd\xa2\x49\x94\x97\x5c\xc1\x4e\x51\xf8\x9b\x15\x71\x32\x9e\x7c\x19\x95\xf2\x1b\x57\xf7\xe5\x7d\x29\x98\xff\x64\x43\x50\x33\xc7\x10\xbd\x3a\xc0\xc9\xc6\x16\x94\x30\xec\x11\xb2\xea\x2d\xd4\x29\x42\x6c\xd1\xc9\x61\x83\xf4\x89\xa0\x46\xf0\x78\x20\xa5\xd1\xc0\x75\x72\x84\x41\x1a\xf8\xbf\x97\x72\x72\x4e\xae\x77\xa0\xd9\xda\xc0\xa4\x22\x9a\x6d\xd7\xdb\xbe\x11\xb9\x15\x9b\x21\xe3\x58\x3c\x4c\xee\x46\x9f\x3e\x8f\xca\xe2\x6e\x30\xb2\x1e\x38\xb3\x5a\xaf\xfd\xdb\x4c\xff\x5f\xc9\xe5\xeb\x4c\x06\xf5\x19\x16\xd3\x67\xb8\xce\x30\x83\x3b\x95\x28\x0e\x2e\xad\xd3\x94\x8c\x20\x76\xec\x41\x93\xf2\x36\x9e\x6f\xfa\x1d\x69\x76\x5a\x1e\xcd\xa0\x7c\xb9\xa7\x3e\xf8\xd6\xf0\xb6\xa7\x3e\x09\xd5\xe5\x6d\x42\x7b\x79\x9c\xb7\x10\x58\x72\x81\x56\x0e\x0c\x03\x71\x13\xfa\xb9\xef\x79\x11\x86\x31\x5c\x26\x3b\x96\xe4\x4a\xeb\xbc\x86\x28\xc3\x79\xe6\xc4\x89\x0c\x90\xdd\xe7\x38\x9c\x9a\xf6\x9f\xdf\xc0\xaf\x00\x00\x00\xff\xff\x9c\xe7\x12\xbe\x2d\x03\x00\x00")

func configComponentsKubeletKubeletOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configComponentsKubeletKubeletOptions,
		"config/components/kubelet/kubelet.options",
	)
}

func configComponentsKubeletKubeletOptions() (*asset, error) {
	bytes, err := configComponentsKubeletKubeletOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/components/kubelet/kubelet.options", size: 813, mode: os.FileMode(420), modTime: time.Unix(1470924340, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configDefaultsOptions = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x2d\xcd\x29\xc9\xac\xca\xcf\x4b\xb5\x52\x28\x29\x2a\x4d\xe5\xe2\x72\xce\x29\x2d\x2e\x49\x2d\x72\xf1\x0b\x76\xc9\xcf\x4d\xcc\xcc\xb3\x52\x48\x86\x88\xe8\xe5\xe4\x27\x27\xe6\x70\x71\x79\x97\x26\xa5\x86\x16\xa7\x16\x59\x29\x24\xa6\xe4\x66\xe6\x71\x71\x01\x02\x00\x00\xff\xff\x23\x88\xe1\x73\x43\x00\x00\x00")

func configDefaultsOptionsBytes() ([]byte, error) {
	return bindataRead(
		_configDefaultsOptions,
		"config/defaults.options",
	)
}

func configDefaultsOptions() (*asset, error) {
	bytes, err := configDefaultsOptionsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/defaults.options", size: 67, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgrades = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x0c\x08\xb1\xb2\x0a\x48\x2d\xca\xcc\x4f\xc9\x4c\xb6\xb2\x0a\x2d\x48\x49\x2c\x49\xd5\x0d\x48\x4c\xce\x4e\x4c\x4f\xd5\xf5\xc9\x2c\x2e\x29\x56\x50\x32\x54\xb2\xe6\x42\x57\x98\x97\x58\x52\x92\x9a\x97\x92\x9a\xa2\x1b\x5a\x90\x5e\x94\x98\x92\x0a\x51\x86\xae\xce\xb1\xb4\x24\x3f\x39\x27\x35\x31\xcf\x33\xaf\x24\xb5\xa8\x2c\x31\x47\x41\xc9\x1c\xa8\x0c\x10\x00\x00\xff\xff\xaa\x17\xdd\x76\x77\x00\x00\x00")

func nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgradesBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgrades,
		"nodeup/_automatic_upgrades/_debian_family/files/etc/apt/apt.conf.d/20auto-upgrades",
	)
}

func nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgrades() (*asset, error) {
	bytes, err := nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgradesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_automatic_upgrades/_debian_family/files/etc/apt/apt.conf.d/20auto-upgrades", size: 119, mode: os.FileMode(420), modTime: time.Unix(1473349394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgrades = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgradesBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgrades,
		"nodeup/_automatic_upgrades/_debian_family/packages/unattended-upgrades",
	)
}

func nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgrades() (*asset, error) {
	bytes, err := nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgradesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_automatic_upgrades/_debian_family/packages/unattended-upgrades", size: 0, mode: os.FileMode(420), modTime: time.Unix(1473349394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x53\xb1\x8e\xdb\x30\x0c\xdd\xfd\x15\x04\x02\x74\x53\xd5\x1c\x0a\x14\x30\x90\x2c\x9d\xdb\xde\xd4\xb5\x50\x64\xc6\x16\x22\x8b\x06\x45\xbb\x4d\xbf\xbe\x92\xad\xf4\xce\x97\x04\x77\xd3\x8d\x7a\xe4\x7b\x7a\x7a\xa4\x36\x70\xa2\x01\x15\xd3\x28\x2e\xb4\x30\x50\x13\x07\xb4\x95\x19\xdc\x4f\xe4\xe8\x28\xd4\x30\x6d\xab\x93\x0b\x4d\x0d\x8f\xd4\x54\x3d\x8a\x69\x8c\x98\xba\x02\x08\xa6\xc7\x7a\xc5\x2f\x60\x1c\x8c\xcd\x95\xf1\x80\x2a\x9e\xa3\x60\x5f\x65\xd5\xcc\xe9\x28\xca\x77\x94\xdf\xc4\xa7\x1a\x84\x47\x4c\x98\xa5\x20\xc6\x85\x74\x5f\xee\x50\xb7\x75\x01\x5c\x6f\xda\x82\xeb\x8c\xa3\xca\x44\x26\xef\x91\xe7\x06\x4b\x7d\x6f\x92\xd1\xf9\xa0\x40\x1f\x5c\xd0\xb1\x2b\x27\x65\xab\x4d\xc1\xc7\xc8\x73\xed\xa5\x08\x28\x75\x20\x12\xe5\x9a\x9d\x9e\x0c\x6b\xef\x0e\xfa\xb9\x0b\x5d\xaa\xa9\x2f\x3f\x2d\x11\x8f\xae\xbd\xd3\xfa\xd4\x90\xba\x3b\x34\x5e\xba\xbf\x6a\x20\x96\xdd\xf6\xd3\xc3\xe7\x2f\xb0\xdd\xef\x17\x22\xb5\x2b\xe2\xc7\x04\xc0\xc3\xfe\xc3\xb6\x7a\xdd\xec\xc0\x34\xb9\x06\x79\xd7\x32\xbe\xa3\xf7\xd9\x59\x44\x3b\xb2\x93\xf3\xd7\x64\x08\xff\xc8\x92\x39\xc0\xc0\x6e\x72\x1e\x5b\x6c\xfe\x4f\x17\x60\x22\x3f\xf6\xf8\x8d\xc6\x20\xf1\x32\x9c\x3e\x9f\x1e\x8d\x74\x35\x68\x14\xab\x63\xf4\xda\x22\x4b\x2c\x42\xcb\x0e\x24\x54\xcd\xa8\xca\x7b\x53\x4a\x8c\xa6\xf9\x11\xfc\xb9\xdc\xb0\xb9\x16\x2c\xc1\x2e\xa5\x8b\x56\x02\x9f\x61\x4f\x22\x47\xe3\x23\xde\x70\xf5\x4a\x34\x2b\x9f\x57\xf0\x0b\x8f\x6f\x54\x2f\x33\x5a\x49\xe7\x87\xab\x75\xe1\x4a\x7c\x09\xb8\xfc\x9e\x4c\x98\x2f\xb9\x8c\x64\xb9\x30\xef\x51\xec\x0c\xa3\xb6\x66\xce\xd4\x1d\x9d\x35\x82\x4b\xe0\x77\xe2\xbe\xab\xf6\x96\x70\x6e\x44\x73\x57\x2f\xad\x72\xda\x81\x73\xd4\x27\xe4\x80\x5e\x73\xfa\xc7\xd4\xcf\x81\xfc\x2a\xef\xbe\x11\xc7\x66\xad\xb8\xb9\xb6\x78\x19\xf8\x6a\x05\xfe\x05\x00\x00\xff\xff\x88\x86\x11\x7f\xf4\x04\x00\x00")

func nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplate,
		"nodeup/_kope_routing/files/etc/kubernetes/manifests/kope-routing.manifest.template",
	)
}

func nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplate() (*asset, error) {
	bytes, err := nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kope_routing/files/etc/kubernetes/manifests/kope-routing.manifest.template", size: 1268, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x41\x4f\xc3\x30\x0c\x85\xef\xf9\x15\xd6\xee\xd9\x84\x84\x38\xe4\x36\x2a\x84\x38\xc0\x05\xc4\xdd\x4a\xbd\x2d\x6a\x89\xab\xc4\x99\x40\xd3\xfe\x3b\x4e\x17\x51\x40\xda\xa5\x8d\xe3\xe7\xf7\x3e\x07\xa7\xf0\x4e\x29\x07\x8e\x0e\x8e\x37\x66\x08\xb1\x77\xd0\x71\xdc\x85\xbd\x29\x59\x3b\xce\x58\x88\xf8\x41\x0e\x06\x9e\xc8\x26\x2e\x12\xe2\xde\x00\xd4\xae\xd3\x3f\x80\xf0\x40\x3a\x7e\x3a\xc1\x23\xc9\x5b\x2d\x60\xf5\x5b\xbc\x82\xf3\xd9\xf8\xb1\x64\xf9\xe3\x37\xb2\xc7\x51\x0d\x5a\xe7\xe2\xe5\x29\x49\xd8\x05\x8f\x42\x16\x8b\x1c\x38\x05\xf9\xb2\x3d\x0a\xce\x01\xf7\x98\xe9\xee\xf6\x21\x7a\xee\x09\xba\x6d\xb7\xa8\xd7\xdb\xfc\x2a\x49\xd3\x6a\x58\x75\x52\xbc\xa3\xba\xc2\x41\x64\xca\x6e\xb3\xd1\xe9\xf5\x33\xd6\xa4\xa7\xa8\x9f\x88\xe3\x8b\x62\xcc\x68\xac\x17\x9f\x32\xa3\xb5\x73\x83\x69\x64\x3f\xa8\x6d\xeb\xff\x4f\x71\xd9\xa7\x06\x06\xaf\xd8\xde\x73\x89\x62\x9b\x95\xf1\x25\x25\x5a\xea\xab\xc2\xef\x00\x00\x00\xff\xff\x2f\x27\x16\x26\x8b\x01\x00\x00")

func nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplate,
		"nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template",
	)
}

func nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplate() (*asset, error) {
	bytes, err := nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template", size: 395, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x31\x30\x50\xe2\xaa\x05\x04\x00\x00\xff\xff\xa9\x27\x5b\x67\x14\x00\x00\x00")

func nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMeta,
		"nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template.meta",
	)
}

func nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMeta() (*asset, error) {
	bytes, err := nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kope_routingFilesVarLogKopeRoutingLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kope_routingFilesVarLogKopeRoutingLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kope_routingFilesVarLogKopeRoutingLog,
		"nodeup/_kope_routing/files/var/log/kope-routing.log",
	)
}

func nodeup_kope_routingFilesVarLogKopeRoutingLog() (*asset, error) {
	bytes, err := nodeup_kope_routingFilesVarLogKopeRoutingLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kope_routing/files/var/log/kope-routing.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kope_routingFilesVarLogKopeRoutingLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kope_routingFilesVarLogKopeRoutingLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kope_routingFilesVarLogKopeRoutingLogMeta,
		"nodeup/_kope_routing/files/var/log/kope-routing.log.meta",
	)
}

func nodeup_kope_routingFilesVarLogKopeRoutingLogMeta() (*asset, error) {
	bytes, err := nodeup_kope_routingFilesVarLogKopeRoutingLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kope_routing/files/var/log/kope-routing.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x8a\x93\x98\xdd\x10\x28\x8b\xa5\x4c\x30\x57\x48\x48\x0c\x6c\xd7\xf8\xd4\x58\x89\x7d\x96\x7d\x49\x69\xab\xfe\x77\xec\x90\x32\xd0\xcd\xfe\xde\xbb\x77\xef\x1e\x60\xe0\x40\x0a\x8f\x09\x02\x9b\x14\xa8\xab\x30\xd8\x4f\x8a\xc9\xb2\xd7\x30\x37\xd5\x60\xbd\xd1\xf0\xce\xa6\x72\x24\x68\x50\x50\x57\x00\x1e\x1d\xe9\xbf\xd9\x15\xa4\x80\x5d\xa1\xd3\x9e\x54\x3a\x25\x21\x57\x95\xc4\xe2\xef\x39\xc9\x8e\xe4\xc8\x71\xd0\x20\x71\xa2\xcc\x3a\xf6\x82\xd6\xe7\x5d\xc5\xa1\xee\x33\x01\xac\xc3\xc3\xca\xea\xcc\x54\x19\x89\x3c\x8e\x14\x75\xb3\x79\x5e\x2c\x1d\x3b\x87\xb9\xe2\xf2\x51\x50\x4f\x29\xd6\x7b\xeb\xff\xd9\x57\x55\xf5\x84\xa3\xf4\x67\x15\x38\x4a\xdb\x3c\x3e\x6d\x5f\x6e\xca\x99\x3d\xa9\x52\xa1\xbd\x5c\x60\xf3\xb6\xfb\xf8\xca\x00\xae\xd7\x9b\x3e\xb7\xdb\xe5\x99\xa8\x9b\xa2\x95\xd3\x6b\xce\xa6\x6f\xf9\xdd\x0b\x10\xa2\x9d\xed\x48\x07\x32\xeb\x7d\x3f\x01\x00\x00\xff\xff\xe7\x6d\x29\xaf\x5a\x01\x00\x00")

func nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplate,
		"nodeup/_kubernetes_master/_aws/kope-aws/files/etc/kubernetes/manifests/kope-aws.manifest.template",
	)
}

func nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/_aws/kope-aws/files/etc/kubernetes/manifests/kope-aws.manifest.template", size: 346, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\x6d\x6f\xdb\x36\x10\xfe\xae\x5f\x71\xb5\x83\xbd\x00\xb1\x64\x7b\x29\x06\x2c\x70\x07\x2f\x4d\x31\xa3\x85\x03\xc4\xee\x8a\xa2\x28\x06\x4a\x3a\x49\x44\x28\x52\x23\x4f\x56\x0d\xec\xc7\xef\x48\xc9\x69\x15\xef\xd3\x30\xb4\xfe\x62\x91\xbc\x7b\xf8\x3c\xc7\x7b\x99\x3e\x4b\x52\xa9\x93\x54\xb8\x2a\x8a\xa6\x70\x63\x9a\xa3\x95\x65\x45\xb0\x9c\x2f\xae\x60\x5f\x21\xbc\x6e\x53\xb4\x1a\x09\x1d\xac\x5b\xaa\x8c\xe5\x7f\xa5\x20\x58\x39\xb0\xe8\xd0\x1e\x30\x8f\xa3\x29\xbb\xbf\x91\x19\x6a\x87\x39\xb4\x3a\x47\x0b\xc4\xee\xeb\x46\x64\xfc\x37\x9c\x5c\xc2\x1f\x68\x9d\x34\x1a\x96\xf1\x1c\x7e\xf0\x06\x93\xe1\x68\xf2\xe3\x35\x23\x1c\x4d\x0b\xb5\x38\x82\x36\x04\xad\x43\x86\x90\x0e\x0a\xa9\x10\xf0\x53\x86\x0d\x81\xd4\x90\x99\xba\x51\x52\xe8\x0c\xa1\x93\x54\x85\x6b\x06\x10\xa6\x01\xef\x07\x08\x93\x92\x60\x6b\xc1\xf6\x0d\xaf\x8a\x2f\xed\x40\x50\x20\xec\x7f\x15\x51\xf3\x4b\x92\x74\x5d\x17\x8b\x40\x36\x36\xb6\x4c\x54\x6f\xe8\x92\x37\x9b\x9b\xdb\xed\xee\x76\xc6\x84\x83\xcb\x5b\xad\xd0\x79\xe1\x7f\xb5\xd2\xb2\xd4\xf4\x08\xa2\x61\x3e\x99\x48\x99\xa5\x12\x1d\x18\x0b\xa2\xb4\xc8\x67\x64\x3c\xdf\xce\x4a\x92\xba\xbc\x04\x67\x0a\xea\x84\x45\x46\xc9\xa5\x23\x2b\xd3\x96\x46\xc1\x3a\xb1\x63\xcd\x5f\x1a\x70\xb8\x84\x86\xc9\x7a\x07\x9b\xdd\x04\x7e\x5b\xef\x36\xbb\x4b\xc6\x78\xb7\xd9\xff\x7e\xf7\x76\x0f\xef\xd6\xf7\xf7\xeb\xed\x7e\x73\xbb\x83\xbb\x7b\xb8\xb9\xdb\xbe\xdc\xec\x37\x77\x5b\x5e\xbd\x82\xf5\xf6\x3d\xbc\xde\x6c\x5f\x5e\x02\x72\xa8\xf8\x1a\xfc\xd4\x58\xcf\x9f\x49\x4a\x1f\xc6\xf0\x74\xb0\x43\x1c\x11\x28\x4c\x4f\xc8\x35\x98\xc9\x42\x66\xac\x4b\x97\xad\x28\x11\x4a\x73\xe0\x74\x60\x39\xd0\xa0\xad\xa5\xf3\x8f\xe9\x98\x5e\xce\x28\x4a\xd6\x92\x04\x85\x9d\x33\x51\xb1\xcf\x2f\x65\x44\x8e\xf9\xa6\x66\xa4\x57\x4a\x94\xce\x2b\x15\x90\x4a\x9a\x15\xbc\xf4\xf1\x22\x2b\xb2\x07\xe8\x2a\x99\x55\x90\x9b\xec\x01\x3d\x4f\x36\x77\x83\x2f\xb8\x36\xcb\x58\x40\xd1\x2a\x75\x8c\x23\x85\x74\x06\xba\x9a\x47\x11\x03\xf0\x6b\x90\x6d\xf1\x9a\x61\x22\xf0\x89\x4a\xc2\xd2\x9f\x3d\xe6\xaa\x10\xca\x61\xc4\xfb\xb2\x18\x5f\xb6\x78\x91\xe4\x78\x48\x34\xc3\xc3\xf2\xc5\x77\x8b\x6b\xaf\x41\x7b\x4b\x00\x92\x35\x9a\x96\xe0\xa7\xf9\xc9\xda\x5f\x0d\x33\x09\x89\xb3\x87\xc4\x09\x45\xc9\x03\x97\xcb\x8c\x4b\xca\xf5\x5f\xa2\x91\xa1\x40\x6c\xcc\xb7\x9f\x81\x07\x54\x9b\xad\x2e\x7e\x0d\x5f\xcc\xe5\xc3\x07\xb8\xb0\x19\xac\x56\x30\x87\x8f\x1f\x87\xcb\x43\x9a\xc2\xbf\x4a\x9d\x5c\x3c\xdd\xfa\x7b\x31\x09\x0e\xa8\x46\x70\x8b\xe5\xd5\x53\xc0\x27\x21\xf1\xc1\x0a\x27\x85\xfc\xcf\x72\x1d\x97\x4f\xde\xaa\xaf\x29\x77\xf9\x0d\xe5\x66\x46\x93\x35\x8a\xf5\xce\x6a\xa1\x99\xd2\x57\xd4\x7d\xf5\x3f\xe8\x3e\x89\x9f\x7e\x6e\x67\xe3\x9a\x2b\x8d\xef\xb8\xec\xcf\x1a\xf3\x98\x9b\x87\x24\xe8\x4b\x4b\x19\xd3\xc4\xd1\xa3\x98\xb3\xc2\x66\x2e\x3f\x3f\x32\x81\xd4\xa2\x78\xb8\x7e\xbc\x6d\x67\x6a\xf4\xe1\x76\xa3\x48\x57\xc2\x37\xc9\x81\xee\xe9\x24\x17\x58\x73\xff\xe3\x5d\xa3\x0e\x7d\x93\xe2\xa6\x13\x24\x9c\x84\x8f\xf4\x8d\xd5\xb3\xc9\x33\xf0\x05\xc8\x3d\xe8\x84\x38\xd8\x0f\xcc\xa6\xb0\xb7\x47\x70\x47\x47\x58\x67\xa4\xbc\x87\xef\x93\xf8\xbd\xe3\x19\xf4\xe8\xca\x23\x87\x1f\x38\x8f\x87\x90\x7e\x36\x1f\xb3\x3d\x8f\xab\x53\x88\x4d\x68\xa7\x8b\xe7\x8c\xc6\x09\x93\x3b\x48\x91\x37\xfc\x0c\x62\x90\xc6\x8f\x06\xdf\xf8\x42\x08\xc6\xd1\x17\x25\x0f\x30\x86\xe9\x41\x16\xcf\xa3\x28\x37\x1a\x7d\x1f\xdd\x9a\x2e\x3c\x46\x0c\xeb\x82\xd8\x21\x64\x63\xd3\xba\x8a\x87\x0c\xe7\x29\xcf\x45\x4e\x3d\x9e\xa1\x9e\x3b\x55\x82\xfa\x66\x3e\x88\xf1\xd3\xc5\x74\x7e\xa6\xe4\x20\x79\x0e\xf6\xd6\xbd\x0e\x7e\x5f\xbf\xad\xb1\x7b\xc2\x25\xd8\xa4\x38\xa4\x66\xfc\x4f\x00\x00\x00\xff\xff\x1d\xad\x2b\xbc\x38\x08\x00\x00")

func nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsSh,
		"nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh",
	)
}

func nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsSh() (*asset, error) {
	bytes, err := nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh", size: 2104, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMeta,
		"nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh.meta",
	)
}

func nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\x31\x6e\x84\x30\x10\x45\x7b\x9f\x82\x0b\x18\xf7\x91\x28\x12\x91\x22\x8a\x50\x0a\x14\xa5\x40\x14\x83\x19\x81\x13\x3c\x46\x9e\xef\x28\xb9\xfd\xb2\x14\xab\xd5\x76\xbf\xf8\xef\xbd\xe1\x53\x02\x46\xd3\xb2\xfa\x1c\x76\x84\x24\xcd\x7b\x99\x38\x0b\x83\xd5\x76\xa4\xe0\x5c\x3d\xcf\x73\x92\xea\x63\xfa\x66\x8f\xaa\x23\xa1\x85\xb3\x69\x93\x2f\x91\x05\x74\x42\x2b\xb0\xeb\x93\x73\x4b\xc0\x5a\xa6\xda\xa7\xe8\x7e\x6e\x9e\xbb\x69\xcc\xd0\x73\xfe\x0d\x9e\x47\xf3\xfa\xc7\xbe\x07\x65\x34\x8e\xe1\x1f\xff\x36\x9e\x71\x4b\xd7\xb8\xd6\xba\x1e\xe8\x9b\x28\x68\xdb\x46\xf3\x45\x02\x9e\x5f\xfe\x9b\x58\x36\x04\x5b\x94\x73\x7d\x98\x16\xc6\x25\x00\x00\xff\xff\xa2\x3a\x82\x1e\xd1\x00\x00\x00")

func nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsService,
		"nodeup/_kubernetes_master/_kube-master-addons/services/kube-master-addons.service",
	)
}

func nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsService() (*asset, error) {
	bytes, err := nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/_kube-master-addons/services/kube-master-addons.service", size: 209, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x70\x76\x74\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x0d\xc8\xcf\xcf\xd1\x73\x2c\x0e\x2e\x29\xca\xcc\x4b\x57\xa8\xad\x05\x04\x00\x00\xff\xff\x92\x4b\xf4\x7b\x20\x00\x00\x00")

func nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplate,
		"nodeup/_kubernetes_master/certs/files/srv/kubernetes/ca.crt.template",
	)
}

func nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/certs/files/srv/kubernetes/ca.crt.template", size: 32, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xd0\x70\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x50\xca\x4d\x2c\x2e\x49\x2d\x52\xd2\xd4\x73\x2c\x0e\x2e\x29\xca\xcc\x4b\x57\xa8\xad\x05\x04\x00\x00\xff\xff\x0d\xf0\x07\x7e\x25\x00\x00\x00")

func nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplate,
		"nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.cert.template",
	)
}

func nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.cert.template", size: 37, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xd0\x08\x28\xca\x2c\x4b\x2c\x49\xf5\x4e\xad\x54\x50\xca\x4d\x2c\x2e\x49\x2d\x52\xd2\xd4\x73\x2c\x0e\x2e\x29\xca\xcc\x4b\x57\xa8\xad\x05\x04\x00\x00\xff\xff\xde\x48\xe9\x7b\x24\x00\x00\x00")

func nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplate,
		"nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.key.template",
	)
}

func nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.key.template", size: 36, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifest = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x8f\xd3\x30\x10\xbd\xe7\x57\x44\x3e\x70\xda\xd4\x4d\x00\x81\x72\xd8\x13\x12\x27\xa0\x12\x12\x97\x55\x85\xdc\x78\x68\xad\xfa\x23\xd8\x4e\x51\x55\xf5\xbf\x33\x76\x12\xd7\x59\x76\x55\xb4\x87\xac\xe7\xe3\xcd\xcc\x7b\xaf\x97\x82\xb0\x5e\xfc\x00\xeb\x84\xd1\xa4\x2d\xc9\xa9\x26\x0f\x05\x39\x0a\xcd\xc3\x6b\x63\x78\x78\x2a\xf0\x8c\x33\xcf\x30\x74\x29\xca\x92\x68\xa6\x80\xb4\x04\x7c\xc7\x2b\x07\xf6\x04\xb6\x82\x13\x68\xef\xb0\x78\x4a\xbb\x9e\x75\x10\x20\x8e\xc3\x0e\x2a\x77\x76\x1e\x14\x29\xae\x08\xe6\x7a\xe8\x48\x8b\x83\x0f\xc6\xf9\xaf\xe0\xff\x18\x7b\xc4\x42\x6f\x07\xc0\x6c\x67\xb4\x67\x42\xe3\x42\xa4\x7d\x42\xb0\x32\x4e\x4c\x33\xcb\x71\x68\xaa\x8a\x03\x31\x2b\x14\xdb\xc7\xf4\xbe\xb3\x2b\x61\xe8\xde\x98\xbd\x84\x9f\x37\x34\x1a\xfa\xda\x66\xd5\xac\xea\xb9\xc7\x82\x33\x83\xed\xc0\x4d\x67\x4d\xc1\xdf\x03\x38\x9f\xc7\x30\xda\xf5\x43\x00\xaf\xd7\x6b\x3c\x62\x8c\x5d\xe3\xf7\x3a\x61\x75\x46\x29\x16\x39\x7b\x4a\x5d\x53\x2f\xdd\x09\x4d\xdd\x61\x9a\x9a\x25\xaa\xee\xdf\x18\x1d\x9c\xa5\xd2\x74\x4c\xc6\xb6\xb0\x74\x59\x55\x52\x20\x7d\xba\xea\x01\x89\x1e\xac\x74\xe5\xc1\xfb\xbe\xa5\xb4\x6e\x3e\xac\xd6\xf8\x57\xb7\xcd\xdb\x8f\x35\x16\x32\xce\x6d\x79\x8b\xbe\x5b\xaf\x1b\x8c\x22\x12\x7f\x25\x15\x54\xad\xb8\xb0\x25\x3d\x31\x1b\xc7\xd1\x18\x1a\xe5\x2c\xeb\xc7\xc7\x98\x90\x66\x1f\x93\x53\x7c\x85\xef\xb2\x79\x7c\x53\x93\xc5\xfe\xdb\x89\x0c\x29\xb0\x0a\x9c\xdb\x58\xb3\x83\x9c\xdc\xb0\xf6\x67\xf0\x4b\x6e\x83\x0d\x22\xb9\xf3\x6e\x19\x2b\xa4\x37\x36\x24\xc3\xb6\x79\x94\xf9\x43\x68\xa1\x07\x60\x12\xff\x9d\x25\x99\x4b\x88\xd0\xc2\x0b\x26\x3f\x81\x64\xe7\xef\x80\x2e\xe0\x41\xd0\xfa\x7d\x2a\xf0\x42\x81\x19\x7c\x9e\x5b\xe8\x19\xe6\x26\x07\xa2\x07\x6f\xfe\x1b\xfd\x1e\xf7\xca\x36\x4a\x46\xdb\x8c\x0b\x07\x3d\x1e\x96\x37\x66\x99\xb4\x6f\xa2\x21\xc1\x77\x52\x20\xc3\xf7\xe0\x9f\xf1\x91\xc1\x87\xcc\xc2\xa1\xb9\x30\x27\x23\x07\x05\x5f\xcc\xa0\xa3\xc1\xd3\x75\x69\x3a\x6a\x1d\x64\xbe\x8d\x26\x2a\x14\x6f\x66\xbe\x67\x93\x64\x05\x16\x18\xff\xa6\xe5\x19\xf3\xbf\x98\x74\xf0\x5c\x8b\x05\x38\xfa\xe6\x2e\xfe\x0b\x5e\xfb\x8f\x71\xe3\x77\x3b\x8a\x58\xe0\xc1\xd3\xb1\x93\x88\x99\x80\xcb\x1b\x47\xee\xc6\xf9\x97\x17\x1c\xa6\xb4\xa7\x8a\xe1\xcf\xcf\x56\x3d\xbf\xdd\x1f\xe6\xc5\x13\x97\xc0\xcb\xfb\xee\x61\xbf\x76\x6d\x04\x2f\xb6\xc5\xf5\xfa\x37\x00\x00\xff\xff\xba\x3c\x2f\xc0\x9f\x05\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifestBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifest,
		"nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd-events.manifest",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifest() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifestBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd-events.manifest", size: 1439, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifest = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcd\xae\xd3\x3c\x10\xdd\xe7\x29\x22\x2f\xbe\xd5\x4d\x9d\xe4\x03\x81\xb2\xe8\x0a\x89\x15\x50\x09\x89\xcd\x55\x85\xdc\x78\x68\xad\xfa\x27\xd8\x4e\x51\x55\xf5\xdd\x19\x3b\xa9\xeb\xdc\x0b\x2a\xea\x22\xc9\x99\x99\x73\x66\xe6\x4c\x2f\x05\x61\x83\xf8\x06\xd6\x09\xa3\x49\x57\x92\x53\x43\x9e\x0a\x72\x14\x9a\x87\xaf\x8d\xe1\xe1\x53\x81\x67\x9c\x79\x86\xd0\xa5\x28\x4b\xa2\x99\x02\xd2\x11\xf0\x3d\xaf\x1c\xd8\x13\x58\xcc\x9a\x71\x37\xb0\x1e\x42\xed\x71\xdc\x41\xe5\xce\xce\x83\x22\xc5\x15\x59\xdc\x00\x3d\xe9\x50\xf1\x60\x9c\xff\x0c\xfe\x97\xb1\x47\x4c\xf4\x76\x04\x8c\xf6\x46\x7b\x26\x34\x76\x42\xba\x67\x24\x2b\xa3\x54\x12\x2b\x27\xb5\x94\x15\x05\x31\x2a\x14\xdb\xc7\xf0\xbe\xb7\x2b\x61\xe8\xde\x98\xbd\x84\xef\x77\x36\x1a\xea\xba\x76\xd5\xae\x9a\x5b\x8d\x05\x67\x46\xdb\x83\x9b\xe7\x99\xc1\x9f\x23\x38\x9f\x63\x88\xf6\xc3\x18\xc8\xdb\xba\xc6\x21\x26\xec\x1a\x9f\xd7\x99\xab\x37\x4a\xb1\xb8\xac\xe7\x54\x35\xd7\xd2\x9d\xd0\xd4\x1d\x66\xd5\x2c\x50\xf5\xaf\x31\x3a\x3a\x4b\xa5\xe9\x99\x8c\x65\xa1\xe9\xb2\xaa\xa4\xc0\xf5\xe9\x6a\x00\xb0\xd5\x68\xa5\x2b\x0f\xde\x0f\x1d\xa5\x4d\xfb\x6e\x55\xe3\xaf\xe9\xda\xff\xdf\xd7\x98\xc8\x38\xb7\xe5\x1d\x7d\x53\xd7\x0d\xa2\xc8\xc4\xff\x12\x0a\x76\x56\x5c\xd8\x92\x9e\x98\x8d\x72\x34\x40\x65\xb3\x5e\x47\x44\x9a\x7d\x44\x57\xf8\x52\xb6\xeb\xff\x1a\xb2\xe8\x78\x3b\x8f\x2f\xc5\x09\x34\x38\xb7\xb1\x66\x07\xf9\x3a\x43\xa3\x1f\xc1\x2f\xb7\x19\x8c\x0f\xeb\x4c\xdd\x64\x7b\x20\x83\xb1\x21\x18\xfa\xcb\x51\xe6\x0f\xa1\x84\x1e\x80\x49\x7c\xbd\x99\x70\x4b\x21\x42\x0b\x2f\x98\xfc\x00\x92\x9d\xbf\x02\xfa\xce\x83\x85\xcd\xdb\x94\xe0\x85\x02\x33\xfa\x3c\xb6\x70\x30\xe8\xa6\x9b\xc3\xab\xbb\x5f\xdc\x74\xda\xb1\xaf\xac\xa3\x74\x5a\x9b\xa9\xe1\xe0\xc0\xd3\x72\xc6\x2c\x92\xfa\x4d\x6b\x48\xf4\xbd\x14\xa0\xfd\x23\xfa\x17\xfb\xc8\xe8\x43\x64\x71\x93\xb9\x31\x27\x23\x47\x05\x9f\xcc\xa8\xe3\x49\xa7\xe9\x92\x3a\x9a\x1c\xfc\xbd\x4b\x13\x15\x92\x37\xb7\x7d\xdf\xce\x22\x4b\xb0\xc0\xf8\x17\x2d\xcf\x18\xff\xc1\xa4\x83\x97\x5e\x2c\xc8\xf1\x6e\x1e\xf2\xe7\x47\xf6\x0f\x3a\xd3\x73\x3b\xb9\x57\xe0\xa4\xf3\x94\xb3\x7b\x99\x73\xcb\xe1\xa6\xa5\x4d\xc2\x97\x3f\x9c\x96\xd2\x9e\x2a\x86\xff\x34\x5b\x0d\xfc\x3e\x78\xd0\x8b\xb3\x2d\x89\x97\x83\x3d\xe2\x7e\x35\x66\x64\x2d\xb6\xc5\xf5\xfa\x3b\x00\x00\xff\xff\x0e\xf6\x72\xd9\x7c\x05\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifestBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifest,
		"nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd.manifest",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifest() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifestBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd.manifest", size: 1404, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLog,
		"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMeta,
		"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log.meta",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLog,
		"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMeta,
		"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log.meta",
	)
}

func nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterEtcdUsersEtcd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x14\xc9\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf8\x12\x07\xc8\xde\x85\xa5\x0b\x53\x07\xe0\x00\x21\xfd\x22\x91\x5c\x5b\xaa\x5d\xb8\x3e\x74\x7d\xef\x82\xc7\x32\x2f\x13\xee\xdd\x0f\x5d\xf1\x25\x82\x89\x8a\xe6\x16\x23\x92\x96\x78\xde\x66\x0c\x43\xab\xc1\xf3\x77\x6e\x7e\x58\x5e\x45\xa2\x53\x75\x42\x89\xd7\xb0\x62\xae\xfe\x1e\x26\xdd\x37\xfe\xed\x53\xf7\xc2\x6c\xab\xc8\x2f\x00\x00\xff\xff\xf4\xb8\xb6\x4a\x62\x00\x00\x00")

func nodeup_kubernetes_masterEtcdUsersEtcdBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterEtcdUsersEtcd,
		"nodeup/_kubernetes_master/etcd/users/etcd",
	)
}

func nodeup_kubernetes_masterEtcdUsersEtcd() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterEtcdUsersEtcdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/etcd/users/etcd", size: 98, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x03\x8a\x5a\x29\x64\x97\x26\xa5\xea\x16\x57\x16\x97\xa4\xe6\x72\x01\x02\x00\x00\xff\xff\x63\x20\x9d\x6e\x3d\x00\x00\x00")

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYaml,
		"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/addons/namespace.yaml",
	)
}

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYaml() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/addons/namespace.yaml", size: 61, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\xff\x53\x1b\xc7\x92\xff\x5d\x7f\xc5\x3c\x41\x82\x94\x43\xc2\x90\x97\xbb\x7b\x10\xfc\x0a\x63\xec\xd3\xc5\xc1\x2e\xc0\xc9\xa5\xf2\x5c\xd4\xb2\x1a\x89\x8d\x57\xbb\xca\xee\x0a\x59\x87\xf5\xbf\xdf\xa7\xbb\x67\x66\x67\xbf\x08\x70\x52\x77\x57\x57\x75\x54\x25\x46\x9a\x99\x9e\x9e\xfe\xde\x3d\x3d\x6c\xfd\x65\xef\x26\x4a\xf6\x6e\x82\xfc\xb6\xd3\xd9\x52\xa7\xe9\x7c\x95\x45\xd3\xdb\x42\x1d\x3c\xdb\xff\x4e\x5d\xdd\x6a\xf5\xc3\xe2\x46\x67\x89\x2e\x74\xae\x4e\x16\xc5\x6d\x9a\xe1\xdf\x38\x56\x3c\x2b\x57\x99\xce\x75\x76\xa7\xc7\xc3\xce\x16\x96\xbf\x89\x42\x9d\xe4\x7a\xac\x16\xc9\x58\x67\xaa\xc0\xf2\x93\x79\x10\xe2\x1f\x33\xb2\xab\x7e\xd2\x59\x1e\xa5\x89\x3a\x18\x3e\x53\x3d\x9a\xd0\x35\x43\xdd\xfe\x11\x20\xac\xd2\x85\x9a\x05\x2b\x95\xa4\x85\x5a\xe4\x1a\x20\xa2\x5c\x4d\xa2\x58\x2b\xfd\x29\xd4\xf3\x42\x45\x89\x0a\xd3\xd9\x3c\x8e\x82\x24\xd4\x6a\x19\x15\xb7\xbc\x8d\x01\x02\x34\xd4\x2f\x06\x44\x7a\x53\x04\x98\x1d\x60\xfe\x1c\x9f\x26\xfe\x3c\x15\x14\x8c\x30\xfd\xdc\x16\xc5\xfc\x70\x6f\x6f\xb9\x5c\x0e\x03\x46\x76\x98\x66\xd3\xbd\x58\x26\xe6\x7b\x6f\x46\xa7\x67\xe7\x97\x67\x03\x20\xcc\x4b\xde\x27\xb1\xce\xe9\xe0\xbf\x2f\xa2\x0c\x47\xbd\x59\xa9\x60\x0e\x7c\xc2\xe0\x06\x58\xc6\xc1\x52\xa5\x99\x0a\xa6\x99\xc6\x58\x91\x12\xbe\xcb\x2c\x2a\xa2\x64\xba\xab\xf2\x74\x52\x2c\x83\x4c\x03\xca\x38\xca\x8b\x2c\xba\x59\x14\x15\x62\x59\xec\x70\x66\x7f\x02\xc8\x15\x24\xaa\x7b\x72\xa9\x46\x97\x5d\xf5\xe2\xe4\x72\x74\xb9\x0b\x18\x3f\x8f\xae\xfe\xed\xed\xfb\x2b\xf5\xf3\xc9\xc5\xc5\xc9\xf9\xd5\xe8\xec\x52\xbd\xbd\x50\xa7\x6f\xcf\x5f\x8e\xae\x46\x6f\xcf\xf1\xe9\x95\x3a\x39\xff\x45\xfd\x30\x3a\x7f\xb9\xab\x34\x48\x85\x6d\xf4\xa7\x79\x46\xf8\x03\xc9\x88\xc8\xc8\xac\x53\x97\x5a\x57\x10\x98\xa4\x82\x50\x3e\xd7\x61\x34\x89\x42\x9c\x2b\x99\x2e\x82\xa9\x56\xd3\xf4\x0e\xe2\x80\xe3\xa8\xb9\xce\x66\x51\x4e\xcc\xcc\x81\xde\x18\x50\xe2\x68\x16\x15\x41\xc1\xdf\x34\x0e\x35\x24\xf9\x22\x81\xba\x59\xe4\x51\x42\x28\xc4\xe9\x14\x90\x69\xab\xe5\xad\x66\xe4\x02\x35\x8d\xee\x74\x02\xd6\xfd\xa6\xc3\x42\xe5\xb7\xe9\x22\x06\x85\xb5\x0a\x33\x1d\x80\x12\x80\xb0\x0c\xb0\x5b\x8c\x8f\xe3\x95\xd2\x09\x16\x87\xc2\x83\x3c\x88\x8b\x5d\xc2\x43\xed\xe9\x22\xdc\xfb\xe8\xa4\x76\x2f\x18\x8f\x09\x21\xd0\x14\x7b\x00\xc2\x2c\x48\x70\x90\x31\x89\xee\x22\x2e\xe8\x7b\x96\x8d\xa0\x18\xaa\xcb\x22\xc8\x0a\xa5\x71\xc2\x15\x04\x0f\x67\xbc\xd1\x71\xba\xe4\x41\x30\x24\x03\x4e\x69\xb6\xe2\x83\xbc\x0b\xb2\x60\x06\xf0\x59\x8e\x0f\xdb\xfb\x6a\x1e\x90\x20\xa6\x0a\x9b\x0d\xb0\x5b\x87\xe6\xbc\x19\xfd\x38\xba\x3a\x61\x56\xe0\xd3\xfe\x10\x82\x98\x14\x59\x1a\xc7\x58\xa5\x20\x06\x22\xe4\xf3\x71\x20\x42\xc0\x62\x05\x14\xa3\x4c\x25\x80\x4d\x88\x85\xb7\x20\x3b\x1f\xfb\x5b\x20\x07\x45\x03\x29\x73\x08\x3d\xf4\x8f\xd6\x82\x30\x4f\x59\xbe\x2b\x82\x0e\x59\x62\x62\xe7\x0e\x0e\xd4\x20\x2c\x16\x41\x1c\xaf\x40\xd6\xc4\xe2\x92\xb3\x56\xa5\x98\xcd\x70\x04\x08\x09\xc9\x5f\x87\xea\xdf\x73\xc8\x22\xa9\x63\x79\x00\x0c\x8f\x63\x60\x00\x12\x01\xd2\x50\x9d\x2e\xb2\x4c\x27\x05\x60\x1a\xc2\xcf\x16\x39\xa1\x2a\x48\x40\x1d\x56\xc1\x2c\x16\x18\xf8\xea\xbb\x21\x24\x32\x2a\x40\x9a\x31\xa3\x3c\xcf\xd2\x1b\x28\x92\x18\x80\x20\x5e\x06\x2b\x1c\x23\xcd\x88\xf4\xaa\x37\xc2\x66\x10\x8f\x1d\x4c\xbf\xd5\xe1\x47\x26\x0c\x7e\x42\xa0\x32\x59\xd0\x29\xa2\x89\x02\xac\x65\x9a\x7d\xcc\x69\xa7\xfd\x67\xcf\xbe\xc2\x28\xb4\xb8\x8f\x99\xff\x3c\x24\xf1\x03\xd6\x82\x39\x48\x16\x15\x38\x6d\x41\x68\xfc\xeb\x50\xfd\x6c\xa9\x4a\xcb\x09\x12\xc9\x6e\x91\x16\x41\xac\x62\x9d\x4c\xc1\x5e\x88\x09\xb1\x39\x37\x7c\x36\x42\x35\x65\xd1\x24\x51\x0f\x12\x43\x68\x18\x53\x6c\x9b\x18\xd2\x0c\xd5\x3b\x7b\xa8\x88\xc5\x8d\x8f\xc6\x27\x8d\xf5\xec\x50\x9d\x5c\xbc\xbe\xfe\xf1\xe4\x3f\x8e\x0f\x9e\xfd\xed\x5f\xf6\xbf\x3b\x20\x6d\x7f\x7d\x7a\x46\x04\xff\x1b\x96\xea\x0c\x3c\x9b\xb1\xb1\x83\xb2\x2d\xf4\xa1\x47\x3f\x3e\x09\xa9\x02\xc9\xf4\x4a\x15\xd1\x4c\xf3\xb9\x03\x05\x0d\x9b\xb2\xcd\xd4\xe1\x82\xf4\x91\x65\x36\x4c\x73\x88\x2c\x54\x0e\x8a\x9f\x41\x8d\x67\x60\x13\x1f\x06\x72\x84\xd3\x68\x11\x52\x33\xc8\xc7\x87\x86\xaa\xc9\x22\x09\x09\xc4\x11\x9d\x59\xf6\x28\x82\xd9\x7c\x57\xac\x32\x89\x08\x6c\x4b\x11\x12\xbe\x07\x43\x5a\x31\x25\xc5\x19\xa7\x3a\x27\x46\x31\x31\x27\x59\x3a\x33\x18\xb3\x2a\xcd\xb3\x08\xd2\xc6\x1a\x06\xe5\x5b\x14\x43\x11\x70\xd2\xd9\xb0\x88\x65\x98\x65\x99\x06\xe7\x10\x44\xe0\x98\x17\xb0\x27\x99\xb8\x0c\xf3\xad\x67\x1e\x82\x79\xb1\x20\x63\x4c\xfa\x8f\x19\x86\x11\x84\x8c\x1e\xf7\x3b\xac\x8d\xd3\x18\x4c\x88\x49\x07\x27\xd1\xb4\xf3\xc3\xfb\x17\x67\xa7\x57\x6f\x8e\xb7\xef\xaf\xce\x2e\xaf\xae\xcd\xc7\xc3\xc1\x1a\xcb\xb6\x54\xbe\xb8\xc9\x8b\xa8\x80\xf1\x15\x4b\xc8\x52\x52\x2e\x71\xb3\xdd\xaf\xd7\x2f\x46\xe7\x58\xbc\x6e\x9b\xb4\xb7\xc8\xb3\xbd\x38\x0d\x83\x98\x5d\xad\x39\xe5\xba\x03\x11\xfb\xf5\x57\xf5\x17\x35\xf8\xa4\xdc\xec\xb5\xfa\xf0\xe1\x48\x4e\x40\x07\xd0\xe1\x6d\xaa\xba\x67\x17\x17\x6f\x2f\x0e\x1d\x79\xe0\xfe\x66\x74\xce\x5e\xb9\xaa\xcf\x32\x35\x49\x61\x74\xd9\xb0\x8b\x8c\x09\xf7\xc9\x2d\x75\xd5\xfe\xf3\xaf\x0f\x04\x24\x69\xdb\x7e\x67\x12\x11\x4d\x46\x13\x72\x2c\x62\xb3\xd4\x58\x4f\x22\xa8\x04\x39\xe7\x88\xc4\xc8\xa8\xdd\x2e\xfb\x33\x7f\xf4\x16\x26\xf8\x37\x52\x6a\xf8\x28\xb8\x3e\x0d\x29\x24\x4d\x64\x2e\x8b\xd4\xe0\xac\xa5\xbd\xdc\x15\x4f\x12\x66\x11\xdc\x37\xdb\x2e\xd0\x16\xff\xff\xa8\xf5\x9c\x84\x3d\xd3\x45\xb6\x82\x28\x0c\x8d\x7f\x30\x33\x49\x82\xe4\x18\x09\x99\x37\x2c\x21\xfb\xc2\xb3\x23\x23\xfa\x24\xb4\xe4\x55\xb1\x10\xbf\x01\xe5\xbb\x20\x8e\x58\x19\xa2\x09\x58\xc6\x51\xc0\x0d\xb0\xf9\xe8\x2c\x1b\x54\x38\x15\x4f\x23\x76\x9a\xf6\x7c\xa1\xad\x05\x51\xb7\x30\xf6\x14\x81\xe4\x9a\xc4\x13\xa1\x0d\x14\xde\xd9\xf9\xf3\xf7\x3f\x5e\x5f\x5d\xc0\xcb\x1e\xef\x2b\x96\x12\x3e\x8b\x67\x83\xa1\xf7\xe2\xac\xa3\x84\xc4\xd3\x5b\xfa\xf2\xec\xcd\xc9\x2f\xd7\x27\xaf\xae\xce\x2e\xae\x99\x9b\xd7\x97\x67\xa7\x56\xf6\x5a\x07\x0f\x8f\xf7\x9f\xad\x59\x6e\x33\xe8\xe9\xec\x46\x0c\x4c\xc1\xd8\xc1\xb4\x40\xb3\x58\x37\x59\xb1\x8c\x82\x56\x94\x2b\x4f\x67\x4e\x4f\x7a\x90\x9b\x00\xc1\x14\x79\xe8\x74\x2a\xa4\x0b\xe2\x3c\x95\xa9\x82\x32\xd4\x0b\xb3\xfb\xe2\xcc\x62\x78\xc0\x98\x7e\x3d\x50\xd0\xf6\x1c\xde\xb2\x63\x37\x21\x08\xbd\xbe\xba\xef\x10\x01\xc4\x93\x32\x26\xbc\x24\xa7\x6f\xc4\x9f\x90\xa1\xed\xf0\x24\xb6\x1a\x64\x4a\xad\xe5\x20\xdb\x4a\xc7\x80\x3c\x8d\xc9\x22\x02\x33\xd0\xbe\xa3\xd8\x52\xd3\xf6\x91\x08\xff\xcb\x17\xdf\xaa\xbe\x89\xd1\x9c\x2e\x6c\xef\x1f\x02\xad\x6e\xc7\x7e\x7b\x74\x64\xe6\x1e\x7c\xc1\xdc\xd7\x4f\x9e\x3b\x3a\x7f\xf5\x16\x93\x9f\x34\xf7\xe7\x8b\xf3\xa7\x4e\x05\x9b\x9f\x3a\xf5\x9b\xc6\xc4\xd1\xf9\x4f\x27\x6f\x46\x2f\xaf\xdf\xbc\x7d\x7d\xfd\xe6\xec\xa7\xb3\x37\xaa\x75\xa9\xce\x83\xb0\x03\x11\xda\x02\x45\x9d\xcb\x60\x07\x56\x32\x73\xaa\x8b\x81\xc4\x5a\x83\x8f\xe0\xc6\x80\xe4\x69\x40\xf3\x0c\x8b\x89\x7f\xd6\x1a\xa7\x46\x46\x48\xe1\x98\xe5\x10\x43\x1b\x84\x40\xee\x65\x36\x42\xd1\xf3\xd1\xf9\xeb\x43\x88\x14\x84\x80\xb7\x85\x2d\xc9\x17\xf3\x79\x9a\x15\x66\x52\x08\x21\x05\x4e\x9f\x61\xf5\xde\xfd\x82\x08\xf6\x7c\xad\x06\xa1\xda\xd9\xd9\xe9\xc0\x0e\x1c\xba\x43\xc0\x0f\x61\x8d\x9a\x47\x73\x9d\xef\xe6\xab\x7c\x97\xa0\xb9\xd1\x95\x3a\x66\xf0\xc3\x38\x0d\xc6\x3d\x0c\x0f\x81\x5d\x94\x94\xb4\x8a\x83\x1b\x12\x48\xcc\xfa\xb5\x0b\x2d\x0c\xa0\xa2\x41\xf7\xc3\xaf\x5d\xf9\xbe\xfb\xa1\xdc\x67\xa2\x7a\xdd\x32\x5c\x1c\x46\xe9\x5e\x18\xc3\xba\xe9\x6c\x60\x22\xa5\xee\xae\xea\x16\xd9\x02\x19\x0a\xdb\x23\x38\x58\x01\x32\x8c\x30\x09\xff\xcd\xf2\x5e\xbf\xc4\x5b\xa8\x46\xa6\xca\xd8\x18\x09\x80\x28\x72\x11\xeb\x48\x6b\xd5\x23\x3b\x0e\x6b\xe0\xde\x92\xd1\x5a\x46\xd0\x8f\xa5\xc4\x2f\xd1\x34\x49\x33\x72\xb4\x18\x98\x89\x57\x14\x33\x54\x46\x87\xec\x7a\x11\x17\x20\x86\xea\x57\xc0\x89\x85\x10\xb7\x52\x0a\x0d\x0e\xa4\x0f\x5b\xe6\x81\x7e\x24\x1b\xa0\x98\xc9\xc0\xce\xf8\x1f\x88\x0f\xfc\xfe\xa7\x72\x45\x13\x2a\xb1\x94\x04\x50\x35\x25\x90\xcc\x1a\x3c\x36\x65\x0e\x8a\xf2\x1c\x1c\xc4\x24\x68\x14\xed\xa8\xef\x29\xac\xc8\x91\x8c\xe9\xe7\x7b\xfc\xfb\x73\xd5\x5b\x92\x99\xc6\xd1\x60\x31\x92\x9c\xc7\xfb\xad\x82\x2c\x83\xff\x33\xa2\xbc\x65\xc2\x40\x49\x10\x52\x26\xbb\xa4\x4c\x88\x7e\x95\x3b\x84\x58\x5c\x44\x6f\x33\xc9\x09\x6f\xc8\x57\xa9\x2e\x5c\x6a\x80\x0c\xc4\x30\xfb\xff\xd5\xe2\xff\x88\x5a\x54\xd8\x51\x5b\xfc\x55\xbe\xf7\x55\xde\x55\x5f\xa9\x5e\x8d\xbe\x4e\x16\xba\x1f\x76\xeb\xb4\xa7\xb1\xee\x87\x2a\x32\x0f\xeb\x5a\x6d\x57\x23\x48\x66\xeb\x56\xe8\x7f\x4a\x79\x59\xca\xcb\x80\xce\xaa\x30\xc2\x03\x19\x29\x56\x73\xad\x7a\x7a\x38\x1d\xaa\x0b\xcd\xa5\x10\xda\xe1\xd4\x65\xbb\xe4\x6d\xc9\x77\x69\x09\xea\x8d\xc2\x73\xed\xc6\x25\x54\x92\x1e\x50\x86\x1c\x44\x5c\x5e\x10\xd0\xb6\x10\x21\x75\x01\xda\x88\x6a\x00\x9c\xe0\xb1\x5e\xd2\xb8\x97\x10\xf5\xfe\xd2\x57\x3d\x16\x02\x7c\xf8\xcd\x25\xab\x35\x4b\xc1\xa0\x07\xbc\xb5\xd8\x09\x04\xb2\x1f\xff\xa0\x9d\x90\x60\x77\x90\x09\xbe\xd7\x20\xd2\xf1\xf6\x7e\x75\x04\x86\xe9\x9a\x30\x3f\xde\x3e\xf0\x06\xc8\xa8\x7a\x1f\x09\xcf\x6b\x26\x2c\x7d\x47\xc7\x72\xdf\x90\x6a\x6d\xf7\x38\x5c\xda\xbe\x77\xdb\xc0\x3c\x70\x7e\xfe\x8f\x6f\x86\x44\x80\xfe\x11\x0c\x90\xe3\x27\x01\x3f\xde\xee\x6d\xf4\xef\x00\xe4\xc0\xaf\x4b\xc9\xdb\x52\xce\xea\xb1\xb9\x62\x49\x11\xeb\x26\xd9\xf0\x7c\x96\xe6\xa4\xea\x63\xa4\x8e\x81\x4d\x15\xfe\x53\x67\x29\x92\xf3\x9d\x99\xd8\x3f\x24\x62\xc2\x12\x28\x7b\xba\xcc\x85\x85\xcd\x95\x7d\xdf\xd4\x20\x11\xea\x6e\xdf\x13\x8e\xeb\xae\x3a\x3e\xa6\x0f\x96\x6a\xf8\xa2\x92\x13\x39\x0d\xa1\x60\xc8\x3f\x86\x1b\x45\x6e\x43\xff\x70\x4a\xcb\x22\xbc\x0c\xa2\x42\xf0\x20\xfb\x83\xe4\x0e\x19\x6e\x88\xc0\x96\x2b\x10\xd6\x11\x3d\x23\x3c\x68\x5c\x1c\xd1\x0c\x26\x05\x07\xc9\x17\x21\xcd\xa4\xe4\x80\x72\xae\x7d\x49\x1f\xc8\xe4\x94\x22\x45\xe0\x07\x80\x3e\xf8\x2d\xbd\xc9\x9d\x18\x09\x5b\xb3\xbb\xe3\x67\xde\xc7\x79\x34\x76\xfc\xc5\xef\xc2\x59\x5a\xa6\x06\xf3\x2a\x07\x09\x28\x8e\x87\x49\xeb\x1a\xa1\xb6\xff\x0e\xce\x6b\xe0\xdb\x4a\x16\x6c\xb8\x7f\x54\xf9\x86\x04\x97\x02\xce\x2e\xf2\x67\x4a\x0e\x13\xde\x59\x40\x77\xeb\x44\xb3\x0b\x28\xa0\xee\x96\xf3\xa4\xe6\x0a\xb3\x3c\xde\x55\xa1\x14\x78\x94\x80\xa3\xc2\x0d\xa2\xcf\xfb\xec\xce\x00\x63\xb2\x33\x26\x4c\x58\x19\x22\x3e\x94\x04\xcb\x16\xc9\x80\x33\xba\x81\x21\x6f\x8d\x68\x83\xcc\x26\xb9\x55\x5d\xe2\xcc\xaf\xaa\x45\x98\x3a\xd6\x71\xb0\x3a\xde\xfe\xb6\x15\xc0\x35\xe9\x88\x85\xb2\xbc\x25\xd1\x07\x05\xef\x19\x12\x34\x68\x5a\x10\x1d\x2b\x84\x97\xd3\xbf\x06\xb9\xa4\x78\x92\x4c\x0f\xd5\xce\xb6\x01\xb7\xd3\xf5\x74\x05\xf4\xd8\xc9\xd9\x32\xb1\x76\xd8\xbc\x9c\x0a\x94\x48\xaa\xb3\xe9\x82\x0a\x2c\xec\xef\xa9\x20\x34\x08\xd9\x8c\xb0\x32\x71\x2c\x93\x90\x11\xf1\xc0\x7d\xfd\x35\x8b\xd8\xe7\xcf\x60\x51\x1e\x8d\xab\x40\x21\xc0\x3a\x9e\xb8\xd9\xae\x68\x4f\x31\x02\x94\xc5\x4c\x83\xae\x00\xca\x3f\x1a\xec\xa7\x54\xaa\x0b\xb5\xba\x74\xd2\x0c\xd3\x29\xe7\xd3\xc4\x62\x9f\x58\x6b\xaa\xe4\x6d\xf7\xd8\x69\x0e\x46\x79\x1f\xea\xd8\x02\xd5\x30\xf7\x59\x49\x36\x4a\x99\x99\x3f\xfc\xff\xc1\x7e\x85\xa0\x9c\x47\x11\x06\xaf\x82\x28\x96\x20\xc8\x6c\xff\xc8\xee\xc3\x92\x59\x92\xf7\x23\x1d\x16\x07\x31\x24\xc4\xdc\x26\x79\x4c\xd5\x84\xed\x7b\x16\x86\x75\xab\x20\xee\x3b\x7f\x66\xca\xcb\xc6\x9b\x94\x91\x68\x1c\xc1\x44\x41\xfd\x5b\xc2\xcf\x79\x10\x65\x70\x2f\xed\x91\xa7\xf8\x13\x33\x26\x46\x96\x6f\x45\xb2\xa6\x5c\x97\xbe\x40\x08\xd4\x2d\x8b\x38\x5d\x82\x55\xb3\x7c\x83\x01\x2c\xd2\xc0\xa1\x03\x33\x91\xaa\x69\x3a\x40\x70\x35\x8f\x41\xa2\xe3\xee\xfd\x7d\xc6\xe5\x59\x8e\xb7\xd6\xeb\xfb\xfb\xa1\xf5\xfd\x43\xb7\x6a\xbd\xde\xab\x7f\xbf\x5e\xab\xfb\x7b\x0d\x81\x91\x3d\xe6\xd1\xe0\x4e\xee\x65\x8e\xef\xf6\xd5\x20\x56\x0f\x86\x61\xc7\x14\xf5\x09\x31\x2d\xed\x58\x54\x6f\x83\x2c\x08\x0b\x2e\x6e\x4f\x0a\x53\xfc\x8f\x03\x90\x34\xd7\x54\x0b\x41\xe8\x00\xdf\x9c\x00\x18\x22\xd2\x69\x5f\xca\x4f\x1c\x0f\xb8\x61\x38\x13\x9c\xac\x58\x71\x11\x8b\x6b\xb9\xb6\x8e\x28\x75\x26\x32\x5e\x65\x04\x41\x75\x6d\x68\x91\xac\x30\x41\x05\x97\x90\xb9\xaa\x21\xac\x96\x52\x8c\x0c\x4a\xc8\xe2\x21\x63\x2a\xd3\xb6\x5a\xea\x0e\xc0\x25\x2f\x06\x5b\x63\x74\xbe\x98\x4c\xa2\x4f\x7f\x36\x52\x60\x9c\xae\x05\xa7\x46\xb0\xe0\xd0\xab\xda\x39\xd9\xb9\xd3\x29\xdd\x00\x04\xc5\xcd\x35\x4e\xb3\xc5\x53\x4a\xc9\xa0\xd4\x13\x61\x58\xc7\x58\x7c\x0b\xce\xc0\xf3\x11\x13\x90\xdf\x54\x77\xf9\xa6\xb9\x81\x20\x86\x58\xc3\x54\x31\xea\x40\x3e\x63\xcb\x3b\xfc\x1f\xba\xae\x06\xe3\x3a\xd6\x83\xc9\xbe\xcc\x68\x54\x43\xbc\x69\xf8\x9d\x37\x31\x0e\x86\x22\xf2\xd6\xf3\xe1\x40\x0f\x09\xe5\x62\x4e\x7c\x72\x42\xb9\x33\xd8\x41\x52\x69\x6e\x3a\x22\x5b\xfa\x7a\x40\x5e\xaa\xa2\x40\xc5\x3e\xd2\xa4\xff\x45\x61\xf0\xc8\xdf\x95\x58\x4f\x3e\xa9\x1a\x13\x94\x4f\xcc\x7e\xd7\x60\xcb\x37\xab\xa6\x1c\x9b\x45\x73\xd1\x2b\x59\xdf\x83\x48\xcc\x82\x22\xbc\x25\x4b\xe7\xa8\x5c\x85\xfa\xd5\xb6\x61\x0a\xd1\xdc\x51\x06\xe6\x17\x46\xc3\xc4\x9c\x8f\x5b\x3f\x37\xe0\x6c\x55\xc3\xbb\xd3\x12\xf1\xe1\xd6\xc1\x5b\x6f\xf2\x92\xf6\x22\x9d\xf7\x2c\x26\x7e\x2f\xcd\xde\x9e\x0c\xb0\xbd\xeb\x8a\xac\x37\x22\x0f\xdf\x00\x1b\xec\x61\x10\x3d\x74\x3c\x78\xb5\x8d\x4a\xd8\xf8\xe0\x8a\xc3\x34\xd2\x5a\xd1\xad\x12\x4a\x2e\x34\xbf\x9c\x50\x2e\xdc\x25\x42\x79\x43\xe2\x7c\xae\xc9\xf7\x5c\xd3\x1c\x1e\xaa\x7f\x59\xcd\x08\xea\x85\x92\x96\x9c\xc0\x59\x9a\x3a\x24\x63\x70\x24\x5f\x6c\x18\x85\x92\x47\xa7\x22\xf9\x7c\x47\x65\xbc\x2e\x27\x2d\x5c\xb8\xf6\xf7\x1b\xaa\x91\x49\xdd\x9d\xad\x72\x6e\xdb\xe8\x36\xfd\x33\x7a\x75\x79\xbc\xb3\xb7\x23\x00\xcb\xfa\x8a\x65\x85\xfa\xfe\xfb\xef\xdb\xd1\xed\xd4\x84\xe7\x94\xe8\x4f\xc2\x93\xe8\x65\x85\xaf\xee\xae\xaa\x82\x1e\x39\x9e\x72\x3b\x5f\x28\x76\xf9\xfb\xc3\x8a\x3c\x34\x34\xcc\x5e\x75\x4c\x10\xfd\xb0\x97\x12\xc7\x57\xd9\xc1\xbb\x4c\xb1\x6e\x6e\xa6\x83\x84\xca\xe6\x43\x03\xf0\x65\x5a\xf6\x45\xa4\xa9\x5c\xfa\x99\xfb\x90\xe1\x13\xc4\x5b\x64\x6e\xb3\x78\x0f\x26\x15\x8c\xfe\x88\x58\x4b\xb1\xe5\xbf\x57\xff\x9b\x9a\xf0\xd7\x1a\x73\x19\x0b\x53\x05\x7a\x92\x75\x28\xfb\x48\x48\x1c\xbc\xab\xae\x0a\x3d\x24\xaa\xf4\x2d\xdc\x46\xe0\xbe\x38\x48\x75\xcf\xd7\xf7\xda\x32\x2f\x85\x65\xff\x25\x5b\x98\x0b\x50\x5e\x90\x97\x97\x6b\x12\x58\xb6\xc5\xb1\x54\x8e\x71\x21\xac\x55\x36\x89\x49\x37\x18\xe8\x96\xbc\x6b\x23\x87\xf8\x38\x02\xad\xca\x23\x77\x68\xef\x3b\x7b\x76\x97\xeb\xca\x4a\x4e\x77\xef\x3d\x48\xeb\x4a\xe6\xf5\x45\xca\xed\xa5\xae\x5f\xce\x12\xf5\x75\xad\x42\x20\xec\xc9\x9b\xe4\x96\xba\x93\xed\x56\x78\x98\xe6\xae\x96\xe5\x09\x90\xac\x6c\x37\xfb\x5f\x42\x7e\x27\x23\x35\xea\x3f\x56\x36\x2a\x85\xab\x46\xec\x2d\x75\x51\xb9\x58\xe4\xda\x3b\x99\x3d\xba\x34\xe5\xaa\xac\x33\x48\xd4\x5e\x93\xa4\x4b\x6f\xe9\x8b\x05\xe7\xb0\xa0\x1f\x5d\xf1\x07\x92\xe5\x72\x4f\x06\xc5\xec\xdc\x64\x61\xef\x1c\xcb\x45\x30\x49\xb7\x2a\x23\x8e\x86\x69\x32\x16\xf2\xd0\x66\xa6\xcb\xe3\x96\x36\x4b\x24\x75\xf0\x56\x51\xaa\x6c\x00\x0f\xd5\x1b\xce\xb8\x5d\xcd\x38\xb3\x52\x27\x53\x4b\xb0\x16\x96\xba\x01\x3a\xb3\x14\xe8\xa4\x00\x9b\xd8\xfc\xbb\x0a\x3e\xe7\xde\x27\x90\x20\x5d\x98\xab\x7e\x70\x32\xcf\x4d\x8d\xb8\x2c\x39\x3f\x4d\x85\x1b\xa2\xe5\xae\x9e\x85\xe7\x8f\x4a\x91\xa9\x57\xdb\xce\x2b\x69\xa7\xa2\x02\x6a\x00\xf2\xb5\x0d\x52\xce\x13\xa8\x9d\xa3\x1d\x1b\x2e\xc2\x81\x50\xba\x7a\x88\x3c\x96\x55\xe5\xf9\xd1\xf7\xee\xe6\xe5\xf9\x06\x5b\xfd\xb0\x2c\x5a\x6a\x49\x65\xb5\x16\xc1\x0a\x9c\x6b\xc2\xa9\x2a\x9b\x00\x30\xd6\x79\xd8\x88\x52\x36\x19\x8a\xba\x3d\x71\x22\x6d\x00\x89\x40\x7b\xdb\xb5\x98\x8f\x23\x6b\x3e\xc4\xe0\x94\xca\x60\x8c\x87\x01\xe5\x59\x8f\x2f\xb5\x3a\x6e\x61\x85\x7e\x4f\x33\x3b\x0f\x0a\xca\x6b\x69\x50\xb9\x0b\xb2\x88\x7a\x36\x72\xee\x42\x80\xea\x39\x86\x71\x48\x6e\xf9\x35\xec\x18\x1b\x7a\x0d\x0a\x5d\x8b\x09\x3c\x46\x06\xc8\xb7\x2c\x1b\xdc\x80\xed\xf5\xe1\xc9\xe3\x0e\x2d\x94\x43\xc8\xc2\x52\x2b\x7c\x9b\x46\x75\x8f\xaa\x20\xbd\x23\x39\xb2\x8c\x61\x73\xc9\xea\x53\xb6\xe3\x98\x86\x88\x0a\x86\x22\x3a\x8f\x63\xc8\xe5\x31\xd3\x58\x61\xc5\x0d\x4e\x99\xc3\xb8\xbc\x8a\x67\x05\x8e\x93\x70\x0b\x03\x46\x88\xac\x93\xe4\x31\xd2\xa6\x99\x50\xd1\x0b\xf3\xf9\xba\xd1\xa0\xde\x93\x3e\x0f\xfb\xd1\x96\x04\x4c\xc3\x21\xd9\xbd\x7e\xa7\x53\xed\xf1\x93\xab\x06\x0e\x19\x3c\xa5\x3e\xf0\x95\xda\x46\x70\x27\xef\x46\xaa\xd7\x7a\x27\x42\x25\x06\xd3\xd1\xc7\xa9\xe7\xb7\x12\x18\x7b\xd5\x89\x7a\x55\xa2\xad\x28\x51\x11\x89\xa6\x0a\x7f\xe9\x9d\x44\x35\xe5\xfc\xb6\x63\xe2\x4e\xd3\x47\x52\x4a\x66\x4f\x9a\xa9\x4c\x76\xd8\x2a\x88\x56\x79\x4b\x09\x6b\xcc\x75\x22\x21\x23\x1e\x93\x65\x63\xc1\xde\xae\xc0\xaf\x12\xfb\x98\x2c\x66\x63\xd1\xad\x5a\x42\xeb\x9b\x33\x98\x90\x3b\x98\x47\x26\x84\x22\xb3\xb9\x48\x82\x3b\x84\xe4\xdc\xb9\x4b\x09\x8c\x0a\x6e\x82\x84\x6f\xb4\xca\x8b\x43\xb9\x81\xa2\x6e\xca\x55\x88\x69\x5e\x5e\xb4\xb9\x10\xef\x4a\xee\xd8\x80\x61\xa7\xea\xf7\x85\xce\x56\x15\x2b\x31\xe0\x5e\x2c\x3f\xe3\xb1\xcd\x59\x4c\xba\xc8\x27\x02\x0b\xf6\x75\x94\x18\x0a\xf9\x14\xa8\x5d\x63\xd1\xe9\xcb\x3b\xa2\x6e\x9d\x18\x2e\x52\xe6\x02\xff\x46\x0a\xdf\x6f\x18\x31\x76\xb3\x06\xa0\x8e\xdd\x7d\xdb\xd7\x65\x0e\x46\x92\x66\xd4\xb2\xc6\x71\x19\xe3\xd2\x8a\x64\x70\x25\x4a\xdd\x6e\x33\xdb\xdd\x30\x2a\x85\x89\x47\xd6\x96\x49\x71\xdb\xda\x0d\xa3\xdc\x61\x57\xb9\xd0\x29\x4f\xea\x0e\xb1\x55\x35\x8b\x7c\x8d\x34\x4b\xef\xc8\x06\xe9\x62\xa9\xb5\x97\x49\x9a\xf4\xd0\x84\x5b\x93\x89\xe6\x8b\x15\xcf\x4b\x6e\xd9\x38\x4a\x92\x13\xe7\x9d\xa4\x41\x2f\x5e\x8c\xf5\x78\xa8\x2e\xb9\xaa\xb5\x72\x66\xb3\x30\xcd\xd2\x02\x20\x8e\x3e\xfa\xc0\x2d\x6e\x74\xa9\xe0\xf7\x1f\x53\x77\xb0\x71\x0c\x3c\x66\x0d\x60\x30\x0d\x4c\x3f\xd6\x16\x55\x6f\xa5\xa8\x66\x6e\x80\x4c\xcd\xd8\x6a\x0a\xc5\x21\xd4\x56\x26\x60\xfe\x49\x20\x70\x11\x2c\xf2\xda\xf9\xc0\xf9\x82\xae\x84\xad\x73\xaf\xf3\x52\xbc\xfc\x26\xf9\xab\x78\xfc\x56\x41\x11\xdd\xb0\xe5\x39\xe5\x8a\x01\x25\x8c\x6a\x3d\xac\x56\xc9\xf4\xc5\xa6\x56\x54\x7b\x04\x90\x17\x1a\xb8\x3b\x97\x57\xdc\x92\xe9\x9c\x8e\xdc\x69\xb7\x40\xda\x55\x16\x61\x68\x4f\xdb\xb1\xfc\xc0\x63\xcb\x46\xc4\xc6\xa4\x31\x50\x2e\x7c\xc3\x93\x25\x85\xf5\x3d\xe5\x7d\x3d\xf1\x73\x8c\x88\x71\xec\x47\xcb\x4b\x8e\xfa\x53\x6a\x5b\x61\x57\x16\xf9\x61\x31\x1b\x3c\xd3\x46\x9a\xce\x8b\x68\x46\x6a\x69\x24\x71\xa9\x77\x4c\xdb\xb1\x4d\xb1\xc5\x21\xd2\xc3\x00\xde\x8a\x7e\xf1\x60\xb1\x04\x0d\x39\x67\xe0\xf6\xf3\x19\x5d\xb2\x26\x0b\x4e\x3d\xe0\xb8\x6d\x27\x75\x59\xeb\x17\x09\x21\xb9\x99\x21\x65\x28\x03\x70\x5f\xfb\xac\xf4\x94\xfa\xe7\xcb\x4d\xcd\xf2\x54\x84\xa6\xf4\x42\x5f\x50\x18\x2b\xc1\xae\xab\x7d\x1a\x7f\xb0\x42\xa6\x7c\x49\x79\x52\xa9\xcc\xc3\xa0\xa5\x56\xe6\x7e\xa8\x81\x22\x4a\x16\xba\x32\x50\xa9\x98\x57\x65\xf4\xc0\xca\xa8\xbf\xe5\x4e\xcb\x71\x76\x88\xbe\x4d\x6a\x54\x31\xf0\x2e\x91\xe9\xa7\x69\x4c\xdb\x35\xaa\xdc\x65\xa3\x46\x95\x18\x43\xab\xd8\x79\xf0\xc5\xec\x06\x65\xb1\x37\x06\x3e\x64\x70\xa3\xb5\x30\xd8\xca\xcd\xa7\x42\xb5\xcd\x0a\x2d\xdc\x7f\x90\xe5\xe5\x31\xb4\x67\x1e\x6a\x39\x44\xc3\xdc\x98\xd8\xb3\xca\x81\xa3\xa6\xe1\x72\x88\xfa\x06\xa6\xc1\x8c\xb6\xe3\x34\x90\x15\x9d\xdb\x6f\x7c\x5f\xf3\xdf\xdb\xf7\x95\x2f\xd6\x0f\x09\x49\x85\xd0\x0d\x44\x2d\x45\x5b\x48\xbd\x91\xa2\xf4\xd3\x16\x58\x5a\x1a\xfa\xdf\xae\x1f\x97\x02\xfa\x69\x55\x19\x21\x48\x19\xd2\x22\x9d\x73\x9f\x5a\x39\x76\xf4\x08\x19\x6a\xfa\x42\x3f\x37\x30\x00\x1f\x37\x29\x95\xbb\xd2\x2e\x69\x48\x38\x80\x45\x08\x27\xf5\xef\x9b\x7a\x42\x9c\xaa\x9f\x37\x6a\x53\xe6\xd1\x00\x99\xd2\xac\x4c\x53\xbc\x97\x4a\x6d\xc7\x42\xc8\x41\xbc\x5e\x70\x2d\x9b\x96\xb2\xc7\xc7\xba\x6e\x8b\x95\xad\xe6\x05\x55\x96\xc8\xb7\xad\xa4\x6b\x74\xa6\xf0\xd9\xbd\xe8\xb3\x54\x20\x17\x76\x56\x65\x10\xd6\xc3\xc4\x2d\xb0\xab\xa6\xc4\x53\x71\x99\x7c\x7e\x8e\xa4\xe4\xdd\x40\x0f\x27\x99\xb2\x09\x96\x70\x4d\x6e\xb1\x63\xa3\x9c\x52\xc9\x13\x80\x14\x2c\xdd\xe8\x09\x15\x96\x96\xda\x3d\x28\x2b\x52\x51\x0b\xba\x4d\xe4\x77\x48\xde\x3b\x2d\xab\xeb\xf4\x74\x28\x59\xd9\x38\x51\xb0\xa9\xe7\xa4\x1c\xd1\x2d\x4d\xcb\x22\x07\x73\x04\x8d\xda\x4a\xb8\x3c\xed\xae\x77\xb6\xe4\xb9\x0b\x1c\x3c\x55\xdf\xa4\xb8\x4f\x8d\x4e\x02\x66\xe8\x22\xac\x2f\xf7\x91\xe6\xbe\xaf\xa6\xd3\x9f\xe9\xad\xd3\xbc\x4c\x30\xcc\x2d\xc1\xf3\xbd\xb1\xbe\xdb\x4b\x16\x71\x5c\x17\xcd\x07\x1b\x95\xbc\x7c\x0f\xec\xb7\x1f\x36\x5a\x8e\x5a\x53\x97\xdf\x4d\xa4\x21\xad\x21\x16\x3f\x96\x07\xcb\x65\xc1\x1f\x49\x84\x8d\x18\x55\x12\x74\x9e\x5d\xc9\xbf\xab\xa8\xd7\xac\x79\xe9\xd6\x7c\x21\x7e\x5d\xc9\xcf\x0e\xdb\x54\xa6\x55\x63\xba\x0f\xc0\xf0\x2c\x54\xc5\x40\x3d\xb4\xa6\xc5\x7a\xb6\x1a\xcf\x07\x61\x38\x86\xfa\xfc\x34\x3e\xbc\x7a\xef\x50\xeb\x72\x69\xb7\x0a\xf6\x1a\x8d\x3b\xe1\x48\x8e\xb9\x4f\x4e\x5e\x64\x72\xc9\x73\x9e\x41\xaf\x45\x06\x38\xc6\xcc\x0b\x79\xac\x68\xc3\x52\x1b\x52\x97\xda\x16\x6c\x30\x72\x33\xf7\xe4\xb1\x02\x20\x07\x22\x14\x41\xdb\xfb\xb7\xd1\xc4\xaf\x7a\x47\xc5\xae\xbb\x32\xca\x42\x79\x6c\x54\x16\x8e\x8c\x79\xe0\x3b\x9c\x78\x2c\xef\x93\x72\x57\x7a\x33\xf0\x12\x29\x8a\xf3\xc3\x17\x7f\x26\x6b\xbe\x3b\xb7\x74\xbd\x23\xbe\x4f\xc7\xb6\x84\x37\xe5\x97\x4f\x64\x86\x68\x19\x0d\x58\x8b\x90\x79\x28\xac\x4a\xfc\x5a\x8f\x6d\xcf\x45\xe5\x6e\x3a\xf3\x60\x00\x4c\xc2\x60\xac\x8f\x27\x48\xe4\xa8\x4e\x4f\x05\xbd\x3c\x8d\x4d\xbd\xdd\x3c\x59\x94\x8d\xc9\x40\x05\x49\x61\xf7\xa5\xc6\xc9\x6c\x0e\xea\xf9\x68\x9a\xe3\xca\x3e\x95\x36\x49\x4f\x28\x2e\xf8\x1d\xee\xf1\xf6\xdf\x3b\xcd\x9b\xb2\x36\x49\xf1\x44\x8b\xe6\x57\xcb\xd8\xcd\xf9\x15\x0d\x68\xaf\x45\xd7\x6f\xa8\x5a\x04\xbf\xa5\x45\x10\xfe\xf4\xaa\x79\xbf\x28\x65\x62\xc9\x85\xe5\x95\xb2\xf4\x9d\x10\x02\xdd\x9a\x23\x6b\x52\x44\x0e\xff\x9e\xd1\xad\xd1\xc5\xba\x7b\x9f\x68\xa5\xd7\xa7\x0e\x3d\x1e\x6e\x42\xd8\x18\x1a\x54\x7a\xf8\x2a\x01\x4f\xfd\xea\xbd\xe5\x8a\x57\xd2\xb6\xa7\x98\xda\x2d\x79\xa1\xc9\x2f\xec\x76\x9b\xd6\x9a\xae\xb3\x73\xfb\x3a\xd3\x95\x18\x3b\x82\x46\x7d\x6e\xd5\xc2\xb6\x17\x56\xbb\x83\xae\xa9\xad\x3f\xb6\xfe\x25\xd6\xa7\x2b\xee\xd2\x94\x45\x06\xdf\x9f\xad\x92\xeb\x4f\x73\x9b\x14\x59\x91\x36\x35\x0f\x3d\x76\xad\xe9\x93\x94\xfa\x9c\x49\x7f\xa8\x7f\x39\xe7\x07\x89\xc6\x72\x19\xbf\x2f\x5e\x1e\x89\x59\x66\x1f\xcc\xba\x77\x0a\xb6\x84\x22\xe1\xae\x55\xc8\x2b\xc4\x2a\x3b\x39\x52\xf4\x15\xc1\x30\xb7\x51\xd5\x46\xb7\x40\xee\x87\xdd\x7a\xeb\x5e\x3c\x5b\xc5\x45\x00\x2d\xcf\x29\xf9\xee\x97\x8b\x40\xd4\x38\x4f\x77\x7b\x1f\x77\xbd\x0b\x66\xaf\x78\x0f\xa2\x89\xfd\x28\x91\x29\x6b\x01\xf4\x27\x03\xf8\xdd\xb0\x6d\x52\xc0\xf7\x06\x85\xe1\x93\x48\x6e\x4a\xde\xd4\xab\xf6\x34\x1e\xbd\x23\xe8\x79\x81\x2d\x7f\x4a\xe3\xc5\xec\x4f\xac\x3c\x8d\x83\x68\x26\xcb\x37\x68\x5f\x19\xb6\xb4\x2b\x4c\xa5\x93\xd5\xfb\xbb\x18\x12\x4e\x9a\x2a\x98\xeb\x94\xf6\x7a\xc7\xe9\x31\x7c\xa3\xa9\xb6\xa9\x76\x04\x9f\x5e\x11\x3e\x0d\x3c\x57\x6d\xb8\x09\x3b\xdf\x04\xdd\x76\xc4\xd5\x1f\xa4\x1e\xfa\xcd\x6e\xae\x4e\x24\xb7\x18\xfc\x1c\x97\xfe\xb8\x43\x94\x32\x8f\x73\x22\x33\x2c\xfa\xa0\xf1\x8c\x57\x66\x52\xf3\xa8\xa9\xdc\x19\x64\xd8\x67\xcd\xe1\x2c\x3e\x45\x10\x7f\x1d\xaf\xcc\x63\x4b\x96\x96\x60\x26\xe5\x86\x09\x3f\x08\x55\xbd\xf2\x49\x3c\xfd\xd5\x05\xaa\x61\x85\x51\xae\xfb\xbb\x74\x24\xea\xe3\xcc\x10\x9b\x2b\xfd\xfb\x02\xff\xdf\x6e\x6d\x40\xa1\xbf\x3c\x62\xde\x52\x6f\x6f\x71\xc0\x79\xd0\xf6\x88\x7a\x04\xdb\x30\x0d\xfc\xc2\x53\x49\x8e\xa1\x7a\x4f\x8f\x5c\xd5\xf6\x33\xa1\xf5\x00\x24\x51\xbf\xf2\xf1\x06\x42\x88\x0f\xed\x2f\xa8\xcb\x27\xc1\xdb\xbd\x1e\x68\xb7\xb7\xb1\x4b\xa6\xdf\xb7\x38\xfa\x3d\x35\x83\xb8\x11\x1e\x7b\xaf\x8c\x79\x8b\xaa\x3d\xad\x18\xdf\xaa\xbc\x77\xfe\x2b\x00\x00\xff\xff\x80\xf8\x42\xb7\xcb\x45\x00\x00")

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateSh,
		"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh",
	)
}

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateSh() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh", size: 17867, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMeta,
		"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh.meta",
	)
}

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x51\x93\xda\x38\x12\x7e\xf7\xaf\xe8\x25\x5c\x16\x2e\xd8\x66\xb2\xc9\x3d\xcc\x1c\x5b\x45\x26\xec\x2d\x95\x84\x6c\x0d\x64\x53\xa9\x24\xc5\x0a\x5b\x80\x37\xc6\x62\x25\x19\xc2\xb1\xfc\xf7\xfb\x5a\x32\x06\x72\x99\xd4\xd5\x3d\xdc\xc3\x4d\x65\x18\x63\x49\xad\xaf\xbb\xbf\xfe\x5a\xca\x83\xef\xe2\x59\x56\xc4\x33\x61\x96\x41\xf0\x80\x6e\xd5\x7a\xa7\xb3\xc5\xd2\xd2\xe3\xee\xd5\x13\x9a\x2c\x25\xbd\x28\x67\x52\x17\xd2\x4a\x43\xfd\xd2\x2e\x95\xc6\xdf\x3c\x27\x37\xcb\x90\x96\x46\xea\x8d\x4c\xa3\xe0\x01\x96\xbf\xcc\x12\x59\x18\x99\x52\x59\xa4\x52\x93\xc5\xf2\xfe\x5a\x24\xf8\x53\x8d\x74\xe8\x57\xa9\x4d\xa6\x0a\x7a\x1c\x75\xa9\xc5\x13\x1a\xd5\x50\xa3\x7d\x03\x0b\x3b\x55\xd2\x4a\xec\xa8\x50\x96\x4a\x23\x61\x22\x33\x34\xcf\x72\x49\xf2\x73\x22\xd7\x96\xb2\x82\x12\xb5\x5a\xe7\x99\x28\x12\x49\xdb\xcc\x2e\xdd\x36\x95\x11\xc0\xa0\x77\x95\x09\x35\xb3\x02\xb3\x05\xe6\xaf\xf1\x6d\x7e\x3e\x8f\x84\x75\x80\xf9\x67\x69\xed\xfa\x3a\x8e\xb7\xdb\x6d\x24\x1c\xd8\x48\xe9\x45\x9c\xfb\x89\x26\x7e\x39\xbc\x1d\x8c\xc6\x83\x10\x80\xdd\x92\x37\x45\x2e\x0d\x3b\xfe\x47\x99\x69\xb8\x3a\xdb\x91\x58\x03\x4f\x22\x66\x40\x99\x8b\x2d\x29\x4d\x62\xa1\x25\xc6\xac\x62\xbc\x5b\x9d\xd9\xac\x58\x74\xc8\xa8\xb9\xdd\x0a\x2d\x61\x25\xcd\x8c\xd5\xd9\xac\xb4\x17\xc1\x3a\xa2\x83\xcf\xe7\x13\x10\x2e\x51\x50\xa3\x3f\xa6\xe1\xb8\x41\xcf\xfa\xe3\xe1\xb8\x03\x1b\x6f\x87\x93\x9f\x5f\xbf\x99\xd0\xdb\xfe\xdd\x5d\x7f\x34\x19\x0e\xc6\xf4\xfa\x8e\x6e\x5f\x8f\x9e\x0f\x27\xc3\xd7\x23\x7c\xfb\x89\xfa\xa3\x77\xf4\x62\x38\x7a\xde\x21\x89\x50\x61\x1b\xf9\x79\xad\x19\x3f\x40\x66\x1c\x46\x97\x3a\x1a\x4b\x79\x01\x60\xae\x3c\x20\xb3\x96\x49\x36\xcf\x12\xf8\x55\x2c\x4a\xb1\x90\xb4\x50\x1b\xd0\x01\xee\xd0\x5a\xea\x55\x66\x38\x99\x06\xf0\x52\x58\xc9\xb3\x55\x66\x85\x75\x6f\xfe\xcd\xa9\x88\xf9\xc5\x84\x9a\x95\x26\x2b\x18\x42\xae\x16\xb0\xcc\x5b\x6d\x97\xd2\x81\x13\xb4\xc8\x36\xb2\x40\xea\x7e\x97\x89\x25\xb3\x54\x65\x8e\x08\x4b\x4a\xb4\x14\x88\x04\x2c\x6c\x05\x76\xcb\xf1\x35\xdd\x91\x2c\xb0\x38\xf1\x39\x30\x22\xb7\x1d\xc6\x41\xb1\xb4\x49\xfc\xa9\x66\x6d\x2c\xd2\x94\x01\x21\xa6\xd8\x03\x16\x56\xa2\x80\x23\x29\x53\xb7\xcc\x2d\xbf\x77\xdc\x10\x36\xa2\xb1\x15\xda\x92\x84\x87\x3b\x10\x0f\x3e\xce\x64\xae\xb6\x6e\x10\x09\xd1\xc0\xa4\xf4\x2e\x0a\x5e\xbc\x79\x36\xb8\x9d\xbc\xec\x35\xf7\xd5\xd3\xf4\xd9\x70\x74\x1d\xc6\xa5\xd1\x71\xae\x12\x91\xbb\x9a\x62\x08\x89\xcd\x0f\x41\xd0\x7f\xfe\xfc\xf5\x68\x7a\xfb\xf3\xe0\xf6\xc5\x74\x38\x9a\x0c\xee\x7e\xed\xbf\x9c\x8e\x07\xb7\x30\x30\x19\x8c\x27\xd3\xfb\xc6\xaf\xc3\xbf\x75\xbb\x58\x3f\x7e\x37\x9e\x0c\x5e\x4d\x47\xfd\x57\x83\xf1\x2f\xfd\xdb\x41\x8f\x4d\x87\x66\x67\xac\x5c\x05\x56\x97\xc6\xee\xa6\x2b\x81\x6f\x9a\x2d\xde\xbd\x19\x4f\xde\x4d\x5f\xf5\xb1\xe6\xee\x3a\x9c\x8b\xdc\x48\xd8\x98\x97\x45\xc2\x99\x41\xd0\x4c\xa9\xe5\x74\x0d\x0f\x55\xd1\x6a\xd3\x3e\x20\xca\xe6\xf4\x1d\xf9\x37\x14\x86\x9b\xaa\x44\x7f\xa4\x38\x95\x9b\xb8\x28\x51\xee\x8f\x7f\x7c\x78\x75\xc3\x01\x2c\xb8\x64\x02\xfe\x90\xc9\x52\x51\x63\xa4\x8e\x0b\xf1\x8f\xd3\xbd\x42\x09\x21\xbf\x1d\xd4\x26\xd6\x71\x0d\x8b\xe3\x8c\x6c\x85\xc0\x37\xdc\x62\x17\x26\x0a\x35\xfd\xf2\x0e\x24\x1e\x4d\x87\xaf\xfa\xff\x18\xf4\x16\x89\x8e\x32\x15\x2f\x94\x5a\xe4\x72\x9a\xa8\x82\x2b\x18\x68\x62\x6f\xe0\x7a\x73\xe5\x77\xfe\xbc\x56\xc8\x93\x5f\xda\x6b\xa4\x2a\xf9\x04\xf2\xe8\x92\xc1\x67\x05\xc2\x20\xe0\xea\x46\xe2\x9b\x5e\xe1\x03\x34\xe8\x15\xaa\x90\xd4\xdc\x9f\xef\x76\xa8\x60\x31\x20\x89\x20\x7d\xc5\xb4\x9f\x80\x81\x79\x16\x1c\x98\xbf\xcd\x2b\x27\x46\x85\x58\x49\x66\x8d\xa3\x16\x57\xb9\x61\xe2\x70\x21\x35\x1f\x43\x6e\xca\xc2\x3a\x4e\xe9\x0c\xa2\x79\x1c\x75\xc1\x71\x0b\xdc\xbc\x1f\x28\x95\x39\x54\x0a\xfa\x60\x24\x3c\x4d\x0d\xc8\x66\xb7\x12\x01\xb6\x5b\x05\x23\x28\x99\xa4\x74\x6e\x38\x3b\xbc\xe6\x09\xf1\xc6\x06\x22\x25\x4f\xf9\x74\xc6\xa7\xce\x70\x95\xcd\x3a\xb6\xee\xe5\xf4\x08\xb8\xd7\xbc\xba\x39\x1f\x75\x66\x7b\xcd\xc7\x17\x2f\x1d\xa8\x5e\xf3\x87\x8b\x97\xf5\xae\xbd\xe6\x93\x00\x03\xbe\x1a\x43\x14\x90\x2a\x51\x7f\xe1\x5c\xab\x55\xc8\x72\x85\x8a\x69\x34\x5b\x09\xaa\xa5\xb9\xbf\xdc\xfc\xd0\x6e\x60\x68\xef\xf6\x3c\xb8\x47\xb7\x93\x7f\xfc\x62\xaa\x7b\x57\xef\x79\x68\xd4\xa1\xaf\xb6\x70\xa2\xff\xbb\x61\xca\x69\xda\x89\x55\xfe\x3f\x0a\xbc\xd7\x09\xd6\x0b\x2f\x4f\xd8\x80\xe9\xbd\xe5\xa2\x80\x96\x2d\x18\x9b\x98\xa9\x12\x9a\xe2\xb9\xf0\xf4\x14\xb9\x4a\x51\xeb\xc5\xa7\xfc\x7d\x23\x98\x5f\xe6\x13\xd8\xe6\xd9\x62\xea\x07\x2f\xd2\xf9\x9f\xe7\xb2\xb2\xe1\x09\xf1\xe4\xbe\x34\x3f\xe5\x81\xed\x92\xfb\xee\x7b\x3a\xa6\x8d\xc2\x85\xa5\x2e\x7d\xbc\xa1\x54\x9d\x29\x40\x73\x7f\x81\x0b\xe9\xfb\x93\x6a\x65\x3c\x70\xfd\xd5\x76\x2f\xf3\xea\xfa\xe6\x8e\xc2\x39\x85\xf4\xf0\x21\x7d\x70\x36\x4f\x76\x7b\x3d\x1a\x97\x49\x82\x4e\x31\x87\x02\xed\x7c\x32\xa1\xdb\xf5\x7e\x8e\x2c\x9c\xc7\x53\x94\xcf\xed\x13\xd3\xb0\x95\x22\xb8\x14\x0e\x0d\xf8\x77\xb1\x87\x96\xb6\xd4\x05\x75\x6f\xbc\x1c\x49\x5b\xc5\xd0\x7d\x86\x57\x37\xc1\x05\x90\x9f\x04\x42\x91\x9e\x28\xf5\x5f\x62\x88\x4e\xb1\xf4\x1c\xd5\x72\x05\x85\x43\xd4\x22\xea\xf5\xbc\x32\x9a\x5c\xca\x35\x1d\xeb\x83\x71\x80\xb9\x2c\x4e\x15\x62\x40\x3b\xfc\xff\xb4\xd2\x3a\xc2\x67\xc7\x4c\xaf\xaa\xde\xb6\xae\xd3\x7e\x19\x49\x2f\x02\xdf\x68\xac\xf7\x0d\x1d\x5c\xa0\x83\x8b\x2e\xc8\xe1\x7c\xa9\x44\xea\x94\xc2\xf5\x56\x59\x6c\x3a\xcc\xff\x64\x49\x4b\x17\xa5\xdc\x8d\xe1\x75\xa6\x55\xb1\x92\xd0\x99\x8d\xd0\x19\x1f\xf9\x0c\x6d\x11\x54\x7f\xaa\x73\xd5\xdf\x21\x77\xea\x9c\xe7\x40\xcc\xea\xc4\x69\x59\x21\x24\x01\x5b\x9e\xc2\xc4\x94\xdf\xf6\x1a\x31\x2c\xc4\x09\x1f\x38\xcf\x42\x8c\xfe\x05\x87\xf3\x3c\x3e\x4e\x8e\x78\x72\x23\x40\x87\x7e\x8f\x1e\x1d\x4a\xae\x37\x1e\x03\x63\xa7\xee\x84\xe1\x79\xc8\xe2\x89\x8a\xfa\xe8\x7b\x34\x77\xb4\x0d\x8a\xba\xd9\x3a\xb6\x3c\xd4\x61\x42\xdf\x7f\xff\x7d\x80\x43\x1f\x37\xb8\x75\xb6\x96\xa6\x83\x23\x44\x87\xed\xe3\x78\x00\xea\x7c\xea\x6c\x18\xba\x53\xd4\x1c\xe1\x68\x61\x38\x32\x36\xcd\x8a\x76\x94\xa1\xab\xe2\x77\x65\x5a\xed\x6b\x58\x5f\xa3\xd2\x6d\xab\xc1\xdc\x51\x05\x6a\x73\x0f\x5f\x0e\x3d\x7c\xe6\x25\x60\x44\xde\xe3\x16\x5e\x52\x0f\x66\xc9\xbd\xc7\xa3\xdb\x35\xfa\xa3\x54\x56\xb6\xa0\x16\xad\x4d\x1b\x3f\x01\x60\xd1\xdf\x8f\x7e\xd5\x01\x3a\x34\xda\x01\xda\xae\xbb\x95\x38\xca\xba\x0c\x9c\xca\xcc\x31\xc9\x9d\x31\x40\xea\xd2\xf8\xea\x5c\x2a\xe3\xf5\x3e\xc9\x4b\x3e\x0f\x85\x39\x18\x98\x33\xa3\x42\x10\x37\x0a\xce\x9a\xe5\x3d\xe4\x8e\xeb\x1d\x5c\xe4\xe9\xaa\xdb\xc5\x2f\x35\x20\x1f\x0c\xe5\xad\xc8\x6c\x7d\x3a\x4e\xe5\x5c\x30\xef\xf9\x0a\x84\x43\x2e\x89\xc4\xb7\x20\x00\x39\x15\x1a\x87\xb4\xe6\x95\x3f\xb3\x9d\xbc\x88\x02\xab\x3e\x49\xf4\x3e\xac\x4b\x7b\x8d\x46\x70\xd4\xdc\xf0\x9f\xae\x5d\x9e\x06\x7d\x72\x9d\xf0\x7a\x85\x88\x9e\xe2\xf1\x7c\x35\x27\xbb\x56\xdd\x05\x04\xed\x0b\xe5\xfd\xf2\x14\x09\x8b\x15\xf0\x23\xee\xa3\x3f\xa1\xc2\x31\x3f\x04\xd0\x35\x38\x8c\xb5\xfb\xbd\xab\xb6\x0c\x47\xfa\xcf\x14\xa1\x3d\x42\x8a\x0c\x75\x0f\x87\xfd\x3e\x72\x02\x88\x07\x09\x88\x2c\xfd\x7f\x42\xd9\x4a\xd9\x0e\x9c\x68\x9d\xca\xfb\xbe\x50\x55\xc1\xf9\x0a\xba\xb3\x54\x73\x09\x3a\x4f\xe9\x32\x24\xbe\x94\x6b\x7e\x88\xb4\xba\x8f\xb8\x93\xa3\x56\x79\x25\x7e\x86\xcf\xb7\x00\x00\xa9\x64\x05\x44\xf6\x30\xb7\xc0\x95\xd0\x0b\xa5\x23\x43\x85\xcb\x44\x34\xf4\x17\x45\x77\x97\xe1\xe6\x8f\xca\xae\x17\xbb\xc2\x3e\xe1\xf2\x06\x40\xc4\xe2\xe8\x5f\x87\xc5\xa0\xd2\x5a\x63\x99\x9c\xc9\x89\xbb\xde\xe4\x91\x3d\x7c\x09\xac\x82\x72\x46\x07\x1e\x04\x6a\xde\xa9\xd9\xc2\xa6\x5f\xd3\xe0\xca\xcb\xb0\xf2\xd2\xd0\x87\x16\xb9\x54\xd3\x87\xbf\x7a\xd2\x22\x81\xf5\x0b\x77\x50\xfa\xd0\x6e\x1f\xc9\x73\x56\x01\x20\x05\xf6\x42\xd6\x2a\x92\x1f\xf1\x3c\x0c\x8e\xad\xef\xd1\x23\x87\xc6\xcf\x63\x7d\x3f\x92\xfa\xd1\xa3\x46\x95\x62\x84\x7f\x29\x93\x4f\x1c\x63\x57\x78\x4e\x8f\x4a\xed\xae\x81\x2e\x73\x09\xe2\xe3\x9b\x04\xee\x81\x96\x1b\xbe\xbb\xc4\x0b\xe3\xa3\x82\xd2\xd5\x30\x52\x19\x8e\xcb\x75\xea\xfe\xa6\xac\x70\xd2\x4b\x32\x8b\x9b\x39\xdd\x2f\xb8\xb0\xa3\xaa\x52\x98\x6c\x17\x9e\x81\x9d\xbd\xaa\x4f\x3c\x6a\xfc\xc5\x40\x44\x88\x1e\xb8\xda\x73\x3e\x87\xde\x7e\x64\x96\xb4\x82\x42\x70\x9d\xa6\x72\x9d\xab\xdd\xa9\x50\x0d\x07\xae\x6e\x51\xc4\xdc\x3b\xfe\x27\x04\x6c\xfd\x86\x11\x17\xda\x66\xf7\xb7\xf8\xab\x76\xef\x69\x9a\xdf\x68\x49\x1c\xee\x22\xfd\x2a\x74\x1c\x89\xab\xf7\xa8\xee\x6a\xd2\x21\x6c\xee\x6b\x67\x0f\x6d\xe7\x21\x99\x72\x66\xf9\xde\xe3\x5c\xb0\x19\x00\xae\x85\x61\x55\xe4\xf3\xa4\xf7\xcb\xc9\x06\x0f\xf9\x1b\xdf\x7b\x3e\xd9\x55\xf6\xd1\x1e\x72\xfb\x2d\x88\xf4\xf1\xd4\x5a\x2a\x05\x9a\xb2\x29\x0f\xec\xde\x65\xe1\x69\x07\x87\xf3\x74\xbc\x39\x99\x38\xf8\xfb\x95\x63\xd3\xbf\x02\x00\x00\xff\xff\x14\x63\xd3\xea\x8f\x12\x00\x00")

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsSh,
		"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh",
	)
}

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsSh() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh", size: 4751, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMeta,
		"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh.meta",
	)
}

func nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\xb1\xce\x82\x30\x18\x45\xf7\x3e\x05\x2f\x00\xdd\xff\x84\xe1\x37\x38\x18\x63\x1c\x88\x71\x20\x0c\xa5\xdc\x40\x15\xbe\x92\xf6\xd6\xe8\xdb\x8b\x0e\xc6\xb8\xdd\xe1\xdc\x73\x9a\x93\x38\xb6\xaa\x42\xb4\xc1\x2d\x74\x5e\xca\x7d\xea\x10\x04\x44\xcc\xfe\xfb\xde\x4b\x76\xec\x2e\xb0\xcc\x0e\x46\xcc\x80\xa0\x2a\x6f\xd3\x0c\xa1\x79\xd3\x23\xb9\xc4\x3f\xad\x07\xc7\x31\x75\x85\xf5\xb3\xbe\x7e\x04\x5f\x53\xa9\xa6\x46\xb8\x39\x8b\x56\x6d\xef\xb0\x35\x4d\x60\xa9\x41\xfb\xcb\xe7\xe6\x55\x8d\x45\x1c\xd7\xcf\x4e\x22\xcd\x34\xb5\xea\x6c\x84\xe8\x37\x8f\x72\x4e\x13\x5d\x9e\x22\x42\xb1\x2a\x06\x50\x3d\x03\x00\x00\xff\xff\xae\x11\x37\xdb\xc4\x00\x00\x00")

func nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsService,
		"nodeup/_kubernetes_master/kube-addons/services/kube-addons.service",
	)
}

func nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsService() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-addons/services/kube-addons.service", size: 196, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\x08\x3c\xec\x29\x89\xec\x00\xc1\x06\x3e\x04\xd8\x45\xd1\x22\x28\xda\x1a\x30\xd0\x4b\x90\x03\x2d\x4f\x22\xc2\x94\xa8\x92\x94\x5a\xd7\xd0\x7f\xef\x90\x96\x69\x51\x12\x15\x35\xc9\x21\x10\x67\xe6\xbd\xf9\x7a\x93\x63\x44\x68\xc9\xbe\x83\x54\x4c\x14\x64\x15\x93\x7a\x49\xae\x22\xb2\x67\xc5\xce\x7c\xad\xc5\xce\x7c\xe6\xa0\xe9\x8e\x6a\x8a\x4f\xc7\x28\x8e\x49\x41\x73\x20\x2b\xb2\xaf\xb6\x70\x8d\xe1\x0a\x64\x0d\x12\x1d\x5b\x93\x2a\x69\x0a\x26\xdc\x3a\xa8\x83\xd2\x90\x93\xa8\x41\x20\x55\x42\x4a\x56\x48\x9a\x09\xa5\xbf\x82\xfe\x29\xe4\x1e\x1d\xb5\xac\x00\xad\xa9\x28\x34\x65\x05\x26\x43\x56\x4f\x08\x16\x5b\x36\xc7\x17\x8f\x11\xa2\x95\xe5\xf4\xd5\x9a\x8f\xc7\xf8\x33\x7a\xfc\xb7\x7e\xdc\x58\x87\x9b\x47\x63\x89\x9b\xe6\xec\x29\x41\x89\x4a\xa6\xa0\xda\x42\xda\xc7\x1f\x15\x28\xdd\x7d\xc3\xd7\xb4\xac\x0c\xe4\xed\xdd\x02\x53\x3f\xbd\x35\xf6\x6f\xd3\x62\xa5\x22\xcf\xa9\xed\xd2\x93\x8b\x72\x3f\x24\xd9\xb2\x22\x51\x59\x4b\xec\xdb\xae\xd3\xd1\xe7\xa4\x52\x32\xe1\x22\xa5\xdc\x06\xfb\xb5\xc6\x58\xdb\xff\x15\xe3\xbb\x8f\x9c\xbe\x2a\xbf\x4c\x2c\x30\x5e\x3e\x3c\x24\x35\x35\xf1\xaf\xbd\xc8\x1b\x7c\x8a\x6f\x1f\xfe\x59\x92\x3e\xe7\x73\x5b\x09\x67\x35\x14\xa0\xd4\x5a\x8a\x2d\x74\x3b\x93\x69\x5d\x7e\x02\xed\x37\xc6\x4c\xce\x74\x66\x79\xfb\xef\xcd\x02\x7f\x97\x9d\x62\x48\x29\xa4\x31\xde\x2f\xee\x17\xdd\x57\xaa\x33\x13\x92\x64\x40\xb9\xce\x7e\xbb\x86\x9e\x7d\x08\x2b\x98\x66\x94\x7f\x00\x4e\x0f\x1b\xc0\x3d\xd8\x99\x71\x2c\xef\x9c\x83\x66\x39\x88\x4a\x77\x6d\xde\x34\x0c\xb1\xdb\x1a\xdc\x9b\xcb\xce\x98\x22\x54\x37\x47\xb7\x65\xeb\x53\xb2\x83\xad\x41\x92\x4a\x82\xb1\x62\x67\xaf\xfc\xca\x67\xc5\x60\x56\xae\x61\x2e\x0f\x3b\xd9\xa9\x3c\x7a\x4d\xeb\xb0\x19\x4b\x13\xf5\xc7\x56\x0b\x5e\xe5\xf0\x45\x54\x85\xdd\xdd\xcb\x16\x1e\x1d\x27\x6e\x94\xca\x28\x6e\xbd\x42\x66\x92\x1b\xd7\xf5\x79\x16\x66\xdb\xac\x31\xb1\x56\xa3\x03\xba\xfb\x56\xf0\x43\xab\xc7\xe6\xaa\x07\x14\xc2\x98\x15\xcd\xd9\x36\x04\x80\xa6\xb9\x20\xa6\x85\xa2\x84\x22\x08\x65\xd5\xe3\x3c\x46\x00\xa3\x4b\x97\x2e\xa3\x51\xb2\x36\x9a\xe9\x0e\xc7\xc3\x1e\x4c\xdb\x18\x36\xb2\x36\x8f\xb2\x00\x0d\xea\x72\x63\x6c\xf4\x90\x76\x84\x15\x75\xf9\xc2\x78\x98\x75\x42\xcf\x01\xae\x17\xca\x55\x80\x0c\x74\x6a\x5b\x12\xe2\x42\x7b\xd2\x73\x98\x55\x04\xe6\x38\x89\x6b\x6a\x78\x0f\x2e\xe6\xe3\xc6\x38\x95\xf3\x88\xd3\x5c\xfc\x72\xcf\x34\x57\xd3\xf0\xe8\x93\xf4\x9c\x66\xc1\xe3\x46\x29\x95\x95\x52\xfc\x3a\xfc\xf5\x56\x6d\xda\xc0\xf0\x4e\x9d\xe6\xdc\x9a\x9e\x4f\x77\x30\xc2\xb3\xd0\x9e\x84\xf6\x0e\x86\xce\x80\x3d\x2c\xa7\x1c\x8e\x97\xd3\xec\x9f\x83\x66\x5c\xfd\x13\xa1\x63\x41\x4e\xf4\xe1\xb8\xb3\xf8\x87\xb1\xbe\xd6\x27\x10\x3c\xcd\x37\x27\x89\x07\xc5\xed\x01\x0d\xff\x43\xcd\x53\xba\x69\xbd\x9d\x7b\x50\xcd\x6f\xd0\x4c\x49\x7b\x0c\xdc\x53\xef\x5b\xd8\x67\x29\x8f\x01\x79\x72\x9d\x93\x64\x08\x68\xa0\xcf\x39\x59\xb9\x21\x8d\x03\x7a\x82\x9c\x83\x77\x56\xe7\x18\xde\x50\x81\xef\x1c\x7d\x57\x8e\x96\x28\x7a\x8e\x9a\xe6\x4f\x00\x00\x00\xff\xff\x8b\x4b\xc3\xbb\x38\x0b\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplate,
		"nodeup/_kubernetes_master/kube-apiserver/files/etc/kubernetes/manifests/kube-apiserver.manifest.template",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/etc/kubernetes/manifests/kube-apiserver.manifest.template", size: 2872, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x70\x4f\x2d\x09\xc9\xcf\x4e\xcd\x53\x50\xca\x2e\x4d\x4a\x55\x52\xa8\xad\xd5\x49\x4c\xc9\xcd\xcc\x83\x90\x5c\x80\x00\x00\x00\xff\xff\xfe\xe9\xab\x2b\x22\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplate,
		"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template", size: 34, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x33\x30\x50\xe2\xaa\x05\x04\x00\x00\xff\xff\xa2\x86\x93\x2a\x14\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMeta,
		"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template.meta",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\xc9\x4c\xd1\x51\x50\x29\xc9\xcf\x4e\xcd\x53\xb0\xb2\x55\x70\xcc\xc9\x09\x01\xb1\x8b\x15\x6a\x6b\xb9\x80\x8a\xa0\x32\xb5\xb5\x3a\x20\x4e\x66\x0a\x0a\x0b\xa4\x20\x35\x0f\xcc\x02\x04\x00\x00\xff\xff\x15\x1d\x41\xc4\x50\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplate,
		"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template", size: 80, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x33\x30\x50\xe2\xaa\x05\x04\x00\x00\xff\xff\xa2\x86\x93\x2a\x14\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMeta,
		"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template.meta",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLog,
		"nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMeta,
		"nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log.meta",
	)
}

func nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4d\x6f\x9c\x30\x10\xbd\xf3\x2b\x90\x0f\x3d\x25\x61\x59\x29\xaa\xb4\x87\x1c\xda\xaa\x55\x55\xa5\x8d\x14\xa9\x97\x28\x07\x2f\x3b\x09\xd6\x1a\x9b\xda\x66\xab\x14\xf1\xdf\x3b\xe3\x00\x0b\xbb\x98\xd0\x26\x87\x88\x99\x37\x6f\x3e\x9f\x53\x47\x8c\x97\xe2\x27\x18\x2b\xb4\x62\x9b\x98\x1d\x52\x76\x11\xb1\xbd\x50\x3b\xfa\xba\xd3\x3b\xfa\x2c\xc0\xf1\x1d\x77\x1c\x4d\x75\x14\xc7\x4c\xf1\x02\xd8\x86\xed\xab\x2d\x5c\x66\x5a\x39\xa3\xa5\x04\x73\x59\x70\xc5\x9f\xc1\x60\x44\x8b\xb1\x25\xcf\x80\x78\x3c\xd2\xbe\x58\x07\x05\x8b\x1a\x64\xb4\x25\x64\x6c\x83\xd9\x73\x6d\xdd\x77\x70\xbf\xb5\xd9\x23\xd0\x99\x0a\xd0\x4b\x9c\x5c\x28\xac\x8a\x6d\x1e\x90\x2c\xf6\x69\xfb\xc4\xf1\x6c\x66\x84\x89\x02\xbf\x08\x57\xd7\xf1\x37\x84\x7e\xec\x91\xb7\xaf\xc0\xab\xaf\x84\x88\x9b\xa6\x8b\x30\x60\x75\x65\x32\xb0\x6d\x8b\xad\xf1\x57\x05\xd6\x0d\x6d\x68\xcd\xca\x8a\xa8\xd7\xab\x15\xf6\xf2\x6a\x6b\xfc\xdf\xa6\xe5\xca\x74\x81\xf5\xd0\xfc\x1e\xfa\xa8\xfe\x87\x25\x5b\xa1\x12\x9b\xb7\x89\xc7\xbe\xcb\x6c\xd2\x9c\x54\xd6\x24\x52\x67\x5c\xfa\xe0\x40\xf3\x31\x36\xfb\xa1\x12\x72\xf7\x59\xf2\x67\x3b\xdd\x37\x76\x1c\xa7\x37\x37\xc9\x81\x13\xe1\x73\x88\xea\x0a\x7d\xf1\xfa\xe6\x5d\xca\x4e\xab\x79\x6c\x7b\x94\xe2\x00\x0a\xac\xbd\x33\x7a\x0b\xc3\x99\xe5\xce\x95\x5f\xc0\x8d\x47\x46\x4b\xa6\x99\xa5\xeb\xf7\x57\x2b\xfc\x4d\x07\x6d\xb2\x52\x1b\x72\xa6\xab\xf5\xf5\x7a\x68\xe6\x2e\xa7\x98\x24\x07\x2e\x5d\xfe\xa7\x9f\x75\x87\x61\x42\x09\x27\xb8\xfc\x04\x92\xbf\xdc\x03\x76\xb1\xa3\x4d\xa5\xd7\x3d\xc0\x89\x02\x74\xe5\x86\xbe\xd1\xa2\x0e\x5a\x56\x05\xdc\xea\x4a\xf9\x1d\x1f\xb7\x55\xf7\x87\x86\x93\xb7\x39\xc7\xeb\xb0\x92\x5d\xb0\x82\xa0\x77\x5d\x61\xb4\x15\xef\x4c\xbc\x97\xee\x85\xef\x7e\x28\xf9\xd2\x1e\x72\x73\x71\x42\x14\xe2\x58\x14\x2d\xc5\x36\x44\x80\xae\xa5\x24\x74\x44\xba\x04\x15\xa4\xf2\x57\xd6\x23\x26\x08\x8f\x43\x3a\xca\xd1\x9a\x03\x5d\xd2\x70\xab\x23\xea\xa0\x0c\x09\x70\x6f\x0e\xe4\x34\x0a\x1c\xd8\xa3\x24\x3d\xcb\xa2\xec\x78\xac\x4f\x42\x86\xb3\x2f\xb9\xf6\x40\xd2\x27\x2e\x6d\x20\x2b\xb8\xcc\x8f\x28\x94\x14\xfd\xc9\x09\x60\x51\x37\x58\xec\x2c\x2f\x35\xf3\x3f\xbc\x58\x4f\xbf\xd6\xb9\x9a\x27\x40\x4b\xf9\xcb\xbd\x70\xd2\xce\xd3\x23\x26\x39\x01\x9d\xd2\xb7\x9e\xc7\x57\xad\x46\xf8\xe4\xb4\x4a\x6d\xff\x1b\x84\xd4\x49\xaf\x4c\x9b\xab\x3e\x3e\x1f\x63\x95\x36\xd3\xa2\x9c\x09\x9d\x0a\xea\xb5\x18\x8e\xeb\x34\x79\x1e\x3b\x96\xe0\x0c\xc3\x48\x8a\xc8\x13\x45\x33\xa2\x1b\x11\x9d\xbf\xa2\xff\xa6\x40\x5a\x81\xdf\x72\x50\x65\x6f\xa4\x5b\x24\xb9\xa9\x2c\x23\x55\xbd\x95\xa4\x93\xd8\x14\xd1\x48\x46\x4b\xaa\x0d\x11\x9d\xe9\x66\x49\x55\xfd\xd6\xa6\x09\x47\x42\x59\xc2\xd7\xa9\xc6\xf3\x45\x8f\x51\xd3\xfc\x0d\x00\x00\xff\xff\x6d\xa3\xd3\x86\xb9\x09\x00\x00")

func nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplate,
		"nodeup/_kubernetes_master/kube-controller-manager/files/etc/kubernetes/manifests/kube-controller-manager.template",
	)
}

func nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-controller-manager/files/etc/kubernetes/manifests/kube-controller-manager.template", size: 2489, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLog,
		"nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log",
	)
}

func nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMeta,
		"nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log.meta",
	)
}

func nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\x38\x38\x0f\xdd\x80\x48\xb2\xdb\xa6\x2b\x34\x64\x80\x17\x77\xab\xd1\xce\x09\x62\x77\x45\x9f\x06\x9a\x3a\x5b\x84\x29\x52\x25\x29\xbb\x6e\xd1\xef\xbe\xa3\x24\xdb\x54\x9a\x2c\xce\x9c\x07\xc3\xbc\xbb\x1f\xef\xef\xef\x98\x33\xb8\xd2\xe5\xce\x88\x55\xee\xe0\xf9\x60\xf8\x0a\xe6\x39\xc2\xbb\x6a\x81\x46\xa1\x43\x0b\xa3\xca\xe5\xda\xd0\xb7\x94\x50\x6b\x59\x30\x68\xd1\x6c\x30\x8b\x7b\x67\xbd\x33\x78\x2f\x38\x2a\x8b\x19\x54\x2a\x43\x03\x8e\xcc\x47\x25\xe3\xf4\xd5\x4a\xce\xe1\x6f\x34\x56\x68\x05\xcf\xe3\x01\xfc\xe4\x15\xfa\xad\xa8\xff\xf3\xaf\x84\xb0\xd3\x15\x14\x6c\x07\x4a\x3b\xa8\x2c\x12\x84\xb0\xb0\x14\x12\x01\xbf\x70\x2c\x1d\x08\x05\x5c\x17\xa5\x14\x4c\x71\x84\xad\x70\x79\x7d\x4d\x0b\x42\x6e\xc0\xa7\x16\x42\x2f\x1c\x23\x6d\x46\xfa\x25\xfd\x5a\x86\x7a\xc0\x5c\xed\xb0\xff\xe4\xce\x95\x69\x92\x6c\xb7\xdb\x98\xd5\xce\xc6\xda\xac\x12\xd9\x28\xda\xe4\xfd\xe4\xea\xcd\x74\xf6\x26\x22\x87\x6b\x93\x0f\x4a\xa2\xf5\x81\x7f\xae\x84\xa1\x50\x17\x3b\x60\x25\xf9\xc3\xd9\x82\xbc\x94\x6c\x0b\xda\x00\x5b\x19\x24\x99\xd3\xde\xdf\xad\x11\x4e\xa8\xd5\x39\x58\xbd\x74\x5b\x66\x90\x50\x32\x61\x9d\x11\x8b\xca\x75\x92\xb5\xf7\x8e\x62\x0e\x15\x28\x5d\x4c\x41\x7f\x34\x83\xc9\xac\x0f\xbf\x8f\x66\x93\xd9\x39\x61\x7c\x9c\xcc\xdf\x5e\x7f\x98\xc3\xc7\xd1\xed\xed\x68\x3a\x9f\xbc\x99\xc1\xf5\x2d\x5c\x5d\x4f\xc7\x93\xf9\xe4\x7a\x4a\xbf\xfe\x80\xd1\xf4\x13\xbc\x9b\x4c\xc7\xe7\x80\x94\x2a\xba\x06\xbf\x94\xc6\xfb\x4f\x4e\x0a\x9f\xc6\xba\x74\x30\x43\xec\x38\xb0\xd4\x8d\x43\xb6\x44\x2e\x96\x82\x53\x5c\x6a\x55\xb1\x15\xc2\x4a\x6f\xa8\x1d\x28\x1c\x28\xd1\x14\xc2\xfa\x62\x5a\x72\x2f\x23\x14\x29\x0a\xe1\x98\xab\x4f\x7e\x08\x2a\xee\x91\xc6\xfc\x50\x4e\x9b\xeb\x4a\x52\xf6\x10\xd6\x6d\x59\xed\x4e\xf1\xa6\xa0\x5c\x56\xd6\xa1\x49\x44\x41\x37\xda\x24\xdf\xd1\x55\x6b\x6a\xc3\x24\x53\x36\x32\x3c\xde\xb1\x42\xf6\x7a\xac\x14\x6d\x33\xa5\xb0\x19\xf6\xd6\x42\x65\x29\xdc\x62\x5d\x0a\xef\xc3\x95\x56\xce\x68\x29\xd1\xf4\x0a\x74\x2c\x63\x8e\xa5\x3d\x00\xc5\x0a\x4c\xc1\xc3\x45\x1e\x6e\x33\x7c\xd9\x1e\x5a\x2a\xfe\x5e\x62\x77\xe4\x40\x41\x02\xc9\x16\x28\xad\xb7\x03\x58\xbf\xb6\x11\x95\xfa\x68\x5c\x9f\x6e\x8e\x3e\xbc\x6c\xd4\x0e\x03\x13\x0b\x9d\xb4\xb1\x44\x7e\x4c\x84\xc7\xef\x3b\x53\x61\xbf\xe7\x33\xeb\x61\x4d\xe3\xb0\x4d\xe1\xdb\xb7\x7a\xd6\xc6\xd3\x59\xdc\x46\x61\xe1\xfb\x77\x52\xb1\x28\x91\x3b\x6d\x9e\xe0\x05\x39\x5f\x4a\xe6\xb0\x31\x09\xc3\xf7\x9f\x30\xa8\x87\x21\xef\x0d\xee\xf4\x00\xbd\xe6\x3e\x48\xff\xe1\x54\x0e\x9a\x47\x02\xdc\x9f\x44\x41\x2d\xc2\x4b\xeb\xb2\xa7\xb0\xe2\xc6\xe3\xaf\xb4\x5e\x49\xfc\xe7\x68\x9e\xb4\xfa\x11\x2b\xb2\x57\x2f\xd3\x61\xfc\xe2\x60\x49\x9d\xad\x2b\xc3\x31\x88\x0d\x80\xba\xee\x7a\x7c\x9d\x52\x8f\x3b\xca\x44\xa1\xcd\xae\x69\x54\x0b\xdb\x1c\x69\x3a\xf1\xd9\x06\xa1\x34\xda\xb7\x65\x56\x77\xec\xe1\xae\x7a\x0e\x24\x33\x2b\xec\xe0\xb5\x21\xdb\x73\xaf\x4d\x8d\x4b\xc0\x9e\x0e\xd0\x3a\xb8\x6c\xb0\xfd\xe4\xaf\x11\xcb\x86\xbf\x8e\x78\x42\x75\x80\x68\xa4\x0c\x53\xce\x53\x05\x97\xcc\xda\x18\xae\x2a\x63\x50\x39\xb9\x3b\xbf\x6b\xba\x64\x52\x5a\x02\x20\x64\xba\xb5\x03\xd3\x5f\x54\xc6\x3a\xcf\x3f\x7d\xa0\xde\xc7\x95\x8f\xd1\xd6\x7a\x75\x72\x25\x39\x98\x69\xb4\xea\x99\x83\x05\xe3\x6b\xbd\x5c\xc2\xd2\xe8\xc2\xe7\xcb\x31\xe3\xc9\x09\x84\x8b\x03\xcc\x26\x41\x61\x16\xa9\x80\x65\x95\xc2\x70\x30\x28\x3a\xa7\x4d\x46\x53\xda\x17\x83\xbf\x44\x20\x69\x13\xf2\x24\x8c\x8b\x10\x42\x8a\x0d\x2a\x62\xaa\x1b\xa3\x17\x18\xa2\x78\xbe\xfe\x13\x5d\x17\xb8\x64\x2e\x4f\x21\xc9\x91\x49\x97\x7f\xed\x8a\xb4\x71\x29\xbc\x1e\xbc\x1e\x74\x8e\x2d\x31\xbd\xef\xbe\xb7\xf3\xf9\x4d\x20\x10\x8a\xc8\x9a\xc9\x31\x4a\xb6\x9b\x21\xa5\x3f\xa3\xd1\x7c\x15\x9a\x3a\x51\xa0\xae\xdc\x41\x78\x11\xc8\x6c\xc5\xa9\xfb\xec\x3c\xa7\xcc\xe6\x5a\x12\x21\x0d\x03\xe9\x92\x09\x59\x19\x0c\xa4\x17\x41\xeb\xb2\x4c\x3c\x39\xde\x83\xd5\xfd\x11\x0f\x4f\x89\xf8\x8c\x46\x80\x4c\x68\xa7\xd3\x9e\x29\x75\x06\x75\x4f\x54\xe5\x61\x09\x04\x2f\x80\x82\xf9\xc6\x87\x76\xd6\x6b\xda\x0f\x81\xb4\x92\x3b\x3f\x0e\x55\x59\x1b\x1e\xdd\xab\xef\xac\xcd\xc8\x5a\xfb\xcd\xed\x72\xe6\x9e\xd1\xe2\xd8\x50\x4e\x7c\xe7\xc6\x8f\xd5\xe0\xc5\x69\x35\xa0\x61\x0d\x7a\xee\xcc\x3f\x16\x0a\x72\x93\x06\xb3\x9f\xec\xe9\xad\x7f\x90\x47\x10\x45\x99\x2e\x68\xc2\x2e\x03\xfa\x1d\xd7\x27\x44\xbe\x71\x57\x91\x38\xc7\xa7\xf6\x92\x1a\xf8\xe2\x48\x3a\xfe\x28\xb8\x32\x3a\xce\xec\x4d\x5d\x87\xae\xf6\x7e\x01\x79\x30\xa9\x39\x93\x81\x84\x48\xc8\x69\xae\x65\x0a\x1f\xc6\x37\xff\x07\xd0\xf1\xf2\x3f\x40\xe7\x57\x37\x77\x98\x97\x6c\xa8\xa2\x9f\x4f\x66\xde\x56\x9f\x38\x77\xf8\x40\xc2\x7d\x9e\xb8\x7f\x44\x45\x56\x7c\x45\x9f\xa9\x41\x47\xa6\x74\xe4\x49\x5a\x6e\x3a\xa7\x4d\x63\x5c\x0e\x9f\xff\x12\x0f\xe8\x6f\x78\xf6\xb4\x0c\xdf\x9f\x8d\xa7\x27\xf6\xe1\xac\x9e\x98\xcf\xbb\xf4\xf3\x58\x3e\xf1\x0b\xf2\xd6\xe6\xb0\xcd\x06\x8f\x6d\xb3\x7a\xaf\x9c\xbc\x6f\x7e\xd8\x31\xa7\xb1\xfc\x43\x24\x7f\x3a\xc7\x9f\x80\xf0\x43\xeb\xf0\x22\xbb\x54\x56\x6a\xbd\x26\x06\x09\x9e\x19\x19\x2e\x59\x25\x5d\x6c\x37\x3c\xbe\x6f\x4e\xe1\xd0\x39\xf0\x5b\x92\xe1\x26\x51\x95\x94\x21\x70\x3d\xb6\x9d\x15\xf0\x58\x4f\xdd\xd9\x17\xf7\x55\x9d\x7a\xe3\x46\xd3\x3b\x8d\xc2\x1a\x37\x0e\xfa\xf2\x8c\xb5\x5f\xb3\xfe\x7f\x97\xf6\x99\x00\xde\xd5\x7f\x03\x00\x00\xff\xff\x26\xc7\x25\x8b\x5b\x0d\x00\x00")

func nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplate,
		"nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-rc.yaml.template",
	)
}

func nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-rc.yaml.template", size: 3419, mode: os.FileMode(420), modTime: time.Unix(1470885764, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x5f\x6f\x9b\x30\x10\x7f\xe7\x53\x9c\xe8\xcb\x26\x25\xd0\x76\xda\x34\xb1\xa7\x2c\xe9\x34\xd4\x8a\x54\x85\xae\xea\xa3\x63\x2e\x60\xc5\xd8\xcc\x36\xa1\xa8\xea\x77\xdf\x19\xe8\xd4\x68\x7f\xf2\x12\xd9\xf7\xbb\xdf\x9f\x3b\x73\x06\x6b\xdd\x0e\x46\x54\xb5\x83\xcb\xf3\x8b\x4f\x50\xd4\x08\xd7\xdd\x0e\x8d\x42\x87\x16\x56\x9d\xab\xb5\xa1\x7f\x29\x61\x44\x59\x30\x68\xd1\x1c\xb1\x8c\x82\xb3\xe0\x0c\x6e\x04\x47\x65\xb1\x84\x4e\x95\x68\xc0\x51\xfb\xaa\x65\x9c\xfe\xe6\xca\x02\x7e\xa0\xb1\x42\x2b\xb8\x8c\xce\xe1\x9d\x07\x84\x73\x29\x7c\xff\x85\x18\x06\xdd\x41\xc3\x06\x50\xda\x41\x67\x91\x28\x84\x85\xbd\x90\x08\xf8\xc4\xb1\x75\x20\x14\x70\xdd\xb4\x52\x30\xc5\x11\x7a\xe1\xea\x51\x66\x26\x21\x1b\xf0\x38\x53\xe8\x9d\x63\x84\x66\x84\x6f\xe9\xb4\x7f\x8b\x03\xe6\x46\xc3\xfe\x57\x3b\xd7\x26\x71\xdc\xf7\x7d\xc4\x46\xb3\x91\x36\x55\x2c\x27\xa0\x8d\x6f\xd2\xf5\x55\x96\x5f\x2d\xc9\xf0\xd8\x72\xaf\x24\x5a\x1f\xfc\x67\x27\x0c\x45\xdd\x0d\xc0\x5a\xf2\xc3\xd9\x8e\x5c\x4a\xd6\x83\x36\xc0\x2a\x83\x54\x73\xda\xfb\xed\x8d\x70\x42\x55\x0b\xb0\x7a\xef\x7a\x66\x90\x58\x4a\x61\x9d\x11\xbb\xce\x9d\x0c\xeb\xd5\x1d\x65\x7e\x0b\xa0\x71\x31\x05\xe1\x2a\x87\x34\x0f\xe1\xeb\x2a\x4f\xf3\x05\x71\x3c\xa4\xc5\xf7\xed\x7d\x01\x0f\xab\xbb\xbb\x55\x56\xa4\x57\x39\x6c\xef\x60\xbd\xcd\x36\x69\x91\x6e\x33\x3a\x7d\x83\x55\xf6\x08\xd7\x69\xb6\x59\x00\xd2\xa8\x48\x06\x9f\x5a\xe3\xfd\x93\x49\xe1\xc7\x38\xae\x0e\x72\xc4\x13\x03\x7b\x3d\x19\xb2\x2d\x72\xb1\x17\x9c\x72\xa9\xaa\x63\x15\x42\xa5\x8f\xf4\x1c\x28\x0e\xb4\x68\x1a\x61\xfd\x32\x2d\xd9\x2b\x89\x45\x8a\x46\x38\xe6\xc6\x9b\x3f\x42\x45\x01\x21\x8a\xdf\xeb\xb4\xb5\xee\x24\x4d\x0f\xe1\x30\xaf\xd5\x0e\x8a\x4f\x0b\xe5\xb2\xb3\x0e\x4d\x2c\x1a\x52\xb4\x71\x3d\x90\xd4\x81\x9e\x61\x5c\x2a\xbb\xb4\x47\x1e\x0d\xac\x91\x41\xc0\x5a\x31\xbf\xa6\x04\x8e\x17\xc1\x41\xa8\x32\xa1\x24\xe6\x48\x82\x41\x83\x8e\x95\xcc\xb1\x24\x00\x50\xac\xc1\x04\x3c\xc3\x92\x18\xe6\x0b\x4b\xbb\x7e\xbd\xb5\x03\xe9\x35\x54\x90\x6c\x87\xd2\xfa\x1e\x80\xc3\x67\xbb\xa4\xcd\x9e\x34\xc2\x78\x98\x3e\x87\x48\xe8\x78\x76\xba\xb4\x93\x6a\x02\xa1\x33\x1d\x86\x7f\x41\x4e\x1e\x42\xff\x35\x6d\xb2\x3c\x0c\xfc\x64\xbd\x8e\x45\x89\xdc\x69\xf3\x6f\xcd\x59\x23\xbd\x4d\xe0\xf9\x19\x66\x82\xc8\xe7\xf4\x97\xf0\xf2\x42\x98\x56\x1b\x37\xda\x5e\xce\x61\x5f\xed\xfa\x42\x02\x1f\x3f\x4c\x07\xa3\x9d\xe6\x5a\x26\x70\xbf\xb9\x3d\x05\x2f\x1d\x6f\xff\xd7\x50\xac\x6f\x7f\x05\x00\x00\xff\xff\xc7\xfd\xc8\x17\x1e\x04\x00\x00")

func nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplate,
		"nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-svc.yaml.template",
	)
}

func nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-svc.yaml.template", size: 1054, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x08\x1d\x7a\xea\xc6\x71\x60\x29\xe4\x90\x43\x29\x2d\xa5\xb4\x0d\x2c\xf4\xb2\xec\x61\x22\xcf\xc6\x22\xfa\x70\xf5\x91\x92\x1a\xff\xf7\x8e\x1c\xd9\xb5\x97\xec\x26\x87\x44\xf3\xe6\x69\xde\x7b\xa3\xae\xe0\xd0\xca\x5f\xe8\xbc\xb4\x86\x6f\x19\x3f\x57\xfc\x7d\xc1\x4f\xd2\xd4\xe9\xb4\xb7\x75\x3a\x6a\x0c\x50\x43\x00\x2a\x75\x05\x63\xdc\x80\x46\xbe\xe5\xa7\x78\xc0\x3b\x2f\x1a\xac\xa3\x42\x47\x8d\x19\xf2\x2d\x08\x4c\xf4\x6b\xc3\xc5\x07\xd4\xbc\xe8\xe9\x22\xdf\xa2\xe0\x5b\x1a\xda\x58\x1f\x7e\x60\xf8\x63\xdd\x89\x1a\x83\x8b\x48\xa8\xb0\x26\x80\x34\x24\x86\x6f\x1f\xe9\x32\x36\x4c\x9b\xe6\xb1\x5b\x03\x09\x95\x1a\x8e\x03\xdc\x75\xec\x1b\x75\x3c\x8c\x0d\xab\xaf\x09\x61\x7d\x3f\x76\x3a\xf4\x36\x3a\x81\x3e\x1b\xc9\xc5\xdf\x11\x7d\x98\xd7\xa8\x2a\xda\x98\xae\xac\xd6\x6b\x92\x7e\xad\xf5\xc3\x6f\x9f\xef\x12\x56\x6b\x18\x52\x7a\x9c\x58\xd3\x87\x97\x07\x69\x4a\xdf\xe4\xc1\x4b\xec\x4e\xdc\x2c\x97\xd1\xbb\x52\x59\x01\x6a\x20\x2f\xbd\x32\xf2\xf6\x31\x4a\x55\x7f\x56\x70\xf4\x4b\x9b\x64\x90\x55\xbb\x5d\x79\x86\xc4\x3f\xbe\x60\xae\xa8\xc4\x36\xbb\x77\x15\x7f\x39\xf3\x29\x3b\x51\xf2\x8c\x06\xbd\xdf\x3b\x7b\xc0\x79\x32\x4d\x08\xed\x17\x0c\xcb\x60\xd2\xe6\x86\x64\x36\x1f\x56\x6b\xfa\x56\x33\x33\xbc\xb5\x2e\x81\xd5\x7a\x73\x5f\xcd\xcb\x10\x9a\xc4\x29\x1b\x04\x15\x9a\xbf\x53\xa2\x63\x0f\x97\x46\x06\x09\xea\x13\x2a\xb8\x3c\x20\x3d\x84\x3a\xed\xa3\xba\x9f\x1a\x82\xd4\x68\x63\x98\x63\x8b\x75\x9c\xad\x8a\x1a\xbf\xdb\x68\x86\x4d\xfe\xdf\x49\x37\xb3\x3d\x3d\x24\xca\xe4\x59\x2a\x5c\xec\x81\xeb\x44\xde\x8f\x52\x5f\x4f\x73\xc9\x72\x08\xf5\x4f\xa3\x2e\x44\x7a\x06\xe5\x71\xc2\xfa\xfc\xef\xe9\xaa\xb3\xa0\xb8\xb3\xca\xfc\xbc\xbb\xd7\xf4\x0c\x19\x67\x21\xdd\x8d\x14\xdf\x90\x96\x86\xd2\xa8\xa2\xef\xff\x05\x00\x00\xff\xff\x5a\x73\x0a\x98\xda\x03\x00\x00")

func nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplate,
		"nodeup/_kubernetes_master/kube-scheduler/files/etc/kubernetes/manifests/kube-scheduler.template",
	)
}

func nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-scheduler/files/etc/kubernetes/manifests/kube-scheduler.template", size: 986, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLog,
		"nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log",
	)
}

func nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMeta,
		"nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log.meta",
	)
}

func nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\xef\x6f\xdb\x36\x10\xfd\xae\xbf\xe2\xe6\x14\xc3\x06\x24\x92\x9d\xad\x5f\x16\xb8\x83\x97\xa6\x98\xd0\xc2\x01\x62\x77\x45\x51\x14\x03\x45\x9d\x24\x22\x14\xa9\x91\x27\x2b\xc6\xd6\xff\x7d\x47\x4a\xf9\x61\xbb\xfe\x60\x49\xe4\xf1\xdd\xbb\xc7\x77\x77\xf6\x43\x56\x28\x93\x15\xc2\x37\x49\x72\x06\xd7\xb6\xdb\x3b\x55\x37\x04\x97\xf3\xc5\x6b\xd8\x36\x08\xef\xfb\x02\x9d\x41\x42\x0f\xab\x9e\x1a\xeb\xf8\xa9\x35\xc4\x28\x0f\x0e\x3d\xba\x1d\x96\x69\x72\xc6\xc7\x3f\x28\x89\xc6\x63\x09\xbd\x29\xd1\x01\xf1\xf1\x55\x27\x24\x3f\xa6\x9d\x73\xf8\x0b\x9d\x57\xd6\xc0\x65\x3a\x87\x9f\x42\xc0\x6c\xda\x9a\xfd\x7c\xc5\x08\x7b\xdb\x43\x2b\xf6\x60\x2c\x41\xef\x91\x21\x94\x87\x4a\x69\x04\x7c\x90\xd8\x11\x28\x03\xd2\xb6\x9d\x56\xc2\x48\x84\x41\x51\x13\xd3\x4c\x20\x4c\x03\x3e\x4f\x10\xb6\x20\xc1\xd1\x82\xe3\x3b\xfe\xaa\x5e\xc6\x81\xa0\x48\x38\xfc\x1a\xa2\xee\xb7\x2c\x1b\x86\x21\x15\x91\x6c\x6a\x5d\x9d\xe9\x31\xd0\x67\x1f\xf2\xeb\x9b\xf5\xe6\xe6\x82\x09\xc7\x23\x1f\x8d\x46\x1f\x0a\xff\xa7\x57\x8e\x4b\x2d\xf6\x20\x3a\xe6\x23\x45\xc1\x2c\xb5\x18\xc0\x3a\x10\xb5\x43\xde\x23\x1b\xf8\x0e\x4e\x91\x32\xf5\x39\x78\x5b\xd1\x20\x1c\x32\x4a\xa9\x3c\x39\x55\xf4\x74\x20\xd6\x23\x3b\xae\xf9\x65\x00\xcb\x25\x0c\xcc\x56\x1b\xc8\x37\x33\xf8\x63\xb5\xc9\x37\xe7\x8c\xf1\x29\xdf\xfe\x79\xfb\x71\x0b\x9f\x56\x77\x77\xab\xf5\x36\xbf\xd9\xc0\xed\x1d\x5c\xdf\xae\xdf\xe6\xdb\xfc\x76\xcd\x5f\xef\x60\xb5\xfe\x0c\xef\xf3\xf5\xdb\x73\x40\x96\x8a\xd3\xe0\x43\xe7\x02\x7f\x26\xa9\x82\x8c\xf1\xea\x60\x83\x78\x40\xa0\xb2\x23\x21\xdf\xa1\x54\x95\x92\x5c\x97\xa9\x7b\x51\x23\xd4\x76\xc7\x76\xe0\x72\xa0\x43\xd7\x2a\x1f\x2e\xd3\x33\xbd\x92\x51\xb4\x6a\x15\x09\x8a\x2b\x27\x45\xa5\xc1\x5f\xda\x8a\x12\xcb\xbc\x65\xa4\x77\x5a\xd4\x3e\x54\x2a\xa0\x50\x74\x51\xf1\x67\xd0\x8b\x9c\x90\xf7\x30\x34\x4a\x36\x50\x5a\x79\x8f\x81\x27\x87\xfb\xe9\x2c\xf8\x5e\x4a\x2e\xa0\xea\xb5\xde\xa7\x89\x46\x3a\x01\x5d\xce\x93\x84\x01\xf8\x36\xc8\xf5\x78\xc5\x30\x09\x04\xa3\x92\x70\xf4\xf7\x88\xb9\xac\x84\xf6\x98\xf0\xba\xaa\x0e\x93\x2d\xde\x64\x25\xee\x32\xc3\xf0\x70\xf9\xe6\xc7\xc5\x55\xa8\xc1\x84\x48\x00\x52\x2d\xda\x9e\xe0\x97\xf9\x63\x74\x48\x0d\x17\x0a\x32\xef\x76\x99\x17\x9a\xb2\x7b\x6e\x97\x0b\x6e\x29\x3f\xbe\x75\xce\x3e\xec\x53\xce\x7c\x02\x1c\x11\x9d\x5c\xbe\xfa\x3d\xbe\x31\x8f\x2f\x5f\x60\xf6\xea\x5f\x27\xbf\xcd\x60\xb9\x84\x39\x7c\xfd\x3a\x25\x8f\x36\x85\xef\x96\xca\x07\x8e\xd7\xbe\xfd\xb7\x98\xc5\x23\xa8\x4f\x40\x17\x97\xbf\x1e\xc3\x1e\x09\x13\x24\x8b\x3b\x95\x4a\xe2\x1f\xff\x9f\x3d\xbb\xfd\xf0\x4a\x6a\x1b\x1a\x92\xcf\x6b\xcd\x3e\x62\x6f\x29\x82\x51\x79\x6d\x6d\x97\x26\x2f\xca\x3a\x61\x39\xf2\x79\x62\x03\x85\x43\x71\x7f\xf5\x94\x71\x63\x5b\x0c\x7a\xfb\x03\xa9\x1b\x11\xfa\x68\xa2\xfc\xb8\x53\x0a\x6c\xb9\x45\x78\xd5\xea\xdd\xe8\x63\xf6\x65\x2c\xe3\x59\x80\x83\x2a\x39\xf9\x53\xde\x30\xbf\xd8\xa1\x8f\x60\x53\xe0\x33\x11\xaf\x11\xbb\xd8\x10\x3c\x10\x3d\x4a\x6b\x4a\x0f\x05\xf2\x42\x98\x22\x84\x6d\x17\x9a\x3b\x58\x37\x32\x3c\x14\x48\xd4\x3c\x82\x18\x66\x04\x59\xbc\x4e\x92\xd2\x1a\x0c\x9d\xb0\xb6\x43\xd4\x2b\x85\x55\x45\x7c\x60\x74\x4b\xef\x1b\x1e\x13\xec\x23\x9e\x6c\xec\x13\x9e\x82\x81\x1a\x35\x82\xc6\x76\x9c\xb8\x86\xf9\x60\x87\x30\x15\x4a\x50\x3c\xc9\xc6\xe8\x51\x14\xbe\x82\xb0\x6c\x70\x38\xe2\x12\x63\x0a\x9c\x3c\x94\xfe\x1f\x00\x00\xff\xff\xdb\x6a\xed\xd4\xfa\x05\x00\x00")

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerSh,
		"nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh",
	)
}

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerSh() (*asset, error) {
	bytes, err := nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh", size: 1530, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMeta,
		"nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh.meta",
	)
}

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\xe5\x02\x04\x00\x00\xff\xff\xf2\x93\xa9\xea\x04\x00\x00\x00")

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAsset,
		"nodeup/_kubernetes_pool/_kube-node-unpacker/files/srv/salt/kube-bins/kube-proxy.tar.asset",
	)
}

func nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAsset() (*asset, error) {
	bytes, err := nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/_kube-node-unpacker/files/srv/salt/kube-bins/kube-proxy.tar.asset", size: 4, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\xb1\x0a\xc2\x30\x14\x45\xf7\x7c\x45\x7f\xa0\xcd\x2e\x74\x91\x3a\x88\xe0\x52\x8a\x43\xe9\x90\xbe\x3e\xda\xd0\xf6\x25\x24\x37\xa2\x7f\x6f\x10\x11\x71\xbb\xc3\x39\xf7\xf4\x9d\x58\x0c\xaa\xe1\x48\xc1\x7a\x58\x27\xf5\x25\x8d\x1c\x84\xc1\xb1\xb8\xba\x89\x8b\x4e\xbc\xa1\x95\x83\x6a\x1c\xa5\x9d\x05\xe6\x8d\x2d\x80\x8f\x07\xad\x67\x8b\x25\x8d\x15\xb9\x5d\xaf\x5f\xf3\x67\x2a\xd5\xb7\x1c\xee\x96\x78\x50\xa7\x07\x53\x0b\x13\x50\x6b\x06\xfd\xf3\xa5\xe4\x5c\x99\x3e\xb9\x2a\x2e\x59\x3d\x4b\x84\xd9\xb6\x41\xdd\x8c\x80\xa7\xe3\xb3\xde\xd3\x06\x5b\xa6\x98\x89\xfc\x34\x33\x5e\x01\x00\x00\xff\xff\xf8\x64\x5f\xe8\xc3\x00\x00\x00")

func nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerService,
		"nodeup/_kubernetes_pool/_kube-node-unpacker/services/kube-node-unpacker.service",
	)
}

func nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerService() (*asset, error) {
	bytes, err := nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/_kube-node-unpacker/services/kube-node-unpacker.service", size: 195, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mount = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x6d\x6f\xe3\xb8\x11\xfe\xae\x5f\x31\xa7\x15\x36\x71\x60\xf9\x25\x2d\xae\x85\x1d\x27\x75\x93\x38\x67\x6c\xd6\x3e\xc4\x4e\x0f\x8b\xbd\xc0\xa0\x65\x4a\xe6\x59\x12\x75\x24\x15\xc7\x9b\xfa\xbf\x77\x48\xca\xb6\x94\x97\x36\x1f\xbb\x58\x20\x11\x39\x2f\xcf\xcc\x3c\x33\xc3\x7c\xfa\x09\x9a\x73\x96\x36\xe7\x44\x2e\x9d\x4f\x70\xc9\xb3\x8d\x60\xd1\x52\xc1\x69\xab\xfd\x17\xb8\xe1\x3c\x8a\x29\x0c\xd3\xa0\x01\xfd\x38\x86\x3b\x7d\x25\xe1\x8e\x4a\x2a\x1e\xe9\xa2\xe1\x7c\x42\x9d\x5b\x16\xd0\x54\xd2\x05\xe4\xe9\x82\x0a\x50\x4b\x0a\xfd\x8c\x04\xf8\xa3\xb8\xa9\xc3\xbf\xa8\x90\x8c\xa7\x70\xda\x68\xc1\xb1\x16\x70\x8b\x2b\xb7\xd6\x45\x0b\x1b\x9e\x43\x42\x36\x90\x72\x05\xb9\xa4\x68\x82\x49\x08\x19\x7a\xa6\x4f\x01\xcd\x14\xb0\x14\x02\x9e\x64\x31\x23\x69\x40\x61\xcd\xd4\xd2\xb8\x29\x8c\x20\x0c\xf8\x56\x98\xe0\x73\x45\x50\x9a\xa0\x7c\x86\x5f\x61\x59\x0e\x88\x32\x80\x97\x4a\x65\x9d\x66\x73\xbd\x5e\x37\x88\x01\xda\xe0\x22\x6a\xc6\x56\x48\x36\x6f\x87\x97\xd7\xa3\xc9\xb5\x8f\x60\x8d\xf8\x7d\x1a\x53\x29\x41\xd0\x3f\x73\x26\x30\xcc\xf9\x06\x48\x86\x58\x02\x32\x47\x84\x31\x59\x03\x17\x40\x22\x41\xf1\x4e\x71\x8d\x75\x2d\x98\x62\x69\x54\x07\xc9\x43\xb5\x26\x82\xa2\x95\x05\x93\x4a\xb0\x79\xae\x2a\x89\xda\x21\xc3\x78\xcb\x02\x98\x2a\x92\x82\xdb\x9f\xc0\x70\xe2\xc2\x3f\xfb\x93\xe1\xa4\x8e\x36\x7e\x1b\x4e\x7f\x19\xdf\x4f\xe1\xb7\xfe\xdd\x5d\x7f\x34\x1d\x5e\x4f\x60\x7c\x07\x97\xe3\xd1\xd5\x70\x3a\x1c\x8f\xf0\x6b\x00\xfd\xd1\x37\xf8\x32\x1c\x5d\xd5\x81\x62\x9a\xd0\x0d\x7d\xca\x84\xc6\x8f\x20\x99\x4e\xa1\x29\x1b\x4c\x28\xad\x00\x08\xb9\x05\x24\x33\x1a\xb0\x90\x05\x18\x57\x1a\xe5\x24\xa2\x10\xf1\x47\x2a\x52\x0c\x07\x32\x2a\x12\x26\x75\x21\x25\xc2\x5b\xa0\x95\x98\x25\x4c\x11\x65\x4e\x5e\x05\xd5\x70\x50\xe2\x2b\xcf\x53\x85\xe5\xc0\xe8\x56\x75\xed\x25\x21\x4a\xe7\x06\x18\x56\x35\x84\x94\x06\x88\x8d\x88\x4d\x03\x60\x68\x8b\xa5\x25\x21\xe6\x7c\x25\xd1\xfc\x8a\x6a\x41\x2c\xac\x2e\x1b\x79\xa4\x30\xa7\x34\xdd\x99\xd1\xb5\xa0\xf8\x3b\x12\x6c\xad\x59\x81\x04\xd5\x0c\xb2\xb7\xa8\x67\xe9\x39\xd5\x64\x92\x81\x60\x99\x21\x97\x84\x79\xbc\x62\x0b\x1d\x80\xa5\x18\x96\x4c\x52\x22\x82\xa5\xc9\x41\x42\x22\x0c\xde\xdd\x7b\x70\xb1\xdc\x8a\x4a\xb4\x83\x26\x35\xbc\x39\x8d\x58\x6a\xd2\xc1\x0f\x78\x11\xfd\x20\x17\x3a\xdd\x89\x81\x83\x98\xb5\x76\x92\x61\xb3\xa0\x7d\xcd\xe9\x50\x06\x2b\xfc\x1d\x0d\x09\x9a\x11\x66\x33\xa5\x01\xc8\x8d\x44\xc9\x22\x92\x6a\x86\x30\x83\x83\xc9\xe5\x97\x9e\xd6\x6d\xd0\x27\xf5\x57\xe7\xeb\xf8\x7e\x34\x9d\x8d\x7f\x35\xe5\xee\xb9\xe8\x3b\x20\x62\x51\x5f\xd0\x90\xe4\xb1\x92\xae\xf3\xf5\xcb\x00\xcf\x93\x55\x28\x8d\x02\xf8\xd7\x58\xc9\x1f\x9b\x19\x96\x09\xd9\x3a\x63\x29\x53\xbd\x56\xdd\x1c\xfd\xc1\x73\x91\x92\xb8\x38\x03\x7f\xe0\x3a\x58\x91\xef\xe0\x53\x68\x52\x15\x34\x91\xeb\x4b\xa2\x7c\x41\x63\x4a\x30\x80\x87\xae\x86\x9c\x3a\x80\xff\x50\x0e\xf9\x9e\x81\xff\x27\x1c\xfd\xfc\x7b\xa3\x71\xf4\x96\x46\x49\x1e\xe0\x13\xbc\xf2\xa9\x49\xaf\xeb\x25\x68\xc0\xa3\x94\xfd\xc0\x72\x62\xef\x58\x1b\xf0\x73\xa1\xf7\xa1\x78\x0c\x76\x2d\x4d\xe3\x32\xb2\xbf\x7d\x08\xd9\x21\xc3\x4f\xa1\x2c\x7b\x35\x4e\x77\x67\x21\x73\xf0\xbf\x73\x3b\xbe\x99\xf6\x6f\x7a\x92\x84\x74\x66\x4b\x35\x43\x22\xcd\x12\xcd\x72\x7d\x39\xe8\x5f\x0e\x6f\x87\xd3\x6f\x3d\x2c\xb9\x70\x9c\x30\x4f\x03\xdd\x1d\xc8\xe7\xe8\xb8\x06\xcf\x68\x2a\xe6\x01\x89\x31\x4a\xb2\xe0\x69\xbc\x41\xea\x61\x77\x31\xb5\xe9\x79\xed\x2e\xc8\x25\x0b\x55\xd7\x08\x45\x11\x36\x93\xaf\xc0\x7b\xb6\x2e\xb7\xe0\x67\xf6\x63\xe7\x62\xdb\xf0\x9e\x77\xda\x78\x2b\xc1\xf5\xfe\xe1\x3a\xdb\xaa\xd3\x19\x8e\xcd\x04\x11\xbe\xed\x5c\x0b\x68\x0a\xf6\xbc\xe3\x64\xa5\xe9\x5a\x7b\x2d\x23\x30\x7d\x7c\x41\x2d\x28\x2c\x50\xc8\xc1\xbd\xcb\x4d\x07\x74\xc0\x3b\xd1\x79\xf7\x4e\xe0\x1c\xb1\xed\xac\x6d\xe1\xf4\xfc\x73\x1b\xcf\x0b\xd5\x9e\x77\xe1\x68\x02\xec\xcc\x21\x03\x0c\xf9\x63\x22\x15\xb4\x5b\xad\x16\xf6\x79\x8a\x7d\x59\xf4\x13\x9a\xd1\x56\xea\xf0\x47\x2e\xed\xe4\xd7\xec\x63\xea\x48\xc2\x2f\xf7\x37\xd7\x0d\xb4\x85\x23\x3e\x06\xdf\xa8\x96\xdd\xfe\xfb\x83\x79\x33\x41\xf8\xba\xae\x22\x01\x3f\x2c\xdb\xb0\xa8\x35\x42\xef\xb9\x80\xbf\xad\xe4\x74\x49\xe3\xac\x48\x66\x80\x34\x3d\xff\x7c\x0a\x67\x67\xd7\xe3\x81\xe3\xb5\xe0\x3b\xda\xd2\x44\x9a\x05\xc9\xe2\x01\xbf\x12\xd0\x14\xda\x7d\x71\x30\x2c\x99\x71\x1c\x0a\x0f\x70\xb6\xa0\x8f\x38\x26\xcf\xe1\xcc\x9c\x66\x9c\xa5\xea\xdc\xd1\x86\x90\xc5\x4f\xd8\x1c\x2d\xed\x76\xbd\xd4\x13\x2a\xa2\x4a\x2b\x81\xdb\x59\x86\x1d\xde\x49\x3a\x2e\xe0\x77\x17\x16\xdc\xa0\xc0\xec\x78\xdc\x2c\x49\xc3\xd4\x65\xcd\x80\xec\x76\x2d\x6f\x6b\x96\xe0\x1e\xce\x8c\xfe\xdd\x4d\x71\xca\x6b\x50\x9d\x24\xd5\xeb\xa4\x66\x3b\xa0\x7a\xea\xd7\x60\x8e\xb4\x58\x15\x9f\xbf\x5f\xd4\x0c\x25\xa8\x10\x38\x37\xdd\x61\xfa\x48\x62\x9c\xab\x88\x04\xf3\xd4\x01\xdf\x7b\xb6\xda\x5b\xb7\x6b\x23\x6a\x17\x8a\x1d\xab\xe7\x8e\x8d\x64\x49\x70\xb7\x62\xf5\x76\x01\x22\xa2\x3c\xa1\xa9\x6a\x54\xd5\xa9\x24\x81\x83\xcc\xa4\x8e\x63\xba\x05\xbc\xe3\x63\x0d\x13\x37\x1e\xf8\xd0\xae\xd5\x9c\x3d\x73\xaf\x86\x13\x8c\xbb\x7d\x38\x30\x21\xff\x3a\x1e\x8e\xa6\x3d\xef\xd4\x71\xbe\xe3\xa8\xfb\x81\x75\xd6\x72\x5b\x78\x78\x80\xcf\x9f\x4d\xe6\xf6\x17\x07\xf9\xca\xf5\x81\x0c\x7a\xf4\xcf\xcc\xaa\x9a\xe5\xe9\x7e\x65\x14\xf4\xb0\x6b\xa6\x30\xef\x98\x99\x89\x86\xbd\x0b\xe8\xf5\xa0\x85\xf6\x4a\x43\xa8\xa0\x5c\xcb\x31\x73\xe6\x75\x0f\x6a\x6a\xce\xd4\x26\xd3\x8d\x6a\x76\x96\xef\x9b\x3d\x4d\x62\xdf\x6c\x90\x9d\x97\xda\x9e\x0f\xcf\x7b\x95\xed\x8e\x17\x27\x87\x65\x73\x52\x2b\xe6\xdc\xce\xf1\x21\xb5\x87\x06\x68\x57\x78\x5f\x0c\x3b\x1d\xf1\x7e\x96\xec\xa7\x8b\xce\x15\xf2\x65\xbb\x8f\xb6\xac\xa9\xc4\x66\x66\x57\xde\xfb\xda\x9a\xa2\xd8\xa9\xa4\x94\xae\x97\x29\xd0\x7d\x65\x91\xd9\x79\x52\xa4\xf3\xb9\x74\x81\x16\xf0\xbd\xf2\xf7\x6a\x6e\x4b\x14\x1d\xe8\x15\x1c\xf0\x3c\x5e\x98\xbd\x13\x70\x81\xab\x47\xd9\x5b\xa9\xdf\x5c\x85\x77\xb7\x5c\x94\xb6\x2d\xca\xbb\x0e\xd5\xcb\x62\x6a\x87\xf8\xe6\x33\x4f\x84\x9d\x4b\xe3\x08\xf7\xdb\x9b\xae\x8c\xf5\x3d\x05\x5e\xa6\xce\x8c\x87\xca\xf8\xb6\x63\xe4\x30\x97\x5f\x24\xd8\x79\x91\x5d\x23\x0e\x38\x7e\x0a\x42\xef\x7a\x7e\x5f\xad\x2a\xd3\x51\xbb\xe2\xa0\x9a\xed\xca\xd5\xf6\x23\x54\xc6\xbf\x29\x96\xd4\x3c\x7d\x70\xd7\x51\x6d\x08\x7b\xb9\xf4\xbc\x23\xff\xfb\x11\x04\xef\x34\xda\xc7\x9a\xab\x44\x80\x2b\xfd\xb4\xdc\x45\x6d\x31\x94\x9e\x92\xb9\x82\x35\x4f\x8f\x94\x8d\x1f\x9f\x74\x37\xec\x51\x43\xc8\xb3\x46\x85\x11\x2f\xb3\x50\x0a\x75\xfa\xe6\xfb\xf5\xc8\xbe\x73\xde\x7c\xba\xea\xe8\x4a\xbd\x55\x0e\xe5\xa7\xff\x16\xca\xc0\x3e\x72\x79\xb8\x8f\x27\xc4\xa5\x88\x6f\x7b\xb7\x34\x44\xfe\x3f\x48\x50\xc1\x3d\x15\x4c\xf7\x01\x3e\x5b\x36\xf8\x57\x1e\x66\x17\x5f\xee\xa6\x25\xeb\xa6\x00\x87\xee\xb4\x88\x0b\x74\x26\xaa\xf7\xd2\x8f\x1d\xb3\x6f\x14\xc7\xac\x0a\xef\xe2\x3f\x01\x00\x00\xff\xff\xc4\x1c\x26\x31\xd7\x0e\x00\x00")

func nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mount,
		"nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount",
	)
}

func nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mount() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount", size: 3799, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMeta,
		"nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount.meta",
	)
}

func nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x4f\x8f\xd3\x30\x10\xc5\xef\xf9\x14\xa3\x45\xe2\xe6\xb5\xca\x31\xd2\xf6\xc0\x4a\x48\x08\x01\x15\x12\xdc\xa7\xce\x34\xb5\xea\x3f\xc1\x63\x97\xad\x56\xfb\xdd\xb1\xf3\xa7\x49\xd9\x96\xbd\x65\x9e\xc7\xbf\x79\xf3\x9c\x77\x70\x48\x5b\x12\x5d\xf0\x4f\x27\xe8\x7c\xc3\x1d\xa9\x0a\x3b\xfd\x8b\x02\x6b\xef\x6a\x38\xae\xaa\x83\x76\x4d\x0d\x1b\xdf\x54\x96\x22\x36\x18\xb1\xae\x00\x1c\x5a\xaa\x17\xb7\x47\x89\x3b\x54\x93\xce\x27\x8e\x64\xab\xc2\x2c\x37\xf6\x9e\xe3\x37\x8a\x7f\x7c\x38\xd4\x10\x43\xa2\xac\x29\xef\x22\x6a\x97\xa7\x95\x0e\x71\x8d\x0a\xa0\x2d\xb6\x59\x7d\x7e\x86\x2f\xf9\x60\x53\xf4\xfb\xcf\x45\x83\x97\x97\xbe\x21\x10\xfb\x14\x14\xf5\x90\x41\xf8\x9d\x88\xe3\xb9\xce\x83\xba\xf4\x0f\xe1\x71\xf3\xf3\xc7\xd0\x36\x61\x94\xb7\x16\xf3\xae\x7d\x21\x40\x6e\xb5\x93\xbc\x1f\x2b\xa1\xc6\x8f\x45\x60\x42\x94\x22\xef\xb0\xd3\xed\x83\x3c\x62\x90\x46\x6f\xe5\xdc\x20\xe7\xe3\xdc\x3b\xb9\x14\xe7\xa5\x1f\xee\xee\x8a\xa7\x8f\x49\x9b\xe6\x93\xc1\x96\x67\x7b\xd9\x13\xac\xd6\xeb\x01\xea\xdb\x05\xf4\x3e\x97\xf0\x61\xfd\x7e\xd5\xfb\x61\x52\x29\xe8\x78\x7a\xcc\x4c\x7a\x8a\xd3\xc2\x5d\xd0\x47\x6d\xa8\xa5\xe6\x1c\x35\xc0\xd1\x9b\x64\xe9\xab\x4f\x6e\x4a\x46\x80\x2d\xd5\x06\xe3\xbe\x06\x49\x51\x49\x66\x23\x15\x85\xc8\x23\x68\x78\x90\xac\x8a\x5e\x15\xe5\x11\xcf\x21\x63\xf3\xdd\x99\xd3\x62\xc2\x25\x6f\xf4\x7e\x41\xca\xda\x2c\xcd\x84\x1d\x1a\xbe\x89\xb8\x95\xe9\x05\xf8\x95\xfc\x1a\x3e\xec\x3f\xfe\x69\x65\x91\x7e\xc8\x94\xd8\x30\x30\x71\xc8\x6f\x8e\x81\xa4\xc2\x7e\x65\xbd\xd3\x0a\x23\x0d\x79\xdc\x48\xe3\x26\xed\x6d\xfb\x57\xcc\xff\x9f\xe6\x97\xf7\xc6\x34\xff\x06\x00\x00\xff\xff\x47\x21\xaa\x64\xc6\x03\x00\x00")

func nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplate,
		"nodeup/_kubernetes_pool/kube-proxy/files/etc/kubernetes/manifests/kube-proxy.manifest.template",
	)
}

func nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/kube-proxy/files/etc/kubernetes/manifests/kube-proxy.manifest.template", size: 966, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\x4e\xc3\x30\x0c\x86\xef\x79\x0a\x6b\xf7\x20\x21\x21\x0e\xb9\x8d\x0a\xf1\x00\x20\xee\xc1\xf5\x86\xd5\x62\x4f\x89\x33\x6d\x9a\xf6\xee\xa4\x6d\x44\xd5\x03\xa7\xc4\xfe\x7f\x7f\xbf\x1d\x4f\xfc\x49\x29\xb3\x4a\x80\xf3\xa3\x1b\x58\xfa\x00\x9d\xca\x81\x8f\xae\xe4\xaa\x04\xe7\x41\xe2\x0f\x05\x18\xca\x17\xf9\x53\xd2\xcb\xd5\x01\x4c\x5a\xa8\x2f\x80\xe9\x40\x75\xf8\x76\x83\x37\xb2\x8f\xa9\x80\xdd\x6a\xdd\xc1\xfd\xee\x70\x2c\xd9\x36\xac\x51\x31\x8e\x75\xbc\x29\x0b\x09\x29\x19\x1f\x18\xa3\x91\x8f\xc5\xbe\x35\xb1\x5d\x7d\x1f\x2d\xce\xf8\x97\x98\xe9\xf9\xe9\x55\x50\x7b\x82\x6e\xdf\xad\xee\x87\x7d\x7e\xb7\xc4\x72\x9c\xc3\x54\x8c\x2e\x36\x87\xb5\x7f\xc3\xb7\xac\xbf\xf0\x76\xc5\xf6\xb0\x65\xbf\xda\x3f\x33\xd6\x35\x10\xb5\x88\xf9\x06\x72\x58\x52\xa2\xb5\xfe\xd7\xf8\x1b\x00\x00\xff\xff\x15\x46\x6a\xa1\x57\x01\x00\x00")

func nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplate,
		"nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template",
	)
}

func nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplate() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template", size: 343, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x31\x30\x50\xe2\xaa\x05\x04\x00\x00\xff\xff\xa9\x27\x5b\x67\x14\x00\x00\x00")

func nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMeta,
		"nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template.meta",
	)
}

func nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLog = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLog,
		"nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log",
	)
}

func nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLog() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4c\xf3\xcb\x2f\x71\xad\xc8\x2c\x2e\x29\x56\xb2\x52\x28\x29\x2a\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xc2\x8e\xc8\x66\x19\x00\x00\x00")

func nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMeta,
		"nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log.meta",
	)
}

func nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMeta() (*asset, error) {
	bytes, err := nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log.meta", size: 25, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_protokubeFilesEtcSysconfigProtokubeTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xc8\x4c\x53\xf0\x48\x2c\x0e\x49\x4c\x57\x50\x8a\xcf\x2e\x4d\x4a\x2d\xca\x4b\x2d\x49\x2d\x8e\xcf\x4d\x2c\x2e\x49\x2d\x52\x52\xa8\xad\xe5\x72\x71\x74\xf5\xf5\xf7\x8b\x77\x0c\x72\x0f\xb6\x55\xd2\xd5\x4d\xc9\x2b\xd6\xad\xca\xcf\x4b\xd5\xcd\x4b\xcc\x4d\xb5\x05\x9a\xa0\xe7\xe2\x17\x1c\x05\x14\x00\xaa\x55\xd0\xd5\x85\x68\xb4\x2d\x29\x2a\x4d\x05\xf2\x92\xf3\xf3\x4a\x12\x33\xf3\x52\x8b\x32\xab\x52\x53\x80\xfc\x32\x5b\x0b\x25\x2e\xa0\x9e\xd4\x9c\xe2\x54\xb2\xcd\x4e\x4b\x04\xe9\xc6\x63\x78\x5e\x0a\xc8\x6c\x40\x00\x00\x00\xff\xff\x10\x9d\x90\x87\xdd\x00\x00\x00")

func nodeup_protokubeFilesEtcSysconfigProtokubeTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_protokubeFilesEtcSysconfigProtokubeTemplate,
		"nodeup/_protokube/files/etc/sysconfig/protokube.template",
	)
}

func nodeup_protokubeFilesEtcSysconfigProtokubeTemplate() (*asset, error) {
	bytes, err := nodeup_protokubeFilesEtcSysconfigProtokubeTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_protokube/files/etc/sysconfig/protokube.template", size: 221, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeup_protokubeServicesProtokubeServiceTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7a\x0a\x11\x7a\x75\x54\x7a\x0c\xf8\x90\x92\xb4\x84\xfe\x85\x98\xd2\x43\x08\x45\x91\x37\xce\x12\x59\x32\xab\x95\x5b\x13\xf2\xee\x55\xdd\xfc\x14\xda\x9b\xd7\xcc\x7c\x33\x9a\xe5\xab\x43\x5e\x89\x09\x04\x43\xd8\x30\x7a\x97\x3f\xc4\x35\x90\x03\x86\x20\xe7\xe4\xd9\xef\xd2\x2d\x0b\xa0\x16\x0d\x88\x89\x37\xb1\x06\xc7\xba\x97\x6e\x99\x9b\x30\x52\xaa\x42\xde\xc6\xf5\xd0\xf8\x5a\xed\xce\xee\xfe\x33\x2b\xa1\xb1\xbe\x53\xcd\x89\x24\xc6\x1b\x06\xca\x4b\x6f\x76\x40\xc3\x70\xc4\x8a\xe5\x31\x60\x25\xa6\xae\x45\xf2\xee\x3b\xe4\x0e\x2d\xe4\x0a\xd8\xa8\xd0\x05\xe3\xdd\x06\xab\x5f\xa0\xe9\x27\x98\x82\x35\xf1\x9c\x92\x2a\x06\x52\x6b\x74\xea\x07\x2c\x9b\x68\xad\xdc\xef\x2f\x2f\x98\xd5\xba\x02\x79\x38\x5c\x6c\x7f\x3c\x14\x9d\xcc\x5a\xa9\x46\x8a\xbc\xe7\x4d\x50\x32\xcb\x1a\xc2\x36\xb5\xa8\xa0\xfc\x97\x26\xcf\x8c\x73\x2f\x39\xb8\x9a\x8c\xa7\x4f\x2f\xcf\xef\xe3\xc5\x7d\x31\x10\x0b\x08\x7d\x9a\xb6\x1f\xba\x0b\xa7\xb3\x00\x93\xdf\x04\xd1\x17\x79\xc4\x1a\x79\xe6\xd2\x2c\xad\xb6\xf9\x75\x1a\x63\xe6\x92\xc8\xda\x95\x78\xd3\xe9\x77\x79\xdb\xe5\x75\xb4\x8c\x59\x4c\x7b\x0d\x93\xa5\x02\x16\x5f\x01\x00\x00\xff\xff\xd5\x62\x43\x22\xba\x01\x00\x00")

func nodeup_protokubeServicesProtokubeServiceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeup_protokubeServicesProtokubeServiceTemplate,
		"nodeup/_protokube/services/protokube.service.template",
	)
}

func nodeup_protokubeServicesProtokubeServiceTemplate() (*asset, error) {
	bytes, err := nodeup_protokubeServicesProtokubeServiceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/_protokube/services/protokube.service.template", size: 442, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\x2e\x4d\x4a\x2d\xca\x4b\x2d\x49\x2d\xe6\x02\x92\x7a\x99\x05\x65\x26\x40\x22\x3e\x2d\xbf\xa8\x3c\xb1\x28\xc5\xd6\x90\x0b\x10\x00\x00\xff\xff\xad\x54\xb8\xae\x23\x00\x00\x00")

func nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConf,
		"nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf",
	)
}

func nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConf() (*asset, error) {
	bytes, err := nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf", size: 35, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcf\x73\xce\x48\xcc\x4b\x4f\x75\xad\x48\x4d\x2e\x2d\x49\x55\xb2\x52\x88\x56\x50\x2a\xae\x2c\x4e\x2e\xc9\x51\xd2\x51\x50\xd2\xd5\x05\xb2\x4b\x52\x73\x95\x14\x62\xb9\x6a\x01\x01\x00\x00\xff\xff\x58\x5e\xf7\x4d\x31\x00\x00\x00")

func nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMeta,
		"nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf.meta",
	)
}

func nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMeta() (*asset, error) {
	bytes, err := nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf.meta", size: 49, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdFilesEtcSysconfigDockerTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xf1\x77\xf6\x76\x0d\x8a\xf7\x0f\x08\x09\xb6\x55\xaa\xae\x56\x70\x2a\xcd\xcc\x49\x71\xcb\x49\x4c\x2f\x56\xd0\x73\xc9\x4f\xce\x4e\x2d\x52\xa8\xad\x55\xe2\x82\x2a\xf3\xf3\x77\xf3\xf4\x71\xb5\x35\x34\x00\x03\x2e\x40\x00\x00\x00\xff\xff\x24\x66\x59\x8d\x3d\x00\x00\x00")

func nodeupDocker_systemdFilesEtcSysconfigDockerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdFilesEtcSysconfigDockerTemplate,
		"nodeup/docker/_systemd/files/etc/sysconfig/docker.template",
	)
}

func nodeupDocker_systemdFilesEtcSysconfigDockerTemplate() (*asset, error) {
	bytes, err := nodeupDocker_systemdFilesEtcSysconfigDockerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/files/etc/sysconfig/docker.template", size: 61, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheck = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x93\x41\x4f\xdb\x40\x10\x85\xef\xfe\x15\x53\x73\x69\xa5\x34\x0e\x54\xe5\x50\xa4\x4a\x29\xd0\xd6\x02\x25\x12\x09\x45\x1c\xd7\xeb\xb1\x3d\x62\xb3\xeb\xee\x8e\x63\xf2\xef\x3b\x6b\x6c\x01\xad\x7a\xaa\x54\x2e\x91\x67\xdf\xbe\xfd\xe6\xcd\x70\xf4\x26\x2b\xc8\x66\x85\x0a\x4d\x92\x1c\xc1\xb9\x6b\x0f\x9e\xea\x86\xe1\x64\x71\xfc\x11\xb6\x0d\xc2\x55\x57\xa0\xb7\xc8\x18\x60\xd9\x71\xe3\xbc\xfc\x1a\x03\x83\x2a\x80\xc7\x80\x7e\x8f\xe5\x3c\x39\x92\xeb\xd7\xa4\xd1\x06\x2c\xa1\xb3\x25\x7a\x60\xb9\xbe\x6c\x95\x96\x9f\xf1\x64\x06\x3f\xd0\x07\x72\x16\x4e\xe6\x0b\x78\x1b\x05\xe9\x78\x94\xbe\x3b\x13\x87\x83\xeb\x60\xa7\x0e\x60\x1d\x43\x17\x50\x2c\x28\x40\x45\x06\x01\x1f\x35\xb6\x0c\x64\x41\xbb\x5d\x6b\x48\x59\x8d\xd0\x13\x37\xc3\x33\xa3\x89\x60\xc0\xfd\x68\xe1\x0a\x56\xa2\x56\xa2\x6f\xe5\xab\x7a\xa9\x03\xc5\x03\x70\xfc\x6b\x98\xdb\x4f\x59\xd6\xf7\xfd\x5c\x0d\xb0\x73\xe7\xeb\xcc\x3c\x09\x43\x76\x9d\x9f\x5f\xae\x36\x97\xef\x05\x78\xb8\x72\x6b\x0d\x86\xd8\xf8\xcf\x8e\xbc\xb4\x5a\x1c\x40\xb5\xc2\xa3\x55\x21\x94\x46\xf5\xe0\x3c\xa8\xda\xa3\x9c\xb1\x8b\xbc\xbd\x27\x26\x5b\xcf\x20\xb8\x8a\x7b\xe5\x51\x5c\x4a\x0a\xec\xa9\xe8\xf8\x55\x58\x13\x9d\xf4\xfc\x52\x20\x71\x29\x0b\xe9\x72\x03\xf9\x26\x85\x2f\xcb\x4d\xbe\x99\x89\xc7\x5d\xbe\xfd\xbe\xbe\xdd\xc2\xdd\xf2\xe6\x66\xb9\xda\xe6\x97\x1b\x58\xdf\xc0\xf9\x7a\x75\x91\x6f\xf3\xf5\x4a\xbe\xbe\xc2\x72\x75\x0f\x57\xf9\xea\x62\x06\x28\x51\xc9\x33\xf8\xd8\xfa\xc8\x2f\x90\x14\x63\x1c\x46\x07\x1b\xc4\x57\x00\x95\x7b\x02\x0a\x2d\x6a\xaa\x48\x4b\x5f\xb6\xee\x54\x8d\x50\xbb\xbd\xac\x83\xb4\x03\x2d\xfa\x1d\x85\x38\xcc\x20\x78\xa5\xb8\x18\xda\x11\x2b\x1e\x2a\x7f\x34\x35\x8f\xfb\xb5\x8d\xe3\x0c\xda\x53\x9c\x64\x90\x70\x18\x45\x37\x04\x55\x20\xf8\xce\x46\x57\x72\xa5\xa4\x69\xcc\x61\x16\xeb\x32\x10\xfd\x30\x18\x35\xa8\x0c\x37\xe2\x22\xb3\x2c\x9d\x7e\x40\x3f\x07\xc8\x2b\x20\x86\x52\xf6\x53\xcb\x3a\x2a\xa8\x14\x99\xce\xcb\xa2\x49\xb5\xa7\xb8\xa8\x18\x58\x79\x1e\x6f\xc8\x52\x45\xf6\x70\x08\x8c\x3b\xcd\x46\xa8\x48\x36\x83\x76\xe8\x3a\x86\xe3\xc5\x24\xdb\x8f\x6b\xfa\x19\xb2\x12\xf7\x99\xed\x8c\x39\x8b\x10\x36\x01\x40\xdd\x38\x48\x47\xe1\x13\xd4\x21\x8d\xf5\x47\x79\x73\x91\x54\x94\x24\xaf\x24\x11\x09\xcb\x74\x2c\x7e\xa3\x7d\x24\x18\xcf\x3e\x2c\x20\xa0\x76\xb6\x0c\x50\x7b\x25\x1b\x5d\xa0\x64\x8f\x13\xb5\x28\xd3\x24\x18\xc4\x56\x94\xff\x8a\xea\xe5\x21\x11\x47\x94\xbf\xc3\x06\x8e\xa1\x95\xae\xb7\x62\x22\xff\xe4\xb5\xcc\xe3\x19\x77\xc4\x12\xa6\x29\xc0\xdf\xf2\x9d\xdc\xee\xd4\xb0\xf3\x70\xfa\xdc\x9f\xcc\xb2\xa6\x3d\x4e\x56\xb1\x91\x58\x9b\x0c\x87\x26\x4f\xff\x67\x93\x71\x2e\x31\xe0\x5f\x01\x00\x00\xff\xff\xd8\x84\x3b\x4e\x04\x05\x00\x00")

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheck,
		"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck",
	)
}

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheck() (*asset, error) {
	bytes, err := nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck", size: 1284, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMeta,
		"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck.meta",
	)
}

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMeta() (*asset, error) {
	bytes, err := nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestart = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xc1\x4e\xdc\x30\x10\xbd\xef\x57\x4c\x97\x0b\x48\x4b\x02\x54\x95\x50\x7b\x4a\x81\xaa\x11\x28\x2b\x91\x50\xc4\xd1\x71\x26\x89\xb5\x59\xdb\x1d\xdb\x1b\xf6\xef\x3b\x36\x41\x02\x35\x17\x2b\xf6\x9b\x37\x6f\xde\x9b\x93\x2f\x79\xab\x74\xde\x0a\x37\xae\x56\x27\x70\x63\xec\x91\xd4\x30\x7a\xb8\xba\xb8\xfc\x06\xcd\x88\x70\x1f\x5a\x24\x8d\x1e\x1d\x14\xc1\x8f\x86\xf8\x9c\x26\x48\x28\x07\x84\x0e\xe9\x80\x5d\xb6\x3a\xe1\xf2\x07\x25\x51\x3b\xec\x20\xe8\x0e\x09\x3c\x97\x17\x56\x48\x3e\x96\x97\x0d\xfc\x41\x72\xca\x68\xb8\xca\x2e\xe0\x34\x02\xd6\xcb\xd3\xfa\xec\x07\x33\x1c\x4d\x80\xbd\x38\x82\x36\x1e\x82\x43\xa6\x50\x0e\x7a\x35\x21\xe0\xab\x44\xeb\x41\x69\x90\x66\x6f\x27\x25\xb4\x44\x98\x95\x1f\x53\x9b\x85\x84\x65\xc0\xcb\x42\x61\x5a\x2f\x18\x2d\x18\x6f\xf9\xaf\xff\x88\x03\xe1\x93\xe0\xf8\x8d\xde\xdb\xef\x79\x3e\xcf\x73\x26\x92\xd8\xcc\xd0\x90\x4f\x6f\x40\x97\x3f\x94\x37\x77\x55\x7d\x77\xce\x82\x53\xc9\x93\x9e\xd0\xc5\xc1\xff\x06\x45\x3c\x6a\x7b\x04\x61\x59\x8f\x14\x2d\xab\x9c\xc4\x0c\x86\x40\x0c\x84\xfc\xe6\x4d\xd4\x3b\x93\xf2\x4a\x0f\x1b\x70\xa6\xf7\xb3\x20\x64\x96\x4e\x39\x4f\xaa\x0d\xfe\x93\x59\xef\xea\x78\xe6\x8f\x00\xb6\x4b\x68\x58\x17\x35\x94\xf5\x1a\x7e\x16\x75\x59\x6f\x98\xe3\xb9\x6c\x7e\x6f\x9f\x1a\x78\x2e\x1e\x1f\x8b\xaa\x29\xef\x6a\xd8\x3e\xc2\xcd\xb6\xba\x2d\x9b\x72\x5b\xf1\xdf\x2f\x28\xaa\x17\xb8\x2f\xab\xdb\x0d\x20\x5b\xc5\x6d\xf0\xd5\x52\xd4\xcf\x22\x55\xb4\x31\x45\x07\x35\xe2\x27\x01\xbd\x79\x13\xe4\x2c\x4a\xd5\x2b\xc9\x73\xe9\x21\x88\x01\x61\x30\x07\x5e\x07\x1e\x07\x2c\xd2\x5e\xb9\x18\xa6\x63\x79\x1d\xb3\x4c\x6a\xaf\xbc\xf0\xe9\xe6\xbf\xa1\xb2\xb8\x5f\x4d\x8c\xd3\x49\x52\x31\x49\xc7\xe6\x78\x64\x5c\x32\xaa\x45\xa0\xa0\xf9\xe0\xde\x1c\x2c\xf7\xf6\x82\x3c\xdc\x1a\xb9\x43\x4a\xc5\x72\x42\xa1\x83\x85\x2e\x5d\x01\xef\xe4\x6c\x68\x07\x9c\x98\xdc\x59\xc3\x5c\x91\x46\x1c\x8c\xea\x22\x53\xd2\xc8\x97\x06\x76\xda\xcc\x9a\xdb\xb9\x10\x9d\xe7\x45\x58\x08\x4e\x63\xf2\x8e\xa3\x1f\xd8\x9a\xd0\x66\xbc\x57\xf9\xdb\xd3\xfb\x91\x6a\x5c\x7e\x79\x7d\x75\xfd\xf5\x6c\x45\x7b\x38\xa7\x1e\xf2\x83\x20\x5e\x8f\xf6\x1d\xb4\xe8\x58\xfd\x0b\x00\x00\xff\xff\xc3\x90\x0f\x06\x4b\x03\x00\x00")

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestart,
		"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart",
	)
}

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestart() (*asset, error) {
	bytes, err := nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart", size: 843, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMeta,
		"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart.meta",
	)
}

func nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMeta() (*asset, error) {
	bytes, err := nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdServicesDockerHealthcheckService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\x31\x0e\xc2\x20\x14\x06\xe0\x9d\x53\xf4\x02\x95\x13\xb0\x18\x1d\x5c\xad\xc6\xa1\xe9\x80\xaf\x7f\x84\x80\x0f\xf2\x78\x18\x7b\x7b\xbb\x7b\x81\x6f\xbe\x73\xd4\xc5\x9c\xd0\x48\x62\xd5\x58\xd8\x5d\x3b\x0f\x6b\xa1\x04\x19\x03\x7c\xd6\x40\x01\x94\x86\xc2\x04\x63\xe6\x09\xf2\x89\x84\xc5\xdc\xb6\x0a\x57\x18\x2d\x14\x35\xe7\x2f\x68\x52\x2f\xea\x6c\xa9\x6a\x53\x7f\x42\x18\x8a\x66\x03\x72\x85\x34\xfb\x2f\xee\xd8\x85\x9b\xfa\x9c\x17\xf3\xf0\xac\x58\x8f\x9b\x7b\xf7\xac\x71\xec\x0d\x72\xd8\xb9\x17\xf4\x17\x00\x00\xff\xff\xca\x9c\x38\xae\xa1\x00\x00\x00")

func nodeupDocker_systemdServicesDockerHealthcheckServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdServicesDockerHealthcheckService,
		"nodeup/docker/_systemd/services/docker-healthcheck.service",
	)
}

func nodeupDocker_systemdServicesDockerHealthcheckService() (*asset, error) {
	bytes, err := nodeupDocker_systemdServicesDockerHealthcheckServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/services/docker-healthcheck.service", size: 161, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdServicesDockerHealthcheckServiceMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\x4d\xcc\x4b\x4c\x4f\x0d\x2e\x49\x2c\x49\x55\xb2\x52\x48\x4b\xcc\x29\x4e\xe5\xaa\x05\x04\x00\x00\xff\xff\x2f\x5c\x4f\x4d\x1a\x00\x00\x00")

func nodeupDocker_systemdServicesDockerHealthcheckServiceMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdServicesDockerHealthcheckServiceMeta,
		"nodeup/docker/_systemd/services/docker-healthcheck.service.meta",
	)
}

func nodeupDocker_systemdServicesDockerHealthcheckServiceMeta() (*asset, error) {
	bytes, err := nodeupDocker_systemdServicesDockerHealthcheckServiceMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/services/docker-healthcheck.service.meta", size: 26, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdServicesDockerHealthcheckTimer = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\x31\x0a\x83\x40\x10\x85\xe1\x7e\x4e\xe1\x05\x94\xe4\x00\xdb\x84\x34\x56\x29\x62\x48\x21\x16\xcb\xf8\xd0\xc1\x75\x94\xd9\x51\xf0\xf6\xd1\x3a\xed\xe3\xfd\x5f\xfb\x51\xf1\x8e\x9e\xc8\x6c\xb2\xba\x2c\x1a\x1a\x93\x61\x80\x15\xfd\xc2\x13\xac\x1c\x11\x93\x8f\x3c\x82\xa7\x62\x85\xc9\xd2\x0b\xc7\x94\x0e\xa2\xb6\x91\x19\xd6\xd1\x4b\x2f\xa4\xd6\xc8\x2e\x3b\xde\xe0\x70\xbf\x65\xba\xb6\xf0\x6f\x54\x19\xb6\x0b\xe3\xcc\x6b\xcd\x7e\x4a\x1d\x7d\xa3\x3a\xfa\xc7\x11\xe6\x2d\xb9\x94\xdb\x79\xa9\x3c\xda\x00\xff\x05\x00\x00\xff\xff\x9a\xe9\x2d\x12\x9f\x00\x00\x00")

func nodeupDocker_systemdServicesDockerHealthcheckTimerBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdServicesDockerHealthcheckTimer,
		"nodeup/docker/_systemd/services/docker-healthcheck.timer",
	)
}

func nodeupDocker_systemdServicesDockerHealthcheckTimer() (*asset, error) {
	bytes, err := nodeupDocker_systemdServicesDockerHealthcheckTimerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/services/docker-healthcheck.timer", size: 159, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDocker_systemdServicesDockerService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x50\x5d\x6f\xdb\x30\x0c\x7c\xd7\xaf\x30\x8a\xbd\x26\xea\x86\x7d\x61\x80\x1e\xba\xc4\xc5\x82\x75\x73\x10\x77\xd8\x43\x11\x0c\xaa\x4c\xbb\x44\x64\x49\x13\x69\x77\xfe\xf7\x63\x1c\x0f\x43\x9f\x68\x1f\x75\xc7\xbb\x7b\xf8\x11\x90\x8f\x6a\x0b\xe4\x32\x26\xc6\x18\xcc\x36\xba\x13\xe4\xe2\x26\x25\x8f\xce\x9e\xa1\x62\x13\x03\x5b\x0c\x82\x96\xa1\x93\xa9\xe4\xcd\xd0\x83\x80\x33\xe3\x89\x39\xd1\x27\xad\x9b\xe8\x68\xdd\xcc\xf4\xb5\x8b\xbd\xba\x69\x19\xb2\x09\xc0\xcf\x31\x9f\xd6\x6c\x73\x07\x5c\x2c\x7b\x3a\x0f\x56\x07\xf8\x3d\x60\x06\x32\x2f\x61\xf5\x50\x43\x1e\xd1\xc1\x51\xdd\x4f\x09\x4c\x88\x8c\xed\xa4\xca\x30\x62\x8e\xe1\x7c\xf9\x16\x3d\x18\x0d\xec\x34\x4d\xe4\x62\x68\xb1\xd3\x17\x0d\x55\xfe\x01\x57\xcb\x35\x36\x7a\xa0\xac\x1f\x31\x2c\x9b\xa2\xb1\xd0\x4b\x9c\xd5\x97\xa2\x6d\xc4\x6f\x71\xf5\x6a\x5b\x6d\xbe\x96\x87\x5f\xd5\xfe\xbe\xbe\x52\xdf\xe2\x20\xc2\xde\x76\x64\xc8\xdb\x11\xd4\x1d\xf6\xc8\xdf\xab\xdb\xdd\x5d\x69\x5e\x5f\xbf\xfd\xf8\xee\xc3\xfb\x05\xdb\x1f\xaa\xcd\x4b\x68\x53\x1d\x4a\x83\xe2\x43\x0a\x9d\x24\x17\xcd\x0e\xac\x7f\xb6\x13\xfd\xfb\xad\xc1\x99\x37\xa4\x66\x73\x33\x69\x17\xa4\xa1\xd1\x7a\x73\xfd\xdf\xf5\x3e\x4b\xb0\x98\x58\x9f\x86\x47\xc8\xd2\x1e\x90\x7e\x02\x9f\x20\xd3\x92\x63\x95\xf2\x45\x4f\x7a\xda\x05\xf9\xf2\xfe\xa8\x7e\x5a\xd1\x6a\x3e\x4f\xa6\x1f\x3c\xe3\x6a\x20\x69\xf3\x52\xf9\xdf\x00\x00\x00\xff\xff\x1f\x84\x05\xa0\xe4\x01\x00\x00")

func nodeupDocker_systemdServicesDockerServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDocker_systemdServicesDockerService,
		"nodeup/docker/_systemd/services/docker.service",
	)
}

func nodeupDocker_systemdServicesDockerService() (*asset, error) {
	bytes, err := nodeupDocker_systemdServicesDockerServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/_systemd/services/docker.service", size: 484, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerFilesUsrShareDocDockerApacheTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x14\xcc\xd1\xae\x82\x30\x0c\x80\xe1\x7b\x9e\x82\xec\xfa\x1c\x06\x13\x48\xe1\x6d\xda\x59\x37\x83\xda\x65\x2d\x89\x89\xf1\xdd\x85\xdb\xff\x4f\xbe\x4f\xd3\xb6\x4e\x65\xaf\x91\xdd\xda\xba\x6c\x56\x74\xf5\x5e\x4d\x2a\x26\xee\x92\x48\x7a\x30\x96\xbb\x76\x51\x9e\x7e\xdb\x89\xeb\x8b\x8d\xf5\xbf\xf2\xd1\x95\xfd\x55\xe2\xc6\xd5\x63\xc1\x98\x39\x74\xf6\x36\xf7\x77\x9a\x19\x35\x9f\x62\x20\x20\x18\xa6\x10\x16\x44\xc0\x79\xe0\x11\x2e\x37\x1a\x09\xfb\x09\x8e\x43\x73\x1c\x97\x01\x96\xde\x35\xdf\x5f\x00\x00\x00\xff\xff\x15\x39\xa9\x0e\x8c\x00\x00\x00")

func nodeupDockerFilesUsrShareDocDockerApacheTxtBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerFilesUsrShareDocDockerApacheTxt,
		"nodeup/docker/files/usr/share/doc/docker/apache.txt",
	)
}

func nodeupDockerFilesUsrShareDocDockerApacheTxt() (*asset, error) {
	bytes, err := nodeupDockerFilesUsrShareDocDockerApacheTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/files/usr/share/doc/docker/apache.txt", size: 140, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackages_jessieDockerEngine = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\x4b\x6e\x03\x21\x10\x05\xf7\x3e\xc5\x88\x75\x0c\x06\x63\x87\xf8\x1a\x39\x80\xc5\xa7\xf1\xe0\xc4\x34\x6a\xda\xb3\x89\x92\xb3\x67\xd0\xac\x92\xe5\x53\xbd\x52\x7d\xed\xa6\x49\x2c\x40\xbd\x60\x15\x97\x49\x68\xa9\xb5\x34\xfb\xc3\xcf\x1d\x7a\x2f\x20\x5e\x06\xef\xf8\xa4\x08\x03\xcf\xcc\xed\xa2\x94\x6f\x2c\x13\xc6\x0f\xa0\x46\x78\x87\xc8\x12\xe9\xa6\x08\x1a\xaa\x86\xf8\xa9\x1e\xbe\x54\x95\xd4\x76\xd9\x43\xbd\x95\x0a\x7f\xd7\xf5\x5f\xe8\xea\x1f\xe9\x6c\x65\x82\xb0\x25\x67\xdf\xe7\x11\x8c\x47\x6d\xb2\xce\xe7\xec\x0f\xe1\x68\x53\xb6\x27\xf7\x16\x82\xd3\x06\x6c\x7e\xf5\xd9\x81\x71\x39\x9d\x74\x5a\xad\xa1\x35\x82\x05\x2a\xbf\xb3\x27\x5e\x75\xa6\x27\xec\xbe\x7f\x03\x00\x00\xff\xff\xc5\x2f\xb1\xa1\xe4\x00\x00\x00")

func nodeupDockerPackages_jessieDockerEngineBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackages_jessieDockerEngine,
		"nodeup/docker/packages/_jessie/docker-engine",
	)
}

func nodeupDockerPackages_jessieDockerEngine() (*asset, error) {
	bytes, err := nodeupDockerPackages_jessieDockerEngineBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/_jessie/docker-engine", size: 228, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackages_xenialDockerEngine = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x4d\x4e\x03\x31\x0c\x46\xf7\x3d\xc5\x68\xd6\x34\x3f\x95\x29\xa4\xd7\xe0\x00\x95\x93\x38\x9d\x40\x1b\x47\x1e\xb7\x42\x42\x70\x76\x3a\xcc\x8a\x2e\xad\xe7\xa7\xf7\x7d\x6d\x86\x61\xbc\x91\xcc\x95\xdb\x78\x18\x46\x6f\xbc\x37\xbb\xad\xfb\xf9\xa4\x56\xf1\x3c\x3e\x2d\x7c\xe6\xab\x24\x5a\xf0\xa4\xda\x0f\xd6\x62\x57\x93\x39\x7d\x90\x74\xe1\x77\x4a\x6a\x58\x4e\x56\xa8\xb3\xed\xcc\x67\x7b\xc1\xda\x6c\xb6\xeb\xcb\x96\xda\xa9\x36\xfa\x7f\x1d\x1f\x42\x47\xbc\xe4\x3d\x98\x4c\x71\x4d\x4e\x38\x4f\x7f\x7b\x02\xc4\x82\xaf\x7b\x28\x0e\x76\x90\x7d\x8c\x39\xbd\x64\x08\x21\xa5\x82\x0e\xe0\x39\x91\x0b\x31\x94\xbb\xb5\x68\x5d\xe8\x46\x4d\xdf\x14\x45\xef\xba\xca\x95\x36\xdf\xbf\x01\x00\x00\xff\xff\x20\xbe\x85\xb5\xe4\x00\x00\x00")

func nodeupDockerPackages_xenialDockerEngineBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackages_xenialDockerEngine,
		"nodeup/docker/packages/_xenial/docker-engine",
	)
}

func nodeupDockerPackages_xenialDockerEngine() (*asset, error) {
	bytes, err := nodeupDockerPackages_xenialDockerEngineBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/_xenial/docker-engine", size: 228, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackagesBridgeUtils = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupDockerPackagesBridgeUtilsBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackagesBridgeUtils,
		"nodeup/docker/packages/bridge-utils",
	)
}

func nodeupDockerPackagesBridgeUtils() (*asset, error) {
	bytes, err := nodeupDockerPackagesBridgeUtilsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/bridge-utils", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackagesLibapparmor1 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupDockerPackagesLibapparmor1Bytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackagesLibapparmor1,
		"nodeup/docker/packages/libapparmor1",
	)
}

func nodeupDockerPackagesLibapparmor1() (*asset, error) {
	bytes, err := nodeupDockerPackagesLibapparmor1Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/libapparmor1", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackagesLibltdl7 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupDockerPackagesLibltdl7Bytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackagesLibltdl7,
		"nodeup/docker/packages/libltdl7",
	)
}

func nodeupDockerPackagesLibltdl7() (*asset, error) {
	bytes, err := nodeupDockerPackagesLibltdl7Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/libltdl7", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupDockerPackagesPerl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupDockerPackagesPerlBytes() ([]byte, error) {
	return bindataRead(
		_nodeupDockerPackagesPerl,
		"nodeup/docker/packages/perl",
	)
}

func nodeupDockerPackagesPerl() (*asset, error) {
	bytes, err := nodeupDockerPackagesPerlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/docker/packages/perl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeClientToolsFilesUsrLocalBinKubectlAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\x05\x04\x00\x00\xff\xff\xa8\xbb\xbe\x73\x03\x00\x00\x00")

func nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeClientToolsFilesUsrLocalBinKubectlAsset,
		"nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset",
	)
}

func nodeupKubeClientToolsFilesUsrLocalBinKubectlAsset() (*asset, error) {
	bytes, err := nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset", size: 3, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMeta,
		"nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset.meta",
	)
}

func nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMeta() (*asset, error) {
	bytes, err := nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletFilesEtcSysconfigKubeletTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x71\x74\xf5\xf5\xf7\x8b\x77\x0c\x72\x0f\xb6\x55\xaa\xae\x56\x70\x2a\xcd\xcc\x49\x71\xcb\x49\x4c\x2f\x56\xf0\x2e\x4d\x4a\xcd\x49\x2d\x51\xa8\xad\x55\xe2\x02\x04\x00\x00\xff\xff\x49\xdb\x26\xd3\x27\x00\x00\x00")

func nodeupKubeletFilesEtcSysconfigKubeletTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletFilesEtcSysconfigKubeletTemplate,
		"nodeup/kubelet/files/etc/sysconfig/kubelet.template",
	)
}

func nodeupKubeletFilesEtcSysconfigKubeletTemplate() (*asset, error) {
	bytes, err := nodeupKubeletFilesEtcSysconfigKubeletTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/files/etc/sysconfig/kubelet.template", size: 39, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletFilesUsrLocalBinKubeletAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\xe5\x02\x04\x00\x00\xff\xff\xf2\x93\xa9\xea\x04\x00\x00\x00")

func nodeupKubeletFilesUsrLocalBinKubeletAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletFilesUsrLocalBinKubeletAsset,
		"nodeup/kubelet/files/usr/local/bin/kubelet.asset",
	)
}

func nodeupKubeletFilesUsrLocalBinKubeletAsset() (*asset, error) {
	bytes, err := nodeupKubeletFilesUsrLocalBinKubeletAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/files/usr/local/bin/kubelet.asset", size: 4, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletFilesUsrLocalBinKubeletAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xa6\x42\x7f\x34\x15\x00\x00\x00")

func nodeupKubeletFilesUsrLocalBinKubeletAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletFilesUsrLocalBinKubeletAssetMeta,
		"nodeup/kubelet/files/usr/local/bin/kubelet.asset.meta",
	)
}

func nodeupKubeletFilesUsrLocalBinKubeletAssetMeta() (*asset, error) {
	bytes, err := nodeupKubeletFilesUsrLocalBinKubeletAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/files/usr/local/bin/kubelet.asset.meta", size: 21, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletFilesVarLibKubeletKubeconfigTemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\x4f\xc3\x30\x10\x86\x77\xff\x8a\x53\x27\x18\x82\x84\x84\x18\xbc\x95\x88\x89\x05\x09\x89\xfd\xb8\x5c\xcb\x29\xe6\x8c\xec\x73\x44\x55\xf5\xbf\xe3\x34\x81\xa6\x43\x26\x7f\xdc\xe9\x79\x1f\xbd\xf8\x2d\xef\x9c\xb2\x44\xf5\x30\xdc\xbb\x5e\xb4\xf3\xd0\x46\xdd\xc9\xde\x95\x5c\x27\xde\x35\xa0\xf8\xc5\x1e\xfa\xf2\xc1\x81\xcd\x01\x8c\x03\x5f\x4f\x00\x0a\xc2\x6a\x0d\x71\x32\xd9\x09\xa1\x71\xd3\xa1\xa1\x87\xe3\x11\x9e\x30\xf3\xe3\xc3\xb3\x52\xec\x18\x6e\xda\xcb\x0a\x6c\x66\xd4\xe6\xf6\x6e\x9b\xdf\x2c\x89\xee\xe1\x74\x5a\x02\x7b\x3e\xac\x81\x5e\x93\x0c\x15\xf2\xc2\x87\x35\x0e\x85\x92\xed\x4a\x3d\x44\xc2\xe0\x46\xfa\x79\x32\xbb\x2f\xa4\xb1\xd8\x67\x4c\x62\x6b\xa9\xed\x76\xe1\x7f\x1d\x16\xd5\xf8\xc7\xce\x61\xf3\xfd\xaf\x9a\x29\xeb\x3f\x7c\xee\x6d\xd1\xe3\x24\x57\x3f\x07\xa1\xea\x40\x14\xcb\x58\xe6\x44\x71\x54\x52\xe2\xcb\x7b\x7d\xf1\x37\x00\x00\xff\xff\x57\x07\x93\xe5\xc4\x01\x00\x00")

func nodeupKubeletFilesVarLibKubeletKubeconfigTemplateBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletFilesVarLibKubeletKubeconfigTemplate,
		"nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template",
	)
}

func nodeupKubeletFilesVarLibKubeletKubeconfigTemplate() (*asset, error) {
	bytes, err := nodeupKubeletFilesVarLibKubeletKubeconfigTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template", size: 452, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x31\x30\x50\xe2\xaa\x05\x04\x00\x00\xff\xff\xa9\x27\x5b\x67\x14\x00\x00\x00")

func nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMeta,
		"nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template.meta",
	)
}

func nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMeta() (*asset, error) {
	bytes, err := nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupKubeletServicesKubeletService = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8d\x41\x4b\xc3\x40\x10\x46\xef\xfb\x2b\x42\xf1\x6a\xf7\x2e\xe4\x50\x49\x14\x11\x15\x1a\xc4\x43\x09\xb2\x59\x3f\xd3\xc1\xcd\x6c\xd9\x99\xad\xe6\xdf\x9b\x0d\x28\xbd\x7d\x0c\xef\xcd\x3b\xbc\x32\x69\x6f\x1a\x88\x4f\x74\x52\x8a\x5c\x3f\xe6\x01\x89\xa1\x90\xaa\xcc\x00\xad\x3a\xa4\x33\x92\x69\xa2\xcf\x13\x58\xdd\xca\x1d\x55\x4f\x72\x63\xed\x48\x7a\xcc\xc3\xd6\xc7\xc9\x7e\xfd\xab\x17\xd3\x98\x43\xf1\xc9\xa3\x37\x2d\x9f\x29\x45\x2e\x4f\xee\x28\xa0\xb6\x50\x6f\x65\x16\x1f\xf9\x93\xc6\x55\x5a\x7a\xa6\xfd\x81\xef\xd4\x25\xad\x6d\x96\x64\x43\xf4\x2e\xd8\x81\xf8\x0f\xa8\x36\x57\xcd\xae\x7d\x7a\x79\x7e\xdf\xed\xef\xbb\x8d\xd9\x43\x56\xda\x85\x6f\x37\x97\xe0\x03\x2f\x87\x10\x7a\xf3\xe6\x58\xf1\x71\x3b\xd7\x53\x0e\x4a\xd7\x59\x90\xb6\x0b\x3a\x42\x7f\x03\x00\x00\xff\xff\x30\x28\xe3\x40\xfa\x00\x00\x00")

func nodeupKubeletServicesKubeletServiceBytes() ([]byte, error) {
	return bindataRead(
		_nodeupKubeletServicesKubeletService,
		"nodeup/kubelet/services/kubelet.service",
	)
}

func nodeupKubeletServicesKubeletService() (*asset, error) {
	bytes, err := nodeupKubeletServicesKubeletServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/kubelet/services/kubelet.service", size: 250, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcCronHourlyLogrotate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\xca\xc9\x4f\x2f\xca\x2f\x49\x2c\x49\x55\xd0\x4f\x2d\x49\xd6\x87\x73\xf5\x92\xf3\xf3\xd2\x00\x01\x00\x00\xff\xff\x6e\x49\x17\xc0\x27\x00\x00\x00")

func nodeupLogrotateFilesEtcCronHourlyLogrotateBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcCronHourlyLogrotate,
		"nodeup/logrotate/files/etc/cron.hourly/logrotate",
	)
}

func nodeupLogrotateFilesEtcCronHourlyLogrotate() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcCronHourlyLogrotateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/cron.hourly/logrotate", size: 39, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcCronHourlyLogrotateMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupLogrotateFilesEtcCronHourlyLogrotateMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcCronHourlyLogrotateMeta,
		"nodeup/logrotate/files/etc/cron.hourly/logrotate.meta",
	)
}

func nodeupLogrotateFilesEtcCronHourlyLogrotateMeta() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcCronHourlyLogrotateMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/cron.hourly/logrotate.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDDocker = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x61\x0a\xc2\x30\x0c\x85\xff\xf7\x14\x3d\x81\xad\x30\xbd\x85\x87\x28\x5d\x1c\x61\x6b\x53\x92\x28\x4e\xf1\xee\xd6\xac\xf9\x11\xde\xfb\xf8\xe0\x85\x67\xe2\xb0\xd1\x12\x66\xca\x2b\xf0\xa9\x47\xff\x71\xbe\x1f\x93\x26\x05\x7f\xb1\x92\xa9\xed\xca\x8f\x9a\x3b\x32\x50\x50\x04\xeb\x42\xab\xb5\x4a\x8a\x77\x28\x4d\xf7\x61\x97\xc6\x20\x72\x98\xe9\x25\xf8\x06\x7f\x8e\xf1\x66\x60\x4e\xb8\x0d\x8f\xe1\x3f\x11\xaf\xd3\xd4\xe7\x48\xed\xb9\xaf\xfb\x05\x00\x00\xff\xff\x56\xc7\xc6\x97\x95\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDDockerBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDDocker,
		"nodeup/logrotate/files/etc/logrotate.d/docker",
	)
}

func nodeupLogrotateFilesEtcLogrotateDDocker() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDDockerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/docker", size: 149, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDDockerContainers = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x41\x0a\xc2\x40\x0c\x45\xf7\x3d\xc5\xac\x0b\x9a\x0a\xd5\x5b\x78\x88\x71\x1a\x4b\x6c\x9b\x0c\x49\x14\xab\x78\x77\xc7\xb1\x59\x04\xde\xe7\xc1\x83\x47\x54\x98\xe9\x02\x83\xa4\x09\x15\x92\xb0\x47\x62\x54\x83\x16\xda\xdd\xcd\x84\xf7\xb3\x8c\xe1\xdd\x84\x72\x2a\x1e\x1d\xc3\xb1\x42\x92\xbc\xba\xde\x39\x95\xa9\x0e\x0b\x99\x11\x8f\x32\x55\x62\x71\xba\xe2\x92\x7d\xdd\xec\x25\x2b\x9a\xfd\xcd\xf8\x34\x7a\x61\x38\x74\xe7\xca\x43\xa4\x79\xd3\x14\x7f\x85\xee\xd4\xf7\xa5\x26\x5e\x5f\xf3\xf9\x06\x00\x00\xff\xff\xd7\xb6\x7e\x40\xa7\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDDockerContainersBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDDockerContainers,
		"nodeup/logrotate/files/etc/logrotate.d/docker-containers",
	)
}

func nodeupLogrotateFilesEtcLogrotateDDockerContainers() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDDockerContainersBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/docker-containers", size: 167, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubeAddons = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x61\x0a\xc2\x30\x0c\x46\xff\xf7\x14\xbd\x80\xb6\xc2\xf4\x16\x1e\xa2\xae\x71\x84\xad\x4d\x49\x32\x71\x8a\x77\xb7\xc6\xe5\x47\xe0\x3d\x1e\x7c\xe1\x91\x38\x2c\x34\x85\x79\xbd\xc1\x21\xe5\x4c\x55\x8e\x9d\xfd\xdb\xf9\x7e\x4c\x9a\x14\xfc\xd9\x60\xa4\xb6\x29\xaf\x75\xec\xca\x44\x41\x11\xac\x13\xcd\x46\x95\x14\xef\x50\x9a\x6e\x7b\x5d\x1a\x83\xc8\xbf\x4c\x4f\xc1\x17\xf8\x53\x8c\x57\x13\x39\xe1\xb2\x77\x0c\xbf\x89\x78\x19\x86\x3e\x47\x6a\xcf\x7d\xdc\x37\x00\x00\xff\xff\x67\xd8\x8b\xdb\x9a\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeAddonsBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubeAddons,
		"nodeup/logrotate/files/etc/logrotate.d/kube-addons",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubeAddons() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeAddonsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kube-addons", size: 154, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubeApiserver = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x61\x0a\xc2\x30\x0c\x46\xff\xef\x14\xbd\x80\xb6\xc2\xf4\x16\x1e\x22\xce\x38\xc2\xd6\xa6\x24\xd9\x70\x8a\x77\xb7\xc6\xe5\x47\xe0\x7b\x3c\x78\x71\x05\x89\x33\x8f\x71\x5a\x6e\x78\x80\x4a\x8a\xb2\xa2\x1c\x1b\x0a\xef\x2e\xb4\x13\x36\x30\x0c\x67\x1f\x03\xd7\xcd\x64\x29\x43\x43\x0e\x32\xa9\x52\x19\x79\xf2\x55\xd8\xe8\x81\xb9\xda\xb6\xdb\xb9\x0a\xaa\xfe\x4d\x78\x2a\xbd\x30\x9c\x52\xba\x3a\xb8\x03\xcd\xbb\x27\xf8\x4b\xa4\x4b\xdf\xb7\x1c\x9b\xbf\xee\xd3\x7d\x03\x00\x00\xff\xff\xd9\x37\x83\xa2\x9d\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeApiserverBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubeApiserver,
		"nodeup/logrotate/files/etc/logrotate.d/kube-apiserver",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubeApiserver() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeApiserverBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kube-apiserver", size: 157, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubeControllerManager = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x51\x0e\x02\x21\x0c\x44\xff\x39\x05\x17\x58\xc1\x64\xf5\x16\x1e\xa2\x62\x25\x64\x81\x92\xd2\x35\xae\xc6\xbb\x8b\x75\xfb\xd1\x64\xde\xbc\x64\xdc\x03\xd8\x65\x8a\x6e\x59\xaf\x38\x05\xaa\xc2\x94\x33\xf2\x54\xa0\x42\x44\x3e\x8c\xce\xbe\x8d\x1d\xc7\x24\x20\x68\x4f\x1a\x02\xb5\x4d\x78\xad\x61\x20\x05\x25\xf5\x9e\x6a\xa4\x45\x53\x25\x49\x77\x2c\x4d\xb6\xdd\x2e\x8d\xb1\xf7\xbf\x09\xcf\x9e\x5e\x68\x8f\xde\x5f\x14\xdc\x20\xe5\xdd\x63\xfc\x4d\xf8\xf3\x3c\x8f\x39\x12\x7d\xe6\x63\xbe\x01\x00\x00\xff\xff\x00\xd5\x53\xf3\xa6\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeControllerManagerBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubeControllerManager,
		"nodeup/logrotate/files/etc/logrotate.d/kube-controller-manager",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubeControllerManager() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeControllerManagerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kube-controller-manager", size: 166, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubeProxy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x61\x0a\xc2\x30\x0c\x46\xff\xf7\x14\xbd\x80\xb6\xc2\xf4\x16\x1e\xa2\xce\x38\xc2\xd6\xa6\x24\x99\xac\x8a\x77\xb7\xc6\xe5\x47\xe0\x3d\x1e\x7c\xe1\x99\x38\x2c\x34\x85\x79\xbd\xc1\xa1\x32\x6d\xed\xd8\xd1\xbf\x9d\xef\xc7\xa4\x49\xc1\x9f\x0d\x46\xaa\x4d\x79\x2d\x63\x57\x26\x32\x8a\x60\x99\x68\x36\x2a\xa4\xf8\x80\x5c\xb5\xed\x75\xae\x0c\x22\xff\x32\x6d\x82\x2f\xf0\xa7\x18\xaf\x26\xee\x09\x97\xbd\x63\xf8\x4d\xc4\xcb\x30\xf4\x39\x52\x7b\xee\xe3\xbe\x01\x00\x00\xff\xff\xfc\x66\x98\x2e\x99\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeProxyBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubeProxy,
		"nodeup/logrotate/files/etc/logrotate.d/kube-proxy",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubeProxy() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeProxyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kube-proxy", size: 153, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubeScheduler = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x51\xce\x02\x21\x0c\x06\xdf\x39\x05\x17\xf8\x7f\x30\x59\xbd\x85\x87\x40\xb6\xae\x64\x81\x92\xb6\x18\x57\xe3\xdd\xc5\xba\x7d\x68\xf2\x4d\x26\x19\x77\x0f\xe4\x32\x2e\x6e\xed\x17\xf8\xe3\x78\x83\xb9\x67\xa0\xff\x81\xec\xcb\xd8\x71\x84\x12\x04\xec\x51\x47\xc4\xb6\x09\xf5\x1a\x07\x52\x50\x12\x73\xaa\x0b\xae\xba\x2a\x4a\xba\x42\x69\xb2\xed\x76\x69\x04\xcc\x3f\x33\x3c\x38\x3d\xc1\x1e\xbc\x3f\x2b\x98\x43\xca\xbb\x47\xf0\x4d\xf8\xd3\x34\x8d\x1c\x8a\x3e\xf3\x36\x9f\x00\x00\x00\xff\xff\xea\x01\x0f\xa8\x9d\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeSchedulerBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubeScheduler,
		"nodeup/logrotate/files/etc/logrotate.d/kube-scheduler",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubeScheduler() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeSchedulerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kube-scheduler", size: 157, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotateFilesEtcLogrotateDKubelet = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x51\x0e\x02\x21\x0c\x44\xff\x39\x05\x27\x10\x4c\x56\x6f\xe1\x21\x70\xad\x9b\x66\x81\x92\xb6\x6b\x5c\x8d\x77\x17\x2b\xfd\x68\x66\x5e\x5e\x32\xe1\x91\x38\x64\x5a\xc2\xba\x5d\x21\x83\x1e\x7a\xf6\x6f\xe7\xfb\x31\x69\x52\xf0\x27\x2b\x33\xb5\x5d\x79\xab\x73\x47\x06\x0a\x8a\x60\x5d\x68\xb5\x56\x49\xf1\x0e\xa5\xe9\x3e\xec\xd2\x18\x44\xfe\x66\x7a\x0a\xbe\xc0\x1f\x63\xbc\x18\xb8\x25\xcc\xc3\x63\xf8\x4d\xc4\xf3\x34\xf5\x39\x52\x7b\xee\xe3\xbe\x01\x00\x00\xff\xff\xaf\x16\x77\xf3\x96\x00\x00\x00")

func nodeupLogrotateFilesEtcLogrotateDKubeletBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotateFilesEtcLogrotateDKubelet,
		"nodeup/logrotate/files/etc/logrotate.d/kubelet",
	)
}

func nodeupLogrotateFilesEtcLogrotateDKubelet() (*asset, error) {
	bytes, err := nodeupLogrotateFilesEtcLogrotateDKubeletBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/files/etc/logrotate.d/kubelet", size: 150, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupLogrotatePackagesLogrotate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupLogrotatePackagesLogrotateBytes() ([]byte, error) {
	return bindataRead(
		_nodeupLogrotatePackagesLogrotate,
		"nodeup/logrotate/packages/logrotate",
	)
}

func nodeupLogrotatePackagesLogrotate() (*asset, error) {
	bytes, err := nodeupLogrotatePackagesLogrotateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/logrotate/packages/logrotate", size: 0, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\x05\x04\x00\x00\xff\xff\xa8\xbb\xbe\x73\x03\x00\x00\x00")

func nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAsset,
		"nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset",
	)
}

func nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAsset() (*asset, error) {
	bytes, err := nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset", size: 3, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMeta,
		"nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset.meta",
	)
}

func nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMeta() (*asset, error) {
	bytes, err := nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\x05\x04\x00\x00\xff\xff\xa8\xbb\xbe\x73\x03\x00\x00\x00")

func nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAsset,
		"nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset",
	)
}

func nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAsset() (*asset, error) {
	bytes, err := nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset", size: 3, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMeta,
		"nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset.meta",
	)
}

func nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMeta() (*asset, error) {
	bytes, err := nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\x05\x04\x00\x00\xff\xff\xa8\xbb\xbe\x73\x03\x00\x00\x00")

func nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAsset,
		"nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset",
	)
}

func nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAsset() (*asset, error) {
	bytes, err := nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset", size: 3, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMeta,
		"nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset.meta",
	)
}

func nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMeta() (*asset, error) {
	bytes, err := nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_ptpFilesOptCniBinPtpAsset = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\xaa\x05\x04\x00\x00\xff\xff\xa8\xbb\xbe\x73\x03\x00\x00\x00")

func nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_ptpFilesOptCniBinPtpAsset,
		"nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset",
	)
}

func nodeupNetworking_cni_ptpFilesOptCniBinPtpAsset() (*asset, error) {
	bytes, err := nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset", size: 3, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMeta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xe6\x52\x50\x50\xca\xcd\x4f\x49\x55\xb2\x52\x50\x32\x30\x37\x35\x55\xe2\xaa\x05\x04\x00\x00\xff\xff\x45\x2a\xf1\x1e\x14\x00\x00\x00")

func nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMetaBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMeta,
		"nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset.meta",
	)
}

func nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMeta() (*asset, error) {
	bytes, err := nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMetaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset.meta", size: 20, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNtp_awsPackagesNtp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupNtp_awsPackagesNtpBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNtp_awsPackagesNtp,
		"nodeup/ntp/_aws/packages/ntp",
	)
}

func nodeupNtp_awsPackagesNtp() (*asset, error) {
	bytes, err := nodeupNtp_awsPackagesNtpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/ntp/_aws/packages/ntp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupNtp_awsServicesNtp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupNtp_awsServicesNtpBytes() ([]byte, error) {
	return bindataRead(
		_nodeupNtp_awsServicesNtp,
		"nodeup/ntp/_aws/services/ntp",
	)
}

func nodeupNtp_awsServicesNtp() (*asset, error) {
	bytes, err := nodeupNtp_awsServicesNtpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/ntp/_aws/services/ntp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_debian_familyPackagesAptTransportHttps = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_debian_familyPackagesAptTransportHttpsBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_debian_familyPackagesAptTransportHttps,
		"nodeup/top/_debian_family/packages/apt-transport-https",
	)
}

func nodeupTop_debian_familyPackagesAptTransportHttps() (*asset, error) {
	bytes, err := nodeupTop_debian_familyPackagesAptTransportHttpsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_debian_family/packages/apt-transport-https", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_debian_familyPackagesNfsCommon = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_debian_familyPackagesNfsCommonBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_debian_familyPackagesNfsCommon,
		"nodeup/top/_debian_family/packages/nfs-common",
	)
}

func nodeupTop_debian_familyPackagesNfsCommon() (*asset, error) {
	bytes, err := nodeupTop_debian_familyPackagesNfsCommonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_debian_family/packages/nfs-common", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_debian_familyPackagesPythonApt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_debian_familyPackagesPythonAptBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_debian_familyPackagesPythonApt,
		"nodeup/top/_debian_family/packages/python-apt",
	)
}

func nodeupTop_debian_familyPackagesPythonApt() (*asset, error) {
	bytes, err := nodeupTop_debian_familyPackagesPythonAptBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_debian_family/packages/python-apt", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_debian_familyPackagesSocat = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_debian_familyPackagesSocatBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_debian_familyPackagesSocat,
		"nodeup/top/_debian_family/packages/socat",
	)
}

func nodeupTop_debian_familyPackagesSocat() (*asset, error) {
	bytes, err := nodeupTop_debian_familyPackagesSocatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_debian_family/packages/socat", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_redhat_familyPackagesGit = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_redhat_familyPackagesGitBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_redhat_familyPackagesGit,
		"nodeup/top/_redhat_family/packages/git",
	)
}

func nodeupTop_redhat_familyPackagesGit() (*asset, error) {
	bytes, err := nodeupTop_redhat_familyPackagesGitBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_redhat_family/packages/git", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_redhat_familyPackagesPython = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_redhat_familyPackagesPythonBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_redhat_familyPackagesPython,
		"nodeup/top/_redhat_family/packages/python",
	)
}

func nodeupTop_redhat_familyPackagesPython() (*asset, error) {
	bytes, err := nodeupTop_redhat_familyPackagesPythonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_redhat_family/packages/python", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_ubuntuPackagesGit = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_ubuntuPackagesGitBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_ubuntuPackagesGit,
		"nodeup/top/_ubuntu/packages/git",
	)
}

func nodeupTop_ubuntuPackagesGit() (*asset, error) {
	bytes, err := nodeupTop_ubuntuPackagesGitBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_ubuntu/packages/git", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTop_ubuntuPackagesNetcatTraditional = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTop_ubuntuPackagesNetcatTraditionalBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTop_ubuntuPackagesNetcatTraditional,
		"nodeup/top/_ubuntu/packages/netcat-traditional",
	)
}

func nodeupTop_ubuntuPackagesNetcatTraditional() (*asset, error) {
	bytes, err := nodeupTop_ubuntuPackagesNetcatTraditionalBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/_ubuntu/packages/netcat-traditional", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTopFilesUsrLocalShareDocKubernetesLicenses = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x0a\xf1\x77\xf1\x57\xd0\x55\x28\xcf\x48\x2d\x4a\x55\xc8\x2c\x56\x28\xc9\x00\x12\xc5\xf9\xa5\x45\xc9\xa9\x29\x0a\x69\x45\xf9\xb9\xf6\x80\x00\x00\x00\xff\xff\x5b\xbe\x4f\x80\x22\x00\x00\x00")

func nodeupTopFilesUsrLocalShareDocKubernetesLicensesBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTopFilesUsrLocalShareDocKubernetesLicenses,
		"nodeup/top/files/usr/local/share/doc/kubernetes/LICENSES",
	)
}

func nodeupTopFilesUsrLocalShareDocKubernetesLicenses() (*asset, error) {
	bytes, err := nodeupTopFilesUsrLocalShareDocKubernetesLicensesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/files/usr/local/share/doc/kubernetes/LICENSES", size: 34, mode: os.FileMode(420), modTime: time.Unix(1469713471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeupTopPackagesCurl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func nodeupTopPackagesCurlBytes() ([]byte, error) {
	return bindataRead(
		_nodeupTopPackagesCurl,
		"nodeup/top/packages/curl",
	)
}

func nodeupTopPackagesCurl() (*asset, error) {
	bytes, err := nodeupTopPackagesCurlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nodeup/top/packages/curl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1467694863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _proto_awsMaster_volumesYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x51\xcd\x6a\xb4\x40\x10\xbc\xfb\x14\x85\x9f\xc7\x2f\x26\xec\x51\xc8\x65\x83\x84\xb0\x24\x97\x5d\xf6\x90\xdb\xa8\xad\x2b\x3a\x2a\xce\xac\x60\xc4\x77\x4f\xcf\xcf\xa2\x90\x5b\x5b\x55\x3d\x55\x56\x2f\x0b\x46\xd1\x55\x84\x88\x74\x5e\x20\x79\x45\x9c\xf2\xf0\xd6\xde\x95\xa6\x51\x61\x5d\x83\x4d\x22\x0d\x6f\x85\xf1\x27\xc9\xcc\xf3\xc1\x3f\xa4\xc7\x33\xa6\xbe\xbd\x4b\x42\xd9\x8f\x20\x91\xdf\x20\xad\x02\x7d\x09\x7d\x23\x07\x59\x8b\xdc\x3d\x1d\x50\xa6\xae\x76\xe5\x79\x59\x22\x19\x7f\x09\x49\xeb\x1a\x1b\xc9\x13\x03\xd6\xc4\x63\x1c\xc0\xe7\x31\x00\x5b\x26\x01\x20\x26\x51\xb7\x22\xab\xdb\x5a\xcf\xdf\x7d\x47\x09\x58\xc6\xef\x98\xd9\xa4\x02\x54\xfd\x43\xef\x47\x8b\x73\x26\xa6\x9c\xdd\x99\x61\x1c\x5e\x9c\xc6\x85\xbe\xcc\x03\xfd\xd1\x19\x10\x61\x35\x1c\x42\x5f\x42\x5d\x1a\xf2\x24\xd5\x89\xe6\x8f\xc2\xed\x37\xfe\xeb\xe1\xbe\x67\x19\xa1\xce\xeb\xa8\xcb\xc7\x79\xd0\x54\xec\x6c\xd2\x07\x76\xf5\xcd\x89\x56\xf9\xe8\x5a\x54\xca\xfc\xe4\x56\x7d\xf3\x1f\xd1\x64\xea\xdf\x5d\xc7\xdd\xe0\xc2\x5a\x7f\x3d\x3e\x90\x5d\xb7\x8b\x51\x63\x9a\x42\x68\xc6\x89\xc7\xd0\xbd\xe7\x23\xed\xd2\x6d\xd3\x6f\x00\x00\x00\xff\xff\xcf\xd3\x46\xe0\x0d\x02\x00\x00")

func proto_awsMaster_volumesYamlBytes() ([]byte, error) {
	return bindataRead(
		_proto_awsMaster_volumesYaml,
		"proto/_aws/master_volumes.yaml",
	)
}

func proto_awsMaster_volumesYaml() (*asset, error) {
	bytes, err := proto_awsMaster_volumesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "proto/_aws/master_volumes.yaml", size: 525, mode: os.FileMode(420), modTime: time.Unix(1473344504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cloudup/_aws/master/_master_asg/master_asg.yaml": cloudup_awsMaster_master_asgMaster_asgYaml,
	"cloudup/_aws/master/_master_dns/master_dns.yaml": cloudup_awsMaster_master_dnsMaster_dnsYaml,
	"cloudup/_aws/master/_master_lb/master_lb.yaml": cloudup_awsMaster_master_lbMaster_lbYaml,
	"cloudup/_aws/master/_master_single/master_single.yaml": cloudup_awsMaster_master_singleMaster_singleYaml,
	"cloudup/_aws/master/_not_master_lb/not_master_lb.yaml": cloudup_awsMaster_not_master_lbNot_master_lbYaml,
	"cloudup/_aws/master/master.yaml": cloudup_awsMasterMasterYaml,
	"cloudup/_aws/network.yaml": cloudup_awsNetworkYaml,
	"cloudup/_aws/nodes.yaml": cloudup_awsNodesYaml,
	"cloudup/_aws/resources/iam/kubernetes-master-policy.json.template": cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplate,
	"cloudup/_aws/resources/iam/kubernetes-master-role.json.template": cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplate,
	"cloudup/_aws/resources/iam/kubernetes-node-policy.json.template": cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplate,
	"cloudup/_aws/resources/iam/kubernetes-node-role.json.template": cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplate,
	"cloudup/_aws/resources/nodeup.sh.template": cloudup_awsResourcesNodeupShTemplate,
	"cloudup/_aws/sshkey.yaml": cloudup_awsSshkeyYaml,
	"cloudup/_gce/master.yaml": cloudup_gceMasterYaml,
	"cloudup/_gce/network.yaml": cloudup_gceNetworkYaml,
	"cloudup/_gce/nodes.yaml": cloudup_gceNodesYaml,
	"cloudup/_gce/resources/nodeup.sh.template": cloudup_gceResourcesNodeupShTemplate,
	"cloudup/pki/kubecfg": cloudupPkiKubecfg,
	"cloudup/pki/kubelet": cloudupPkiKubelet,
	"cloudup/pki/master": cloudupPkiMaster,
	"cloudup/resources/cloudinit.yaml.template": cloudupResourcesCloudinitYamlTemplate,
	"cloudup/resources/cluster-name.template": cloudupResourcesClusterNameTemplate,
	"cloudup/resources/config.yaml.template": cloudupResourcesConfigYamlTemplate,
	"cloudup/tokens/tokens.yaml": cloudupTokensTokensYaml,
	"config/_aws/defaults.options": config_awsDefaultsOptions,
	"config/_aws/master/_master_dns/defaults.options": config_awsMaster_master_dnsDefaultsOptions,
	"config/_aws/master/_master_single/defaults.options": config_awsMaster_master_singleDefaultsOptions,
	"config/_gce/defaults.options": config_gceDefaultsOptions,
	"config/components/docker/_e2e_storage_test_environment/e2e.options": configComponentsDocker_e2e_storage_test_environmentE2eOptions,
	"config/components/docker/_networking_kubenet/kubenet.options": configComponentsDocker_networking_kubenetKubenetOptions,
	"config/components/docker/docker.options": configComponentsDockerDockerOptions,
	"config/components/kube-apiserver/_aws/kube-apiserver.aws.options": configComponentsKubeApiserver_awsKubeApiserverAwsOptions,
	"config/components/kube-apiserver/_gce/kube-apiserver.gce.options": configComponentsKubeApiserver_gceKubeApiserverGceOptions,
	"config/components/kube-apiserver/kube-apiserver.options": configComponentsKubeApiserverKubeApiserverOptions,
	"config/components/kube-controller-manager/_aws/kube-controller-manager.aws.options": configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptions,
	"config/components/kube-controller-manager/_gce/kube-controller-manager.gce.options": configComponentsKubeControllerManager_gceKubeControllerManagerGceOptions,
	"config/components/kube-controller-manager/_networking_classic/kube-controller-manager.networking-classic.options": configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptions,
	"config/components/kube-controller-manager/_networking_kubenet/_networking_external/kube-controller-manager.networking-external.options": configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptions,
	"config/components/kube-controller-manager/_networking_kubenet/kube-controller-manager.networking-kubenet.options": configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptions,
	"config/components/kube-controller-manager/kube-controller-manager.options": configComponentsKubeControllerManagerKubeControllerManagerOptions,
	"config/components/kube-dns/kube-dns.options": configComponentsKubeDnsKubeDnsOptions,
	"config/components/kube-proxy/kube-proxy.options": configComponentsKubeProxyKubeProxyOptions,
	"config/components/kube-scheduler/kube-scheduler.options": configComponentsKubeSchedulerKubeSchedulerOptions,
	"config/components/kubelet/_aws/kubelet.aws.options": configComponentsKubelet_awsKubeletAwsOptions,
	"config/components/kubelet/_gce/kubelet.gce.options": configComponentsKubelet_gceKubeletGceOptions,
	"config/components/kubelet/_isolate_masters/kubelet.options": configComponentsKubelet_isolate_mastersKubeletOptions,
	"config/components/kubelet/_networking_kubenet/kubelet.kubenet.options": configComponentsKubelet_networking_kubenetKubeletKubenetOptions,
	"config/components/kubelet/kubelet.options": configComponentsKubeletKubeletOptions,
	"config/defaults.options": configDefaultsOptions,
	"nodeup/_automatic_upgrades/_debian_family/files/etc/apt/apt.conf.d/20auto-upgrades": nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgrades,
	"nodeup/_automatic_upgrades/_debian_family/packages/unattended-upgrades": nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgrades,
	"nodeup/_kope_routing/files/etc/kubernetes/manifests/kope-routing.manifest.template": nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplate,
	"nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template": nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplate,
	"nodeup/_kope_routing/files/var/lib/kope-routing/kubeconfig.template.meta": nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMeta,
	"nodeup/_kope_routing/files/var/log/kope-routing.log": nodeup_kope_routingFilesVarLogKopeRoutingLog,
	"nodeup/_kope_routing/files/var/log/kope-routing.log.meta": nodeup_kope_routingFilesVarLogKopeRoutingLogMeta,
	"nodeup/_kubernetes_master/_aws/kope-aws/files/etc/kubernetes/manifests/kope-aws.manifest.template": nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplate,
	"nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh": nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsSh,
	"nodeup/_kubernetes_master/_kube-master-addons/files/etc/kubernetes/kube-master-addons.sh.meta": nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMeta,
	"nodeup/_kubernetes_master/_kube-master-addons/services/kube-master-addons.service": nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsService,
	"nodeup/_kubernetes_master/certs/files/srv/kubernetes/ca.crt.template": nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplate,
	"nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.cert.template": nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplate,
	"nodeup/_kubernetes_master/certs/files/srv/kubernetes/server.key.template": nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplate,
	"nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd-events.manifest": nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifest,
	"nodeup/_kubernetes_master/etcd/_not_protokube/etc/kubernetes/manifests/etcd.manifest": nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifest,
	"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log": nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLog,
	"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd-events.log.meta": nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMeta,
	"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log": nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLog,
	"nodeup/_kubernetes_master/etcd/_not_protokube/var/log/etcd.log.meta": nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMeta,
	"nodeup/_kubernetes_master/etcd/users/etcd": nodeup_kubernetes_masterEtcdUsersEtcd,
	"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/addons/namespace.yaml": nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYaml,
	"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh": nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateSh,
	"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addon-update.sh.meta": nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMeta,
	"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh": nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsSh,
	"nodeup/_kubernetes_master/kube-addons/files/etc/kubernetes/kube-addons.sh.meta": nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMeta,
	"nodeup/_kubernetes_master/kube-addons/services/kube-addons.service": nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsService,
	"nodeup/_kubernetes_master/kube-apiserver/files/etc/kubernetes/manifests/kube-apiserver.manifest.template": nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplate,
	"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template": nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplate,
	"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/basic_auth.csv.template.meta": nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMeta,
	"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template": nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplate,
	"nodeup/_kubernetes_master/kube-apiserver/files/srv/kubernetes/known_tokens.csv.template.meta": nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMeta,
	"nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log": nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLog,
	"nodeup/_kubernetes_master/kube-apiserver/files/var/log/kube-apiserver.log.meta": nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMeta,
	"nodeup/_kubernetes_master/kube-controller-manager/files/etc/kubernetes/manifests/kube-controller-manager.template": nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplate,
	"nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log": nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLog,
	"nodeup/_kubernetes_master/kube-controller-manager/files/var/log/kube-controller-manager.log.meta": nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMeta,
	"nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-rc.yaml.template": nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplate,
	"nodeup/_kubernetes_master/kube-dns/files/etc/kubernetes/addons/dns/kubedns-svc.yaml.template": nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplate,
	"nodeup/_kubernetes_master/kube-scheduler/files/etc/kubernetes/manifests/kube-scheduler.template": nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplate,
	"nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log": nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLog,
	"nodeup/_kubernetes_master/kube-scheduler/files/var/log/kube-scheduler.log.meta": nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMeta,
	"nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh": nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerSh,
	"nodeup/_kubernetes_pool/_kube-node-unpacker/files/etc/kubernetes/kube-node-unpacker.sh.meta": nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMeta,
	"nodeup/_kubernetes_pool/_kube-node-unpacker/files/srv/salt/kube-bins/kube-proxy.tar.asset": nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAsset,
	"nodeup/_kubernetes_pool/_kube-node-unpacker/services/kube-node-unpacker.service": nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerService,
	"nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount": nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mount,
	"nodeup/_kubernetes_pool/helpers/_aws/files/usr/share/google/safe_format_and_mount.meta": nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMeta,
	"nodeup/_kubernetes_pool/kube-proxy/files/etc/kubernetes/manifests/kube-proxy.manifest.template": nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplate,
	"nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template": nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplate,
	"nodeup/_kubernetes_pool/kube-proxy/files/var/lib/kube-proxy/kubeconfig.template.meta": nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMeta,
	"nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log": nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLog,
	"nodeup/_kubernetes_pool/kube-proxy/files/var/log/kube-proxy.log.meta": nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMeta,
	"nodeup/_protokube/files/etc/sysconfig/protokube.template": nodeup_protokubeFilesEtcSysconfigProtokubeTemplate,
	"nodeup/_protokube/services/protokube.service.template": nodeup_protokubeServicesProtokubeServiceTemplate,
	"nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf": nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConf,
	"nodeup/docker/_gce/files/etc/sysctl.d/99-ip_forward.conf.meta": nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMeta,
	"nodeup/docker/_systemd/files/etc/sysconfig/docker.template": nodeupDocker_systemdFilesEtcSysconfigDockerTemplate,
	"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck": nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheck,
	"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-healthcheck.meta": nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMeta,
	"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart": nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestart,
	"nodeup/docker/_systemd/files/opt/kubernetes/helpers/docker-prestart.meta": nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMeta,
	"nodeup/docker/_systemd/services/docker-healthcheck.service": nodeupDocker_systemdServicesDockerHealthcheckService,
	"nodeup/docker/_systemd/services/docker-healthcheck.service.meta": nodeupDocker_systemdServicesDockerHealthcheckServiceMeta,
	"nodeup/docker/_systemd/services/docker-healthcheck.timer": nodeupDocker_systemdServicesDockerHealthcheckTimer,
	"nodeup/docker/_systemd/services/docker.service": nodeupDocker_systemdServicesDockerService,
	"nodeup/docker/files/usr/share/doc/docker/apache.txt": nodeupDockerFilesUsrShareDocDockerApacheTxt,
	"nodeup/docker/packages/_jessie/docker-engine": nodeupDockerPackages_jessieDockerEngine,
	"nodeup/docker/packages/_xenial/docker-engine": nodeupDockerPackages_xenialDockerEngine,
	"nodeup/docker/packages/bridge-utils": nodeupDockerPackagesBridgeUtils,
	"nodeup/docker/packages/libapparmor1": nodeupDockerPackagesLibapparmor1,
	"nodeup/docker/packages/libltdl7": nodeupDockerPackagesLibltdl7,
	"nodeup/docker/packages/perl": nodeupDockerPackagesPerl,
	"nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset": nodeupKubeClientToolsFilesUsrLocalBinKubectlAsset,
	"nodeup/kube-client-tools/files/usr/local/bin/kubectl.asset.meta": nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMeta,
	"nodeup/kubelet/files/etc/sysconfig/kubelet.template": nodeupKubeletFilesEtcSysconfigKubeletTemplate,
	"nodeup/kubelet/files/usr/local/bin/kubelet.asset": nodeupKubeletFilesUsrLocalBinKubeletAsset,
	"nodeup/kubelet/files/usr/local/bin/kubelet.asset.meta": nodeupKubeletFilesUsrLocalBinKubeletAssetMeta,
	"nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template": nodeupKubeletFilesVarLibKubeletKubeconfigTemplate,
	"nodeup/kubelet/files/var/lib/kubelet/kubeconfig.template.meta": nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMeta,
	"nodeup/kubelet/services/kubelet.service": nodeupKubeletServicesKubeletService,
	"nodeup/logrotate/files/etc/cron.hourly/logrotate": nodeupLogrotateFilesEtcCronHourlyLogrotate,
	"nodeup/logrotate/files/etc/cron.hourly/logrotate.meta": nodeupLogrotateFilesEtcCronHourlyLogrotateMeta,
	"nodeup/logrotate/files/etc/logrotate.d/docker": nodeupLogrotateFilesEtcLogrotateDDocker,
	"nodeup/logrotate/files/etc/logrotate.d/docker-containers": nodeupLogrotateFilesEtcLogrotateDDockerContainers,
	"nodeup/logrotate/files/etc/logrotate.d/kube-addons": nodeupLogrotateFilesEtcLogrotateDKubeAddons,
	"nodeup/logrotate/files/etc/logrotate.d/kube-apiserver": nodeupLogrotateFilesEtcLogrotateDKubeApiserver,
	"nodeup/logrotate/files/etc/logrotate.d/kube-controller-manager": nodeupLogrotateFilesEtcLogrotateDKubeControllerManager,
	"nodeup/logrotate/files/etc/logrotate.d/kube-proxy": nodeupLogrotateFilesEtcLogrotateDKubeProxy,
	"nodeup/logrotate/files/etc/logrotate.d/kube-scheduler": nodeupLogrotateFilesEtcLogrotateDKubeScheduler,
	"nodeup/logrotate/files/etc/logrotate.d/kubelet": nodeupLogrotateFilesEtcLogrotateDKubelet,
	"nodeup/logrotate/packages/logrotate": nodeupLogrotatePackagesLogrotate,
	"nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset": nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAsset,
	"nodeup/networking/_cni_bridge/files/opt/cni/bin/bridge.asset.meta": nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMeta,
	"nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset": nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAsset,
	"nodeup/networking/_cni_host_local/files/opt/cni/bin/host-local.asset.meta": nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMeta,
	"nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset": nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAsset,
	"nodeup/networking/_cni_loopback/files/opt/cni/bin/loopback.asset.meta": nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMeta,
	"nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset": nodeupNetworking_cni_ptpFilesOptCniBinPtpAsset,
	"nodeup/networking/_cni_ptp/files/opt/cni/bin/ptp.asset.meta": nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMeta,
	"nodeup/ntp/_aws/packages/ntp": nodeupNtp_awsPackagesNtp,
	"nodeup/ntp/_aws/services/ntp": nodeupNtp_awsServicesNtp,
	"nodeup/top/_debian_family/packages/apt-transport-https": nodeupTop_debian_familyPackagesAptTransportHttps,
	"nodeup/top/_debian_family/packages/nfs-common": nodeupTop_debian_familyPackagesNfsCommon,
	"nodeup/top/_debian_family/packages/python-apt": nodeupTop_debian_familyPackagesPythonApt,
	"nodeup/top/_debian_family/packages/socat": nodeupTop_debian_familyPackagesSocat,
	"nodeup/top/_redhat_family/packages/git": nodeupTop_redhat_familyPackagesGit,
	"nodeup/top/_redhat_family/packages/python": nodeupTop_redhat_familyPackagesPython,
	"nodeup/top/_ubuntu/packages/git": nodeupTop_ubuntuPackagesGit,
	"nodeup/top/_ubuntu/packages/netcat-traditional": nodeupTop_ubuntuPackagesNetcatTraditional,
	"nodeup/top/files/usr/local/share/doc/kubernetes/LICENSES": nodeupTopFilesUsrLocalShareDocKubernetesLicenses,
	"nodeup/top/packages/curl": nodeupTopPackagesCurl,
	"proto/_aws/master_volumes.yaml": proto_awsMaster_volumesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cloudup": &bintree{nil, map[string]*bintree{
		"_aws": &bintree{nil, map[string]*bintree{
			"master": &bintree{nil, map[string]*bintree{
				"_master_asg": &bintree{nil, map[string]*bintree{
					"master_asg.yaml": &bintree{cloudup_awsMaster_master_asgMaster_asgYaml, map[string]*bintree{}},
				}},
				"_master_dns": &bintree{nil, map[string]*bintree{
					"master_dns.yaml": &bintree{cloudup_awsMaster_master_dnsMaster_dnsYaml, map[string]*bintree{}},
				}},
				"_master_lb": &bintree{nil, map[string]*bintree{
					"master_lb.yaml": &bintree{cloudup_awsMaster_master_lbMaster_lbYaml, map[string]*bintree{}},
				}},
				"_master_single": &bintree{nil, map[string]*bintree{
					"master_single.yaml": &bintree{cloudup_awsMaster_master_singleMaster_singleYaml, map[string]*bintree{}},
				}},
				"_not_master_lb": &bintree{nil, map[string]*bintree{
					"not_master_lb.yaml": &bintree{cloudup_awsMaster_not_master_lbNot_master_lbYaml, map[string]*bintree{}},
				}},
				"master.yaml": &bintree{cloudup_awsMasterMasterYaml, map[string]*bintree{}},
			}},
			"network.yaml": &bintree{cloudup_awsNetworkYaml, map[string]*bintree{}},
			"nodes.yaml": &bintree{cloudup_awsNodesYaml, map[string]*bintree{}},
			"resources": &bintree{nil, map[string]*bintree{
				"iam": &bintree{nil, map[string]*bintree{
					"kubernetes-master-policy.json.template": &bintree{cloudup_awsResourcesIamKubernetesMasterPolicyJsonTemplate, map[string]*bintree{}},
					"kubernetes-master-role.json.template": &bintree{cloudup_awsResourcesIamKubernetesMasterRoleJsonTemplate, map[string]*bintree{}},
					"kubernetes-node-policy.json.template": &bintree{cloudup_awsResourcesIamKubernetesNodePolicyJsonTemplate, map[string]*bintree{}},
					"kubernetes-node-role.json.template": &bintree{cloudup_awsResourcesIamKubernetesNodeRoleJsonTemplate, map[string]*bintree{}},
				}},
				"nodeup.sh.template": &bintree{cloudup_awsResourcesNodeupShTemplate, map[string]*bintree{}},
			}},
			"sshkey.yaml": &bintree{cloudup_awsSshkeyYaml, map[string]*bintree{}},
		}},
		"_gce": &bintree{nil, map[string]*bintree{
			"master.yaml": &bintree{cloudup_gceMasterYaml, map[string]*bintree{}},
			"network.yaml": &bintree{cloudup_gceNetworkYaml, map[string]*bintree{}},
			"nodes.yaml": &bintree{cloudup_gceNodesYaml, map[string]*bintree{}},
			"resources": &bintree{nil, map[string]*bintree{
				"nodeup.sh.template": &bintree{cloudup_gceResourcesNodeupShTemplate, map[string]*bintree{}},
			}},
		}},
		"pki": &bintree{nil, map[string]*bintree{
			"kubecfg": &bintree{cloudupPkiKubecfg, map[string]*bintree{}},
			"kubelet": &bintree{cloudupPkiKubelet, map[string]*bintree{}},
			"master": &bintree{cloudupPkiMaster, map[string]*bintree{}},
		}},
		"resources": &bintree{nil, map[string]*bintree{
			"cloudinit.yaml.template": &bintree{cloudupResourcesCloudinitYamlTemplate, map[string]*bintree{}},
			"cluster-name.template": &bintree{cloudupResourcesClusterNameTemplate, map[string]*bintree{}},
			"config.yaml.template": &bintree{cloudupResourcesConfigYamlTemplate, map[string]*bintree{}},
		}},
		"tokens": &bintree{nil, map[string]*bintree{
			"tokens.yaml": &bintree{cloudupTokensTokensYaml, map[string]*bintree{}},
		}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"_aws": &bintree{nil, map[string]*bintree{
			"defaults.options": &bintree{config_awsDefaultsOptions, map[string]*bintree{}},
			"master": &bintree{nil, map[string]*bintree{
				"_master_dns": &bintree{nil, map[string]*bintree{
					"defaults.options": &bintree{config_awsMaster_master_dnsDefaultsOptions, map[string]*bintree{}},
				}},
				"_master_single": &bintree{nil, map[string]*bintree{
					"defaults.options": &bintree{config_awsMaster_master_singleDefaultsOptions, map[string]*bintree{}},
				}},
			}},
		}},
		"_gce": &bintree{nil, map[string]*bintree{
			"defaults.options": &bintree{config_gceDefaultsOptions, map[string]*bintree{}},
		}},
		"components": &bintree{nil, map[string]*bintree{
			"docker": &bintree{nil, map[string]*bintree{
				"_e2e_storage_test_environment": &bintree{nil, map[string]*bintree{
					"e2e.options": &bintree{configComponentsDocker_e2e_storage_test_environmentE2eOptions, map[string]*bintree{}},
				}},
				"_networking_kubenet": &bintree{nil, map[string]*bintree{
					"kubenet.options": &bintree{configComponentsDocker_networking_kubenetKubenetOptions, map[string]*bintree{}},
				}},
				"docker.options": &bintree{configComponentsDockerDockerOptions, map[string]*bintree{}},
			}},
			"kube-apiserver": &bintree{nil, map[string]*bintree{
				"_aws": &bintree{nil, map[string]*bintree{
					"kube-apiserver.aws.options": &bintree{configComponentsKubeApiserver_awsKubeApiserverAwsOptions, map[string]*bintree{}},
				}},
				"_gce": &bintree{nil, map[string]*bintree{
					"kube-apiserver.gce.options": &bintree{configComponentsKubeApiserver_gceKubeApiserverGceOptions, map[string]*bintree{}},
				}},
				"kube-apiserver.options": &bintree{configComponentsKubeApiserverKubeApiserverOptions, map[string]*bintree{}},
			}},
			"kube-controller-manager": &bintree{nil, map[string]*bintree{
				"_aws": &bintree{nil, map[string]*bintree{
					"kube-controller-manager.aws.options": &bintree{configComponentsKubeControllerManager_awsKubeControllerManagerAwsOptions, map[string]*bintree{}},
				}},
				"_gce": &bintree{nil, map[string]*bintree{
					"kube-controller-manager.gce.options": &bintree{configComponentsKubeControllerManager_gceKubeControllerManagerGceOptions, map[string]*bintree{}},
				}},
				"_networking_classic": &bintree{nil, map[string]*bintree{
					"kube-controller-manager.networking-classic.options": &bintree{configComponentsKubeControllerManager_networking_classicKubeControllerManagerNetworkingClassicOptions, map[string]*bintree{}},
				}},
				"_networking_kubenet": &bintree{nil, map[string]*bintree{
					"_networking_external": &bintree{nil, map[string]*bintree{
						"kube-controller-manager.networking-external.options": &bintree{configComponentsKubeControllerManager_networking_kubenet_networking_externalKubeControllerManagerNetworkingExternalOptions, map[string]*bintree{}},
					}},
					"kube-controller-manager.networking-kubenet.options": &bintree{configComponentsKubeControllerManager_networking_kubenetKubeControllerManagerNetworkingKubenetOptions, map[string]*bintree{}},
				}},
				"kube-controller-manager.options": &bintree{configComponentsKubeControllerManagerKubeControllerManagerOptions, map[string]*bintree{}},
			}},
			"kube-dns": &bintree{nil, map[string]*bintree{
				"kube-dns.options": &bintree{configComponentsKubeDnsKubeDnsOptions, map[string]*bintree{}},
			}},
			"kube-proxy": &bintree{nil, map[string]*bintree{
				"kube-proxy.options": &bintree{configComponentsKubeProxyKubeProxyOptions, map[string]*bintree{}},
			}},
			"kube-scheduler": &bintree{nil, map[string]*bintree{
				"kube-scheduler.options": &bintree{configComponentsKubeSchedulerKubeSchedulerOptions, map[string]*bintree{}},
			}},
			"kubelet": &bintree{nil, map[string]*bintree{
				"_aws": &bintree{nil, map[string]*bintree{
					"kubelet.aws.options": &bintree{configComponentsKubelet_awsKubeletAwsOptions, map[string]*bintree{}},
				}},
				"_gce": &bintree{nil, map[string]*bintree{
					"kubelet.gce.options": &bintree{configComponentsKubelet_gceKubeletGceOptions, map[string]*bintree{}},
				}},
				"_isolate_masters": &bintree{nil, map[string]*bintree{
					"kubelet.options": &bintree{configComponentsKubelet_isolate_mastersKubeletOptions, map[string]*bintree{}},
				}},
				"_networking_kubenet": &bintree{nil, map[string]*bintree{
					"kubelet.kubenet.options": &bintree{configComponentsKubelet_networking_kubenetKubeletKubenetOptions, map[string]*bintree{}},
				}},
				"kubelet.options": &bintree{configComponentsKubeletKubeletOptions, map[string]*bintree{}},
			}},
		}},
		"defaults.options": &bintree{configDefaultsOptions, map[string]*bintree{}},
	}},
	"nodeup": &bintree{nil, map[string]*bintree{
		"_automatic_upgrades": &bintree{nil, map[string]*bintree{
			"_debian_family": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"apt": &bintree{nil, map[string]*bintree{
							"apt.conf.d": &bintree{nil, map[string]*bintree{
								"20auto-upgrades": &bintree{nodeup_automatic_upgrades_debian_familyFilesEtcAptAptConfD20autoUpgrades, map[string]*bintree{}},
							}},
						}},
					}},
				}},
				"packages": &bintree{nil, map[string]*bintree{
					"unattended-upgrades": &bintree{nodeup_automatic_upgrades_debian_familyPackagesUnattendedUpgrades, map[string]*bintree{}},
				}},
			}},
		}},
		"_kope_routing": &bintree{nil, map[string]*bintree{
			"files": &bintree{nil, map[string]*bintree{
				"etc": &bintree{nil, map[string]*bintree{
					"kubernetes": &bintree{nil, map[string]*bintree{
						"manifests": &bintree{nil, map[string]*bintree{
							"kope-routing.manifest.template": &bintree{nodeup_kope_routingFilesEtcKubernetesManifestsKopeRoutingManifestTemplate, map[string]*bintree{}},
						}},
					}},
				}},
				"var": &bintree{nil, map[string]*bintree{
					"lib": &bintree{nil, map[string]*bintree{
						"kope-routing": &bintree{nil, map[string]*bintree{
							"kubeconfig.template": &bintree{nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplate, map[string]*bintree{}},
							"kubeconfig.template.meta": &bintree{nodeup_kope_routingFilesVarLibKopeRoutingKubeconfigTemplateMeta, map[string]*bintree{}},
						}},
					}},
					"log": &bintree{nil, map[string]*bintree{
						"kope-routing.log": &bintree{nodeup_kope_routingFilesVarLogKopeRoutingLog, map[string]*bintree{}},
						"kope-routing.log.meta": &bintree{nodeup_kope_routingFilesVarLogKopeRoutingLogMeta, map[string]*bintree{}},
					}},
				}},
			}},
		}},
		"_kubernetes_master": &bintree{nil, map[string]*bintree{
			"_aws": &bintree{nil, map[string]*bintree{
				"kope-aws": &bintree{nil, map[string]*bintree{
					"files": &bintree{nil, map[string]*bintree{
						"etc": &bintree{nil, map[string]*bintree{
							"kubernetes": &bintree{nil, map[string]*bintree{
								"manifests": &bintree{nil, map[string]*bintree{
									"kope-aws.manifest.template": &bintree{nodeup_kubernetes_master_awsKopeAwsFilesEtcKubernetesManifestsKopeAwsManifestTemplate, map[string]*bintree{}},
								}},
							}},
						}},
					}},
				}},
			}},
			"_kube-master-addons": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"kube-master-addons.sh": &bintree{nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsSh, map[string]*bintree{}},
							"kube-master-addons.sh.meta": &bintree{nodeup_kubernetes_master_kubeMasterAddonsFilesEtcKubernetesKubeMasterAddonsShMeta, map[string]*bintree{}},
						}},
					}},
				}},
				"services": &bintree{nil, map[string]*bintree{
					"kube-master-addons.service": &bintree{nodeup_kubernetes_master_kubeMasterAddonsServicesKubeMasterAddonsService, map[string]*bintree{}},
				}},
			}},
			"certs": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"srv": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"ca.crt.template": &bintree{nodeup_kubernetes_masterCertsFilesSrvKubernetesCaCrtTemplate, map[string]*bintree{}},
							"server.cert.template": &bintree{nodeup_kubernetes_masterCertsFilesSrvKubernetesServerCertTemplate, map[string]*bintree{}},
							"server.key.template": &bintree{nodeup_kubernetes_masterCertsFilesSrvKubernetesServerKeyTemplate, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"etcd": &bintree{nil, map[string]*bintree{
				"_not_protokube": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"manifests": &bintree{nil, map[string]*bintree{
								"etcd-events.manifest": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdEventsManifest, map[string]*bintree{}},
								"etcd.manifest": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeEtcKubernetesManifestsEtcdManifest, map[string]*bintree{}},
							}},
						}},
					}},
					"var": &bintree{nil, map[string]*bintree{
						"log": &bintree{nil, map[string]*bintree{
							"etcd-events.log": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLog, map[string]*bintree{}},
							"etcd-events.log.meta": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdEventsLogMeta, map[string]*bintree{}},
							"etcd.log": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLog, map[string]*bintree{}},
							"etcd.log.meta": &bintree{nodeup_kubernetes_masterEtcd_not_protokubeVarLogEtcdLogMeta, map[string]*bintree{}},
						}},
					}},
				}},
				"users": &bintree{nil, map[string]*bintree{
					"etcd": &bintree{nodeup_kubernetes_masterEtcdUsersEtcd, map[string]*bintree{}},
				}},
			}},
			"kube-addons": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"addons": &bintree{nil, map[string]*bintree{
								"namespace.yaml": &bintree{nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesAddonsNamespaceYaml, map[string]*bintree{}},
							}},
							"kube-addon-update.sh": &bintree{nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateSh, map[string]*bintree{}},
							"kube-addon-update.sh.meta": &bintree{nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonUpdateShMeta, map[string]*bintree{}},
							"kube-addons.sh": &bintree{nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsSh, map[string]*bintree{}},
							"kube-addons.sh.meta": &bintree{nodeup_kubernetes_masterKubeAddonsFilesEtcKubernetesKubeAddonsShMeta, map[string]*bintree{}},
						}},
					}},
				}},
				"services": &bintree{nil, map[string]*bintree{
					"kube-addons.service": &bintree{nodeup_kubernetes_masterKubeAddonsServicesKubeAddonsService, map[string]*bintree{}},
				}},
			}},
			"kube-apiserver": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"manifests": &bintree{nil, map[string]*bintree{
								"kube-apiserver.manifest.template": &bintree{nodeup_kubernetes_masterKubeApiserverFilesEtcKubernetesManifestsKubeApiserverManifestTemplate, map[string]*bintree{}},
							}},
						}},
					}},
					"srv": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"basic_auth.csv.template": &bintree{nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplate, map[string]*bintree{}},
							"basic_auth.csv.template.meta": &bintree{nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesBasic_authCsvTemplateMeta, map[string]*bintree{}},
							"known_tokens.csv.template": &bintree{nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplate, map[string]*bintree{}},
							"known_tokens.csv.template.meta": &bintree{nodeup_kubernetes_masterKubeApiserverFilesSrvKubernetesKnown_tokensCsvTemplateMeta, map[string]*bintree{}},
						}},
					}},
					"var": &bintree{nil, map[string]*bintree{
						"log": &bintree{nil, map[string]*bintree{
							"kube-apiserver.log": &bintree{nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLog, map[string]*bintree{}},
							"kube-apiserver.log.meta": &bintree{nodeup_kubernetes_masterKubeApiserverFilesVarLogKubeApiserverLogMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"kube-controller-manager": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"manifests": &bintree{nil, map[string]*bintree{
								"kube-controller-manager.template": &bintree{nodeup_kubernetes_masterKubeControllerManagerFilesEtcKubernetesManifestsKubeControllerManagerTemplate, map[string]*bintree{}},
							}},
						}},
					}},
					"var": &bintree{nil, map[string]*bintree{
						"log": &bintree{nil, map[string]*bintree{
							"kube-controller-manager.log": &bintree{nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLog, map[string]*bintree{}},
							"kube-controller-manager.log.meta": &bintree{nodeup_kubernetes_masterKubeControllerManagerFilesVarLogKubeControllerManagerLogMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"kube-dns": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"addons": &bintree{nil, map[string]*bintree{
								"dns": &bintree{nil, map[string]*bintree{
									"kubedns-rc.yaml.template": &bintree{nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsRcYamlTemplate, map[string]*bintree{}},
									"kubedns-svc.yaml.template": &bintree{nodeup_kubernetes_masterKubeDnsFilesEtcKubernetesAddonsDnsKubednsSvcYamlTemplate, map[string]*bintree{}},
								}},
							}},
						}},
					}},
				}},
			}},
			"kube-scheduler": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"manifests": &bintree{nil, map[string]*bintree{
								"kube-scheduler.template": &bintree{nodeup_kubernetes_masterKubeSchedulerFilesEtcKubernetesManifestsKubeSchedulerTemplate, map[string]*bintree{}},
							}},
						}},
					}},
					"var": &bintree{nil, map[string]*bintree{
						"log": &bintree{nil, map[string]*bintree{
							"kube-scheduler.log": &bintree{nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLog, map[string]*bintree{}},
							"kube-scheduler.log.meta": &bintree{nodeup_kubernetes_masterKubeSchedulerFilesVarLogKubeSchedulerLogMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
		}},
		"_kubernetes_pool": &bintree{nil, map[string]*bintree{
			"_kube-node-unpacker": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"kube-node-unpacker.sh": &bintree{nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerSh, map[string]*bintree{}},
							"kube-node-unpacker.sh.meta": &bintree{nodeup_kubernetes_pool_kubeNodeUnpackerFilesEtcKubernetesKubeNodeUnpackerShMeta, map[string]*bintree{}},
						}},
					}},
					"srv": &bintree{nil, map[string]*bintree{
						"salt": &bintree{nil, map[string]*bintree{
							"kube-bins": &bintree{nil, map[string]*bintree{
								"kube-proxy.tar.asset": &bintree{nodeup_kubernetes_pool_kubeNodeUnpackerFilesSrvSaltKubeBinsKubeProxyTarAsset, map[string]*bintree{}},
							}},
						}},
					}},
				}},
				"services": &bintree{nil, map[string]*bintree{
					"kube-node-unpacker.service": &bintree{nodeup_kubernetes_pool_kubeNodeUnpackerServicesKubeNodeUnpackerService, map[string]*bintree{}},
				}},
			}},
			"helpers": &bintree{nil, map[string]*bintree{
				"_aws": &bintree{nil, map[string]*bintree{
					"files": &bintree{nil, map[string]*bintree{
						"usr": &bintree{nil, map[string]*bintree{
							"share": &bintree{nil, map[string]*bintree{
								"google": &bintree{nil, map[string]*bintree{
									"safe_format_and_mount": &bintree{nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mount, map[string]*bintree{}},
									"safe_format_and_mount.meta": &bintree{nodeup_kubernetes_poolHelpers_awsFilesUsrShareGoogleSafe_format_and_mountMeta, map[string]*bintree{}},
								}},
							}},
						}},
					}},
				}},
			}},
			"kube-proxy": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"manifests": &bintree{nil, map[string]*bintree{
								"kube-proxy.manifest.template": &bintree{nodeup_kubernetes_poolKubeProxyFilesEtcKubernetesManifestsKubeProxyManifestTemplate, map[string]*bintree{}},
							}},
						}},
					}},
					"var": &bintree{nil, map[string]*bintree{
						"lib": &bintree{nil, map[string]*bintree{
							"kube-proxy": &bintree{nil, map[string]*bintree{
								"kubeconfig.template": &bintree{nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplate, map[string]*bintree{}},
								"kubeconfig.template.meta": &bintree{nodeup_kubernetes_poolKubeProxyFilesVarLibKubeProxyKubeconfigTemplateMeta, map[string]*bintree{}},
							}},
						}},
						"log": &bintree{nil, map[string]*bintree{
							"kube-proxy.log": &bintree{nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLog, map[string]*bintree{}},
							"kube-proxy.log.meta": &bintree{nodeup_kubernetes_poolKubeProxyFilesVarLogKubeProxyLogMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
		}},
		"_protokube": &bintree{nil, map[string]*bintree{
			"files": &bintree{nil, map[string]*bintree{
				"etc": &bintree{nil, map[string]*bintree{
					"sysconfig": &bintree{nil, map[string]*bintree{
						"protokube.template": &bintree{nodeup_protokubeFilesEtcSysconfigProtokubeTemplate, map[string]*bintree{}},
					}},
				}},
			}},
			"services": &bintree{nil, map[string]*bintree{
				"protokube.service.template": &bintree{nodeup_protokubeServicesProtokubeServiceTemplate, map[string]*bintree{}},
			}},
		}},
		"docker": &bintree{nil, map[string]*bintree{
			"_gce": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"sysctl.d": &bintree{nil, map[string]*bintree{
							"99-ip_forward.conf": &bintree{nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConf, map[string]*bintree{}},
							"99-ip_forward.conf.meta": &bintree{nodeupDocker_gceFilesEtcSysctlD99Ip_forwardConfMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"_systemd": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"etc": &bintree{nil, map[string]*bintree{
						"sysconfig": &bintree{nil, map[string]*bintree{
							"docker.template": &bintree{nodeupDocker_systemdFilesEtcSysconfigDockerTemplate, map[string]*bintree{}},
						}},
					}},
					"opt": &bintree{nil, map[string]*bintree{
						"kubernetes": &bintree{nil, map[string]*bintree{
							"helpers": &bintree{nil, map[string]*bintree{
								"docker-healthcheck": &bintree{nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheck, map[string]*bintree{}},
								"docker-healthcheck.meta": &bintree{nodeupDocker_systemdFilesOptKubernetesHelpersDockerHealthcheckMeta, map[string]*bintree{}},
								"docker-prestart": &bintree{nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestart, map[string]*bintree{}},
								"docker-prestart.meta": &bintree{nodeupDocker_systemdFilesOptKubernetesHelpersDockerPrestartMeta, map[string]*bintree{}},
							}},
						}},
					}},
				}},
				"services": &bintree{nil, map[string]*bintree{
					"docker-healthcheck.service": &bintree{nodeupDocker_systemdServicesDockerHealthcheckService, map[string]*bintree{}},
					"docker-healthcheck.service.meta": &bintree{nodeupDocker_systemdServicesDockerHealthcheckServiceMeta, map[string]*bintree{}},
					"docker-healthcheck.timer": &bintree{nodeupDocker_systemdServicesDockerHealthcheckTimer, map[string]*bintree{}},
					"docker.service": &bintree{nodeupDocker_systemdServicesDockerService, map[string]*bintree{}},
				}},
			}},
			"files": &bintree{nil, map[string]*bintree{
				"usr": &bintree{nil, map[string]*bintree{
					"share": &bintree{nil, map[string]*bintree{
						"doc": &bintree{nil, map[string]*bintree{
							"docker": &bintree{nil, map[string]*bintree{
								"apache.txt": &bintree{nodeupDockerFilesUsrShareDocDockerApacheTxt, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
			"packages": &bintree{nil, map[string]*bintree{
				"_jessie": &bintree{nil, map[string]*bintree{
					"docker-engine": &bintree{nodeupDockerPackages_jessieDockerEngine, map[string]*bintree{}},
				}},
				"_xenial": &bintree{nil, map[string]*bintree{
					"docker-engine": &bintree{nodeupDockerPackages_xenialDockerEngine, map[string]*bintree{}},
				}},
				"bridge-utils": &bintree{nodeupDockerPackagesBridgeUtils, map[string]*bintree{}},
				"libapparmor1": &bintree{nodeupDockerPackagesLibapparmor1, map[string]*bintree{}},
				"libltdl7": &bintree{nodeupDockerPackagesLibltdl7, map[string]*bintree{}},
				"perl": &bintree{nodeupDockerPackagesPerl, map[string]*bintree{}},
			}},
		}},
		"kube-client-tools": &bintree{nil, map[string]*bintree{
			"files": &bintree{nil, map[string]*bintree{
				"usr": &bintree{nil, map[string]*bintree{
					"local": &bintree{nil, map[string]*bintree{
						"bin": &bintree{nil, map[string]*bintree{
							"kubectl.asset": &bintree{nodeupKubeClientToolsFilesUsrLocalBinKubectlAsset, map[string]*bintree{}},
							"kubectl.asset.meta": &bintree{nodeupKubeClientToolsFilesUsrLocalBinKubectlAssetMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
		}},
		"kubelet": &bintree{nil, map[string]*bintree{
			"files": &bintree{nil, map[string]*bintree{
				"etc": &bintree{nil, map[string]*bintree{
					"sysconfig": &bintree{nil, map[string]*bintree{
						"kubelet.template": &bintree{nodeupKubeletFilesEtcSysconfigKubeletTemplate, map[string]*bintree{}},
					}},
				}},
				"usr": &bintree{nil, map[string]*bintree{
					"local": &bintree{nil, map[string]*bintree{
						"bin": &bintree{nil, map[string]*bintree{
							"kubelet.asset": &bintree{nodeupKubeletFilesUsrLocalBinKubeletAsset, map[string]*bintree{}},
							"kubelet.asset.meta": &bintree{nodeupKubeletFilesUsrLocalBinKubeletAssetMeta, map[string]*bintree{}},
						}},
					}},
				}},
				"var": &bintree{nil, map[string]*bintree{
					"lib": &bintree{nil, map[string]*bintree{
						"kubelet": &bintree{nil, map[string]*bintree{
							"kubeconfig.template": &bintree{nodeupKubeletFilesVarLibKubeletKubeconfigTemplate, map[string]*bintree{}},
							"kubeconfig.template.meta": &bintree{nodeupKubeletFilesVarLibKubeletKubeconfigTemplateMeta, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"services": &bintree{nil, map[string]*bintree{
				"kubelet.service": &bintree{nodeupKubeletServicesKubeletService, map[string]*bintree{}},
			}},
		}},
		"logrotate": &bintree{nil, map[string]*bintree{
			"files": &bintree{nil, map[string]*bintree{
				"etc": &bintree{nil, map[string]*bintree{
					"cron.hourly": &bintree{nil, map[string]*bintree{
						"logrotate": &bintree{nodeupLogrotateFilesEtcCronHourlyLogrotate, map[string]*bintree{}},
						"logrotate.meta": &bintree{nodeupLogrotateFilesEtcCronHourlyLogrotateMeta, map[string]*bintree{}},
					}},
					"logrotate.d": &bintree{nil, map[string]*bintree{
						"docker": &bintree{nodeupLogrotateFilesEtcLogrotateDDocker, map[string]*bintree{}},
						"docker-containers": &bintree{nodeupLogrotateFilesEtcLogrotateDDockerContainers, map[string]*bintree{}},
						"kube-addons": &bintree{nodeupLogrotateFilesEtcLogrotateDKubeAddons, map[string]*bintree{}},
						"kube-apiserver": &bintree{nodeupLogrotateFilesEtcLogrotateDKubeApiserver, map[string]*bintree{}},
						"kube-controller-manager": &bintree{nodeupLogrotateFilesEtcLogrotateDKubeControllerManager, map[string]*bintree{}},
						"kube-proxy": &bintree{nodeupLogrotateFilesEtcLogrotateDKubeProxy, map[string]*bintree{}},
						"kube-scheduler": &bintree{nodeupLogrotateFilesEtcLogrotateDKubeScheduler, map[string]*bintree{}},
						"kubelet": &bintree{nodeupLogrotateFilesEtcLogrotateDKubelet, map[string]*bintree{}},
					}},
				}},
			}},
			"packages": &bintree{nil, map[string]*bintree{
				"logrotate": &bintree{nodeupLogrotatePackagesLogrotate, map[string]*bintree{}},
			}},
		}},
		"networking": &bintree{nil, map[string]*bintree{
			"_cni_bridge": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"opt": &bintree{nil, map[string]*bintree{
						"cni": &bintree{nil, map[string]*bintree{
							"bin": &bintree{nil, map[string]*bintree{
								"bridge.asset": &bintree{nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAsset, map[string]*bintree{}},
								"bridge.asset.meta": &bintree{nodeupNetworking_cni_bridgeFilesOptCniBinBridgeAssetMeta, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
			"_cni_host_local": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"opt": &bintree{nil, map[string]*bintree{
						"cni": &bintree{nil, map[string]*bintree{
							"bin": &bintree{nil, map[string]*bintree{
								"host-local.asset": &bintree{nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAsset, map[string]*bintree{}},
								"host-local.asset.meta": &bintree{nodeupNetworking_cni_host_localFilesOptCniBinHostLocalAssetMeta, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
			"_cni_loopback": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"opt": &bintree{nil, map[string]*bintree{
						"cni": &bintree{nil, map[string]*bintree{
							"bin": &bintree{nil, map[string]*bintree{
								"loopback.asset": &bintree{nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAsset, map[string]*bintree{}},
								"loopback.asset.meta": &bintree{nodeupNetworking_cni_loopbackFilesOptCniBinLoopbackAssetMeta, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
			"_cni_ptp": &bintree{nil, map[string]*bintree{
				"files": &bintree{nil, map[string]*bintree{
					"opt": &bintree{nil, map[string]*bintree{
						"cni": &bintree{nil, map[string]*bintree{
							"bin": &bintree{nil, map[string]*bintree{
								"ptp.asset": &bintree{nodeupNetworking_cni_ptpFilesOptCniBinPtpAsset, map[string]*bintree{}},
								"ptp.asset.meta": &bintree{nodeupNetworking_cni_ptpFilesOptCniBinPtpAssetMeta, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
		}},
		"ntp": &bintree{nil, map[string]*bintree{
			"_aws": &bintree{nil, map[string]*bintree{
				"packages": &bintree{nil, map[string]*bintree{
					"ntp": &bintree{nodeupNtp_awsPackagesNtp, map[string]*bintree{}},
				}},
				"services": &bintree{nil, map[string]*bintree{
					"ntp": &bintree{nodeupNtp_awsServicesNtp, map[string]*bintree{}},
				}},
			}},
		}},
		"top": &bintree{nil, map[string]*bintree{
			"_debian_family": &bintree{nil, map[string]*bintree{
				"packages": &bintree{nil, map[string]*bintree{
					"apt-transport-https": &bintree{nodeupTop_debian_familyPackagesAptTransportHttps, map[string]*bintree{}},
					"nfs-common": &bintree{nodeupTop_debian_familyPackagesNfsCommon, map[string]*bintree{}},
					"python-apt": &bintree{nodeupTop_debian_familyPackagesPythonApt, map[string]*bintree{}},
					"socat": &bintree{nodeupTop_debian_familyPackagesSocat, map[string]*bintree{}},
				}},
			}},
			"_redhat_family": &bintree{nil, map[string]*bintree{
				"packages": &bintree{nil, map[string]*bintree{
					"git": &bintree{nodeupTop_redhat_familyPackagesGit, map[string]*bintree{}},
					"python": &bintree{nodeupTop_redhat_familyPackagesPython, map[string]*bintree{}},
				}},
			}},
			"_ubuntu": &bintree{nil, map[string]*bintree{
				"packages": &bintree{nil, map[string]*bintree{
					"git": &bintree{nodeupTop_ubuntuPackagesGit, map[string]*bintree{}},
					"netcat-traditional": &bintree{nodeupTop_ubuntuPackagesNetcatTraditional, map[string]*bintree{}},
				}},
			}},
			"files": &bintree{nil, map[string]*bintree{
				"usr": &bintree{nil, map[string]*bintree{
					"local": &bintree{nil, map[string]*bintree{
						"share": &bintree{nil, map[string]*bintree{
							"doc": &bintree{nil, map[string]*bintree{
								"kubernetes": &bintree{nil, map[string]*bintree{
									"LICENSES": &bintree{nodeupTopFilesUsrLocalShareDocKubernetesLicenses, map[string]*bintree{}},
								}},
							}},
						}},
					}},
				}},
			}},
			"packages": &bintree{nil, map[string]*bintree{
				"curl": &bintree{nodeupTopPackagesCurl, map[string]*bintree{}},
			}},
		}},
	}},
	"proto": &bintree{nil, map[string]*bintree{
		"_aws": &bintree{nil, map[string]*bintree{
			"master_volumes.yaml": &bintree{proto_awsMaster_volumesYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

