#!/usr/bin/env python

# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
from os import path
import subprocess
import sys

from lib.kubernetes import devtools

gopath=os.environ['GOPATH']

repo_root = path.abspath(path.join(path.dirname(path.abspath(__file__)), '..'))
goimports = path.join(repo_root, '_output', 'bin', 'goimports')

packages = devtools.read_packages_file(repo_root)

paths = []

for package in packages:
  if package == 'k8s.io/kops':
    continue
  paths.append(package)

# Install goimports from vendor
print('installing goimports')

process = subprocess.Popen(['go', 'build', '-o', goimports, 'golang.org/x/tools/cmd/goimports'], stdout=subprocess.PIPE, cwd=path.join(repo_root, 'hack'))
stdout, stderr = process.communicate()
if process.returncode != 0:
  print("FAIL: installing goimports failed")
  print(stderr)
  sys.exit(1)

print("packages %s" % paths)

env = os.environ

process = subprocess.Popen(
  [goimports, '-l'] + paths,
  stdout=subprocess.PIPE,
  stderr=subprocess.PIPE,
  cwd=path.join(gopath, 'src'),
  env=env
)
stdout, stderr = process.communicate()

if stdout.strip().decode('ascii') != "" or stderr.strip().decode('ascii') != "":
  print("FAIL: 'goimports -w' needs to be run on the following files: ")
  print("STDOUT:\n" + stdout.decode('ascii'))
  print("STDERR:\n" + stderr.decode('ascii'))
  print('FAIL: Please run the following command: make goimports')
  sys.exit(1)
