Resources.AWSEC2LaunchTemplatebastionprivateciliumexamplecom.Properties.LaunchTemplateData.UserData: ""
Resources.AWSEC2LaunchTemplatemasterustest1amastersprivateciliumexamplecom.Properties.LaunchTemplateData.UserData: "#!/bin/bash\nset
  -o errexit\nset -o nounset\nset -o pipefail\n\nNODEUP_URL_AMD64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/amd64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-amd64\nNODEUP_HASH_AMD64=585fbda0f0a43184656b4bfc0cc5f0c0b85612faf43b8816acca1f99d422c924\nNODEUP_URL_ARM64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/arm64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-arm64\nNODEUP_HASH_ARM64=7603675379699105a9b9915ff97718ea99b1bbb01a4c184e2f827c8a96e8e865\n\nexport
  AWS_REGION=us-test-1\n\n\n\n\nsysctl -w net.ipv4.tcp_rmem='4096 12582912 16777216'
  || true\n\n\nfunction ensure-install-dir() {\n  INSTALL_DIR=\"/opt/kops\"\n  # On
  ContainerOS, we install under /var/lib/toolbox; /opt is ro and noexec\n  if [[ -d
  /var/lib/toolbox ]]; then\n    INSTALL_DIR=\"/var/lib/toolbox/kops\"\n  fi\n  mkdir
  -p ${INSTALL_DIR}/bin\n  mkdir -p ${INSTALL_DIR}/conf\n  cd ${INSTALL_DIR}\n}\n\n#
  Retry a download until we get it. args: name, sha, urls\ndownload-or-bust() {\n
  \ local -r file=\"$1\"\n  local -r hash=\"$2\"\n  local -r urls=( $(split-commas
  \"$3\") )\n\n  if [[ -f \"${file}\" ]]; then\n\tif ! validate-hash \"${file}\" \"${hash}\";
  then\n\t  rm -f \"${file}\"\n\telse\n\t  return\n\tfi\n  fi\n\n  while true; do\n
  \   for url in \"${urls[@]}\"; do\n      commands=(\n        \"curl -f --ipv4 --compressed
  -Lo \"${file}\" --connect-timeout 20 --retry 6 --retry-delay 10\"\n        \"wget
  --inet4-only --compression=auto -O \"${file}\" --connect-timeout=20 --tries=6 --wait=10\"\n
  \       \"curl -f --ipv4 -Lo \"${file}\" --connect-timeout 20 --retry 6 --retry-delay
  10\"\n        \"wget --inet4-only -O \"${file}\" --connect-timeout=20 --tries=6
  --wait=10\"\n      )\n      for cmd in \"${commands[@]}\"; do\n        echo \"Attempting
  download with: ${cmd} {url}\"\n        if ! (${cmd} \"${url}\"); then\n          echo
  \"== Download failed with ${cmd} ==\"\n          continue\n        fi\n        if
  ! validate-hash \"${file}\" \"${hash}\"; then\n          echo \"== Hash validation
  of ${url} failed. Retrying. ==\"\n          rm -f \"${file}\"\n        else\n          echo
  \"== Downloaded ${url} (SHA256 = ${hash}) ==\"\n          return\n        fi\n      done\n
  \   done\n\n    echo \"All downloads failed; sleeping before retrying\"\n    sleep
  60\n  done\n}\n\nvalidate-hash() {\n  local -r file=\"$1\"\n  local -r expected=\"$2\"\n
  \ local actual\n\n  actual=$(sha256sum ${file} | awk '{ print $1 }') || true\n  if
  [[ \"${actual}\" != \"${expected}\" ]]; then\n    echo \"== ${file} corrupted, hash
  ${actual} doesn't match expected ${expected} ==\"\n    return 1\n  fi\n}\n\nfunction
  split-commas() {\n  echo $1 | tr \",\" \"\\n\"\n}\n\nfunction download-release()
  {\n  case \"$(uname -m)\" in\n  x86_64*|i?86_64*|amd64*)\n    NODEUP_URL=\"${NODEUP_URL_AMD64}\"\n
  \   NODEUP_HASH=\"${NODEUP_HASH_AMD64}\"\n    ;;\n  aarch64*|arm64*)\n    NODEUP_URL=\"${NODEUP_URL_ARM64}\"\n
  \   NODEUP_HASH=\"${NODEUP_HASH_ARM64}\"\n    ;;\n  *)\n    echo \"Unsupported host
  arch: $(uname -m)\" >&2\n    exit 1\n    ;;\n  esac\n\n  cd ${INSTALL_DIR}/bin\n
  \ download-or-bust nodeup \"${NODEUP_HASH}\" \"${NODEUP_URL}\"\n\n  chmod +x nodeup\n\n
  \ echo \"Running nodeup\"\n  # We can't run in the foreground because of https://github.com/docker/docker/issues/23793\n
  \ ( cd ${INSTALL_DIR}/bin; ./nodeup --install-systemd-unit --conf=${INSTALL_DIR}/conf/kube_env.yaml
  --v=8  )\n}\n\n####################################################################################\n\n/bin/systemd-machine-id-setup
  || echo \"failed to set up ensure machine-id configured\"\n\necho \"== nodeup node
  config starting ==\"\nensure-install-dir\n\ncat > conf/cluster_spec.yaml << '__EOF_CLUSTER_SPEC'\ncloudConfig:\n
  \ manageStorageClasses: true\ncontainerRuntime: containerd\ncontainerd:\n  configOverride:
  |\n    version = 2\n\n    [plugins]\n\n      [plugins.\"io.containerd.grpc.v1.cri\"]\n\n
  \       [plugins.\"io.containerd.grpc.v1.cri\".containerd]\n\n          [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes]\n\n
  \           [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n              runtime_type
  = \"io.containerd.runc.v2\"\n\n              [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n
  \               SystemdCgroup = true\n  logLevel: info\n  version: 1.4.4\ndocker:\n
  \ skipInstall: true\nencryptionConfig: null\netcdClusters:\n  events:\n    version:
  3.4.13\n  main:\n    version: 3.4.13\nkubeAPIServer:\n  allowPrivileged: true\n
  \ anonymousAuth: false\n  apiAudiences:\n  - kubernetes.svc.default\n  apiServerCount:
  1\n  authorizationMode: AlwaysAllow\n  bindAddress: 0.0.0.0\n  cloudProvider: aws\n
  \ enableAdmissionPlugins:\n  - NamespaceLifecycle\n  - LimitRanger\n  - ServiceAccount\n
  \ - PersistentVolumeLabel\n  - DefaultStorageClass\n  - DefaultTolerationSeconds\n
  \ - MutatingAdmissionWebhook\n  - ValidatingAdmissionWebhook\n  - NodeRestriction\n
  \ - ResourceQuota\n  etcdServers:\n  - http://127.0.0.1:4001\n  etcdServersOverrides:\n
  \ - /events#http://127.0.0.1:4002\n  image: k8s.gcr.io/kube-apiserver:v1.21.0\n
  \ kubeletPreferredAddressTypes:\n  - InternalIP\n  - Hostname\n  - ExternalIP\n
  \ logLevel: 2\n  requestheaderAllowedNames:\n  - aggregator\n  requestheaderExtraHeaderPrefixes:\n
  \ - X-Remote-Extra-\n  requestheaderGroupHeaders:\n  - X-Remote-Group\n  requestheaderUsernameHeaders:\n
  \ - X-Remote-User\n  securePort: 443\n  serviceAccountIssuer: https://api.internal.privatecilium.example.com\n
  \ serviceAccountJWKSURI: https://api.internal.privatecilium.example.com/openid/v1/jwks\n
  \ serviceClusterIPRange: 100.64.0.0/13\n  storageBackend: etcd3\nkubeControllerManager:\n
  \ allocateNodeCIDRs: true\n  attachDetachReconcileSyncPeriod: 1m0s\n  cloudProvider:
  aws\n  clusterCIDR: 100.96.0.0/11\n  clusterName: privatecilium.example.com\n  configureCloudRoutes:
  false\n  image: k8s.gcr.io/kube-controller-manager:v1.21.0\n  leaderElection:\n
  \   leaderElect: true\n  logLevel: 2\n  useServiceAccountCredentials: true\nkubeProxy:\n
  \ clusterCIDR: 100.96.0.0/11\n  cpuRequest: 100m\n  hostnameOverride: '@aws'\n  image:
  k8s.gcr.io/kube-proxy:v1.21.0\n  logLevel: 2\nkubeScheduler:\n  image: k8s.gcr.io/kube-scheduler:v1.21.0\n
  \ leaderElection:\n    leaderElect: true\n  logLevel: 2\nkubelet:\n  anonymousAuth:
  false\n  cgroupDriver: systemd\n  cgroupRoot: /\n  cloudProvider: aws\n  clusterDNS:
  100.64.0.10\n  clusterDomain: cluster.local\n  enableDebuggingHandlers: true\n  evictionHard:
  memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%\n
  \ hostnameOverride: '@aws'\n  kubeconfigPath: /var/lib/kubelet/kubeconfig\n  logLevel:
  2\n  networkPluginName: cni\n  nonMasqueradeCIDR: 100.64.0.0/10\n  podManifestPath:
  /etc/kubernetes/manifests\nmasterKubelet:\n  anonymousAuth: false\n  cgroupDriver:
  systemd\n  cgroupRoot: /\n  cloudProvider: aws\n  clusterDNS: 100.64.0.10\n  clusterDomain:
  cluster.local\n  enableDebuggingHandlers: true\n  evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%\n
  \ hostnameOverride: '@aws'\n  kubeconfigPath: /var/lib/kubelet/kubeconfig\n  logLevel:
  2\n  networkPluginName: cni\n  nonMasqueradeCIDR: 100.64.0.0/10\n  podManifestPath:
  /etc/kubernetes/manifests\n  registerSchedulable: false\n\n__EOF_CLUSTER_SPEC\n\ncat
  > conf/ig_spec.yaml << '__EOF_IG_SPEC'\n{}\n\n__EOF_IG_SPEC\n\ncat > conf/kube_env.yaml
  << '__EOF_KUBE_ENV'\nAssets:\n  amd64:\n  - 681c81b7934ae2bf38b9f12d891683972d1fbbf6d7d97e50940a47b139d41b35@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet\n
  \ - 9f74f2fa7ee32ad07e17211725992248470310ca1988214518806b39b1dad9f0@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl\n
  \ - 977824932d5667c7a37aa6a3cbba40100a6873e7bd97e83e8be837e3e7afd0a8@https://storage.googleapis.com/k8s-artifacts-cni/release/v0.8.7/cni-plugins-linux-amd64-v0.8.7.tgz\n
  \ - 96641849cb78a0a119223a427dfdc1ade88412ef791a14193212c8c8e29d447b@https://github.com/containerd/containerd/releases/download/v1.4.4/cri-containerd-cni-1.4.4-linux-amd64.tar.gz\n
  \ - f90ed6dcef534e6d1ae17907dc7eb40614b8945ad4af7f0e98d2be7cde8165c6@https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/amd64/protokube,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/protokube-linux-amd64\n
  \ - 9992e7eb2a2e93f799e5a9e98eb718637433524bc65f630357201a79f49b13d0@https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/amd64/channels,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/channels-linux-amd64\n
  \ arm64:\n  - 17832b192be5ea314714f7e16efd5e5f65347974bbbf41def6b02f68931380c4@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/arm64/kubelet\n
  \ - a4dd7100f547a40d3e2f83850d0bab75c6ea5eb553f0a80adcf73155bef1fd0d@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/arm64/kubectl\n
  \ - ae13d7b5c05bd180ea9b5b68f44bdaa7bfb41034a2ef1d68fd8e1259797d642f@https://storage.googleapis.com/k8s-artifacts-cni/release/v0.8.7/cni-plugins-linux-arm64-v0.8.7.tgz\n
  \ - 998b3b6669335f1a1d8c475fb7c211ed1e41c2ff37275939e2523666ccb7d910@https://download.docker.com/linux/static/stable/aarch64/docker-20.10.6.tgz\n
  \ - 2f599c3d54f4c4bdbcc95aaf0c7b513a845d8f9503ec5b34c9f86aa1bc34fc0c@https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/arm64/protokube,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/protokube-linux-arm64\n
  \ - 9d842e3636a95de2315cdea2be7a282355aac0658ef0b86d5dc2449066538f13@https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/arm64/channels,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/channels-linux-arm64\nClusterName:
  privatecilium.example.com\nConfigBase: memfs://clusters.example.com/privatecilium.example.com\nInstanceGroupName:
  master-us-test-1a\nInstanceGroupRole: Master\nKubeletConfig:\n  anonymousAuth: false\n
  \ cgroupDriver: systemd\n  cgroupRoot: /\n  cloudProvider: aws\n  clusterDNS: 100.64.0.10\n
  \ clusterDomain: cluster.local\n  enableDebuggingHandlers: true\n  evictionHard:
  memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%\n
  \ hostnameOverride: '@aws'\n  kubeconfigPath: /var/lib/kubelet/kubeconfig\n  logLevel:
  2\n  networkPluginName: cni\n  nodeLabels:\n    kops.k8s.io/kops-controller-pki:
  \"\"\n    kubernetes.io/role: master\n    node-role.kubernetes.io/control-plane:
  \"\"\n    node-role.kubernetes.io/master: \"\"\n    node.kubernetes.io/exclude-from-external-load-balancers:
  \"\"\n  nonMasqueradeCIDR: 100.64.0.0/10\n  podManifestPath: /etc/kubernetes/manifests\n
  \ registerSchedulable: false\nchannels:\n- memfs://clusters.example.com/privatecilium.example.com/addons/bootstrap-channel.yaml\netcdManifests:\n-
  memfs://clusters.example.com/privatecilium.example.com/manifests/etcd/main.yaml\n-
  memfs://clusters.example.com/privatecilium.example.com/manifests/etcd/events.yaml\nstaticManifests:\n-
  key: kube-apiserver-healthcheck\n  path: manifests/static/kube-apiserver-healthcheck.yaml\n\n__EOF_KUBE_ENV\n\ndownload-release\necho
  \"== nodeup node config done ==\"\n"
Resources.AWSEC2LaunchTemplatenodesprivateciliumexamplecom.Properties.LaunchTemplateData.UserData: "#!/bin/bash\nset
  -o errexit\nset -o nounset\nset -o pipefail\n\nNODEUP_URL_AMD64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/amd64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-amd64\nNODEUP_HASH_AMD64=585fbda0f0a43184656b4bfc0cc5f0c0b85612faf43b8816acca1f99d422c924\nNODEUP_URL_ARM64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/arm64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-arm64\nNODEUP_HASH_ARM64=7603675379699105a9b9915ff97718ea99b1bbb01a4c184e2f827c8a96e8e865\n\nexport
  AWS_REGION=us-test-1\n\n\n\n\nsysctl -w net.ipv4.tcp_rmem='4096 12582912 16777216'
  || true\n\n\nfunction ensure-install-dir() {\n  INSTALL_DIR=\"/opt/kops\"\n  # On
  ContainerOS, we install under /var/lib/toolbox; /opt is ro and noexec\n  if [[ -d
  /var/lib/toolbox ]]; then\n    INSTALL_DIR=\"/var/lib/toolbox/kops\"\n  fi\n  mkdir
  -p ${INSTALL_DIR}/bin\n  mkdir -p ${INSTALL_DIR}/conf\n  cd ${INSTALL_DIR}\n}\n\n#
  Retry a download until we get it. args: name, sha, urls\ndownload-or-bust() {\n
  \ local -r file=\"$1\"\n  local -r hash=\"$2\"\n  local -r urls=( $(split-commas
  \"$3\") )\n\n  if [[ -f \"${file}\" ]]; then\n\tif ! validate-hash \"${file}\" \"${hash}\";
  then\n\t  rm -f \"${file}\"\n\telse\n\t  return\n\tfi\n  fi\n\n  while true; do\n
  \   for url in \"${urls[@]}\"; do\n      commands=(\n        \"curl -f --ipv4 --compressed
  -Lo \"${file}\" --connect-timeout 20 --retry 6 --retry-delay 10\"\n        \"wget
  --inet4-only --compression=auto -O \"${file}\" --connect-timeout=20 --tries=6 --wait=10\"\n
  \       \"curl -f --ipv4 -Lo \"${file}\" --connect-timeout 20 --retry 6 --retry-delay
  10\"\n        \"wget --inet4-only -O \"${file}\" --connect-timeout=20 --tries=6
  --wait=10\"\n      )\n      for cmd in \"${commands[@]}\"; do\n        echo \"Attempting
  download with: ${cmd} {url}\"\n        if ! (${cmd} \"${url}\"); then\n          echo
  \"== Download failed with ${cmd} ==\"\n          continue\n        fi\n        if
  ! validate-hash \"${file}\" \"${hash}\"; then\n          echo \"== Hash validation
  of ${url} failed. Retrying. ==\"\n          rm -f \"${file}\"\n        else\n          echo
  \"== Downloaded ${url} (SHA256 = ${hash}) ==\"\n          return\n        fi\n      done\n
  \   done\n\n    echo \"All downloads failed; sleeping before retrying\"\n    sleep
  60\n  done\n}\n\nvalidate-hash() {\n  local -r file=\"$1\"\n  local -r expected=\"$2\"\n
  \ local actual\n\n  actual=$(sha256sum ${file} | awk '{ print $1 }') || true\n  if
  [[ \"${actual}\" != \"${expected}\" ]]; then\n    echo \"== ${file} corrupted, hash
  ${actual} doesn't match expected ${expected} ==\"\n    return 1\n  fi\n}\n\nfunction
  split-commas() {\n  echo $1 | tr \",\" \"\\n\"\n}\n\nfunction download-release()
  {\n  case \"$(uname -m)\" in\n  x86_64*|i?86_64*|amd64*)\n    NODEUP_URL=\"${NODEUP_URL_AMD64}\"\n
  \   NODEUP_HASH=\"${NODEUP_HASH_AMD64}\"\n    ;;\n  aarch64*|arm64*)\n    NODEUP_URL=\"${NODEUP_URL_ARM64}\"\n
  \   NODEUP_HASH=\"${NODEUP_HASH_ARM64}\"\n    ;;\n  *)\n    echo \"Unsupported host
  arch: $(uname -m)\" >&2\n    exit 1\n    ;;\n  esac\n\n  cd ${INSTALL_DIR}/bin\n
  \ download-or-bust nodeup \"${NODEUP_HASH}\" \"${NODEUP_URL}\"\n\n  chmod +x nodeup\n\n
  \ echo \"Running nodeup\"\n  # We can't run in the foreground because of https://github.com/docker/docker/issues/23793\n
  \ ( cd ${INSTALL_DIR}/bin; ./nodeup --install-systemd-unit --conf=${INSTALL_DIR}/conf/kube_env.yaml
  --v=8  )\n}\n\n####################################################################################\n\n/bin/systemd-machine-id-setup
  || echo \"failed to set up ensure machine-id configured\"\n\necho \"== nodeup node
  config starting ==\"\nensure-install-dir\n\ncat > conf/cluster_spec.yaml << '__EOF_CLUSTER_SPEC'\ncloudConfig:\n
  \ manageStorageClasses: true\ncontainerRuntime: containerd\ncontainerd:\n  configOverride:
  |\n    version = 2\n\n    [plugins]\n\n      [plugins.\"io.containerd.grpc.v1.cri\"]\n\n
  \       [plugins.\"io.containerd.grpc.v1.cri\".containerd]\n\n          [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes]\n\n
  \           [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n              runtime_type
  = \"io.containerd.runc.v2\"\n\n              [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n
  \               SystemdCgroup = true\n  logLevel: info\n  version: 1.4.4\ndocker:\n
  \ skipInstall: true\nkubeProxy:\n  clusterCIDR: 100.96.0.0/11\n  cpuRequest: 100m\n
  \ hostnameOverride: '@aws'\n  image: k8s.gcr.io/kube-proxy:v1.21.0\n  logLevel:
  2\nkubelet:\n  anonymousAuth: false\n  cgroupDriver: systemd\n  cgroupRoot: /\n
  \ cloudProvider: aws\n  clusterDNS: 100.64.0.10\n  clusterDomain: cluster.local\n
  \ enableDebuggingHandlers: true\n  evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%\n
  \ hostnameOverride: '@aws'\n  kubeconfigPath: /var/lib/kubelet/kubeconfig\n  logLevel:
  2\n  networkPluginName: cni\n  nonMasqueradeCIDR: 100.64.0.0/10\n  podManifestPath:
  /etc/kubernetes/manifests\n\n__EOF_CLUSTER_SPEC\n\ncat > conf/ig_spec.yaml << '__EOF_IG_SPEC'\n{}\n\n__EOF_IG_SPEC\n\ncat
  > conf/kube_env.yaml << '__EOF_KUBE_ENV'\nAssets:\n  amd64:\n  - 681c81b7934ae2bf38b9f12d891683972d1fbbf6d7d97e50940a47b139d41b35@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet\n
  \ - 9f74f2fa7ee32ad07e17211725992248470310ca1988214518806b39b1dad9f0@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl\n
  \ - 977824932d5667c7a37aa6a3cbba40100a6873e7bd97e83e8be837e3e7afd0a8@https://storage.googleapis.com/k8s-artifacts-cni/release/v0.8.7/cni-plugins-linux-amd64-v0.8.7.tgz\n
  \ - 96641849cb78a0a119223a427dfdc1ade88412ef791a14193212c8c8e29d447b@https://github.com/containerd/containerd/releases/download/v1.4.4/cri-containerd-cni-1.4.4-linux-amd64.tar.gz\n
  \ arm64:\n  - 17832b192be5ea314714f7e16efd5e5f65347974bbbf41def6b02f68931380c4@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/arm64/kubelet\n
  \ - a4dd7100f547a40d3e2f83850d0bab75c6ea5eb553f0a80adcf73155bef1fd0d@https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/arm64/kubectl\n
  \ - ae13d7b5c05bd180ea9b5b68f44bdaa7bfb41034a2ef1d68fd8e1259797d642f@https://storage.googleapis.com/k8s-artifacts-cni/release/v0.8.7/cni-plugins-linux-arm64-v0.8.7.tgz\n
  \ - 998b3b6669335f1a1d8c475fb7c211ed1e41c2ff37275939e2523666ccb7d910@https://download.docker.com/linux/static/stable/aarch64/docker-20.10.6.tgz\nClusterName:
  privatecilium.example.com\nConfigBase: memfs://clusters.example.com/privatecilium.example.com\nInstanceGroupName:
  nodes\nInstanceGroupRole: Node\nKubeletConfig:\n  anonymousAuth: false\n  cgroupDriver:
  systemd\n  cgroupRoot: /\n  cloudProvider: aws\n  clusterDNS: 100.64.0.10\n  clusterDomain:
  cluster.local\n  enableDebuggingHandlers: true\n  evictionHard: memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%\n
  \ hostnameOverride: '@aws'\n  kubeconfigPath: /var/lib/kubelet/kubeconfig\n  logLevel:
  2\n  networkPluginName: cni\n  nodeLabels:\n    kubernetes.io/role: node\n    node-role.kubernetes.io/node:
  \"\"\n  nonMasqueradeCIDR: 100.64.0.0/10\n  podManifestPath: /etc/kubernetes/manifests\nchannels:\n-
  memfs://clusters.example.com/privatecilium.example.com/addons/bootstrap-channel.yaml\n\n__EOF_KUBE_ENV\n\ndownload-release\necho
  \"== nodeup node config done ==\"\n"
