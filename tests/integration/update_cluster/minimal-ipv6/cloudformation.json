{
  "Resources": {
    "AWSAutoScalingAutoScalingGroupmasterustest1amastersminimalipv6examplecom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-us-test-1a.masters.minimal-ipv6.example.com",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "AWSEC2LaunchTemplatemasterustest1amastersminimalipv6examplecom"
          },
          "Version": {
            "Fn::GetAtt": [
              "AWSEC2LaunchTemplatemasterustest1amastersminimalipv6examplecom",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetustest1aminimalipv6examplecom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-us-test-1a.masters.minimal-ipv6.example.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/kops-controller-pki",
            "Value": "",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
            "Value": "master",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/control-plane",
            "Value": "",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/master",
            "Value": "",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/node.kubernetes.io/exclude-from-external-load-balancers",
            "Value": "",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          },
          {
            "Key": "kops.k8s.io/instancegroup",
            "Value": "master-us-test-1a",
            "PropagateAtLaunch": true
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "AWSElasticLoadBalancingV2TargetGrouptcpminimalipv6examplebne5ih"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupnodesminimalipv6examplecom": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "nodes.minimal-ipv6.example.com",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "AWSEC2LaunchTemplatenodesminimalipv6examplecom"
          },
          "Version": {
            "Fn::GetAtt": [
              "AWSEC2LaunchTemplatenodesminimalipv6examplecom",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "2",
        "MinSize": "2",
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetustest1aminimalipv6examplecom"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "nodes.minimal-ipv6.example.com",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
            "Value": "node",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/node",
            "Value": "",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          },
          {
            "Key": "kops.k8s.io/instancegroup",
            "Value": "nodes",
            "PropagateAtLaunch": true
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSEC2DHCPOptionsminimalipv6examplecom": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-test-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2InternetGatewayminimalipv6examplecom": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2LaunchTemplatemasterustest1amastersminimalipv6examplecom": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateName": "master-us-test-1a.masters.minimal-ipv6.example.com",
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "VolumeType": "gp3",
                "VolumeSize": 64,
                "Iops": 3000,
                "Throughput": 125,
                "DeleteOnTermination": true,
                "Encrypted": true
              }
            },
            {
              "DeviceName": "/dev/sdc",
              "VirtualName": "ephemeral0"
            }
          ],
          "IamInstanceProfile": {
            "Name": {
              "Ref": "AWSIAMInstanceProfilemastersminimalipv6examplecom"
            }
          },
          "ImageId": "ami-12345678",
          "InstanceType": "m3.medium",
          "KeyName": "kubernetes.minimal-ipv6.example.com-c4:a6:ed:9a:a8:89:b9:e2:c3:9c:d6:63:eb:9c:71:57",
          "MetadataOptions": {
            "HttpPutResponseHopLimit": 1,
            "HttpTokens": "optional"
          },
          "NetworkInterfaces": [
            {
              "AssociatePublicIpAddress": true,
              "DeleteOnTermination": true,
              "DeviceIndex": 0,
              "Ipv6AddressCount": 1,
              "Groups": [
                {
                  "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
                }
              ]
            }
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "KubernetesCluster",
                  "Value": "minimal-ipv6.example.com"
                },
                {
                  "Key": "Name",
                  "Value": "master-us-test-1a.masters.minimal-ipv6.example.com"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/kops-controller-pki",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
                  "Value": "master"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/control-plane",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/master",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node.kubernetes.io/exclude-from-external-load-balancers",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/role/master",
                  "Value": "1"
                },
                {
                  "Key": "kops.k8s.io/instancegroup",
                  "Value": "master-us-test-1a"
                },
                {
                  "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
                  "Value": "owned"
                }
              ]
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "KubernetesCluster",
                  "Value": "minimal-ipv6.example.com"
                },
                {
                  "Key": "Name",
                  "Value": "master-us-test-1a.masters.minimal-ipv6.example.com"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/kops-controller-pki",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
                  "Value": "master"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/control-plane",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/master",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node.kubernetes.io/exclude-from-external-load-balancers",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/role/master",
                  "Value": "1"
                },
                {
                  "Key": "kops.k8s.io/instancegroup",
                  "Value": "master-us-test-1a"
                },
                {
                  "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
                  "Value": "owned"
                }
              ]
            }
          ],
          "UserData": "extracted"
        }
      }
    },
    "AWSEC2LaunchTemplatenodesminimalipv6examplecom": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateName": "nodes.minimal-ipv6.example.com",
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "VolumeType": "gp3",
                "VolumeSize": 128,
                "Iops": 3000,
                "Throughput": 125,
                "DeleteOnTermination": true,
                "Encrypted": true
              }
            }
          ],
          "IamInstanceProfile": {
            "Name": {
              "Ref": "AWSIAMInstanceProfilenodesminimalipv6examplecom"
            }
          },
          "ImageId": "ami-12345678",
          "InstanceType": "t2.medium",
          "KeyName": "kubernetes.minimal-ipv6.example.com-c4:a6:ed:9a:a8:89:b9:e2:c3:9c:d6:63:eb:9c:71:57",
          "MetadataOptions": {
            "HttpPutResponseHopLimit": 1,
            "HttpTokens": "optional"
          },
          "NetworkInterfaces": [
            {
              "AssociatePublicIpAddress": true,
              "DeleteOnTermination": true,
              "DeviceIndex": 0,
              "Ipv6AddressCount": 1,
              "Groups": [
                {
                  "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
                }
              ]
            }
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "KubernetesCluster",
                  "Value": "minimal-ipv6.example.com"
                },
                {
                  "Key": "Name",
                  "Value": "nodes.minimal-ipv6.example.com"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
                  "Value": "node"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/node",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/role/node",
                  "Value": "1"
                },
                {
                  "Key": "kops.k8s.io/instancegroup",
                  "Value": "nodes"
                },
                {
                  "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
                  "Value": "owned"
                }
              ]
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "KubernetesCluster",
                  "Value": "minimal-ipv6.example.com"
                },
                {
                  "Key": "Name",
                  "Value": "nodes.minimal-ipv6.example.com"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/role",
                  "Value": "node"
                },
                {
                  "Key": "k8s.io/cluster-autoscaler/node-template/label/node-role.kubernetes.io/node",
                  "Value": ""
                },
                {
                  "Key": "k8s.io/role/node",
                  "Value": "1"
                },
                {
                  "Key": "kops.k8s.io/instancegroup",
                  "Value": "nodes"
                },
                {
                  "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
                  "Value": "owned"
                }
              ]
            }
          ],
          "UserData": "extracted"
        }
      }
    },
    "AWSEC2Route0": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableminimalipv6examplecom"
        },
        "DestinationIpv6CidrBlock": "::/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewayminimalipv6examplecom"
        }
      }
    },
    "AWSEC2Route00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableminimalipv6examplecom"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewayminimalipv6examplecom"
        }
      }
    },
    "AWSEC2RouteTableminimalipv6examplecom": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "public"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupEgressfrommastersminimalipv6examplecomegressall0to00": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupEgressfrommastersminimalipv6examplecomegressall0to000000": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressfromnodesminimalipv6examplecomegressall0to00": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupEgressfromnodesminimalipv6examplecomegressall0to000000": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom00000ingresstcp22to22mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom00000ingresstcp22to22nodesminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom00000ingresstcp443to443mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom0ingresstcp22to22mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom0ingresstcp22to22nodesminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrom0ingresstcp443to443mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupIngressfrommastersminimalipv6examplecomingressall0to0mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressfrommastersminimalipv6examplecomingressall0to0nodesminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressfromnodesminimalipv6examplecomingressall0to0nodesminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressfromnodesminimalipv6examplecomingresstcp1to2379mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 1,
        "ToPort": 2379,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressfromnodesminimalipv6examplecomingresstcp2382to4000mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 2382,
        "ToPort": 4000,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressfromnodesminimalipv6examplecomingresstcp4003to65535mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 4003,
        "ToPort": 65535,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressfromnodesminimalipv6examplecomingressudp1to65535mastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesminimalipv6examplecom"
        },
        "FromPort": 1,
        "ToPort": 65535,
        "IpProtocol": "udp"
      }
    },
    "AWSEC2SecurityGroupIngresshttpselbtomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "172.20.0.0/16"
      }
    },
    "AWSEC2SecurityGroupIngressicmppmtuapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": 3,
        "ToPort": 4,
        "IpProtocol": "icmp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressicmpv6pmtuapielb0": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersminimalipv6examplecom"
        },
        "FromPort": -1,
        "ToPort": -1,
        "IpProtocol": "icmpv6",
        "CidrIpv6": "::/0"
      }
    },
    "AWSEC2SecurityGroupapielbminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "api-elb.minimal-ipv6.example.com",
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "GroupDescription": "Security group for api ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "api-elb.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupmastersminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "masters.minimal-ipv6.example.com",
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "GroupDescription": "Security group for masters",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "masters.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupnodesminimalipv6examplecom": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "nodes.minimal-ipv6.example.com",
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "GroupDescription": "Security group for nodes",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "nodes.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SubnetRouteTableAssociationustest1aminimalipv6examplecom": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetustest1aminimalipv6examplecom"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableminimalipv6examplecom"
        }
      }
    },
    "AWSEC2Subnetustest1aminimalipv6examplecom": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "CidrBlock": "172.20.32.0/19",
        "Ipv6CidrBlock": "2001:db8:0:111::/64",
        "AvailabilityZone": "us-test-1a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "us-test-1a.minimal-ipv6.example.com"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2VPCCidrBlockAmazonIPv6": {
      "Type": "AWS::EC2::VPCCidrBlock",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "AmazonProvidedIpv6CidrBlock": true
      }
    },
    "AWSEC2VPCDHCPOptionsAssociationminimalipv6examplecom": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "DhcpOptionsId": {
          "Ref": "AWSEC2DHCPOptionsminimalipv6examplecom"
        }
      }
    },
    "AWSEC2VPCGatewayAttachmentminimalipv6examplecom": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "InternetGatewayId": {
          "Ref": "AWSEC2InternetGatewayminimalipv6examplecom"
        }
      }
    },
    "AWSEC2VPCminimalipv6examplecom": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeustest1aetcdeventsminimalipv6examplecom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-test-1a",
        "Size": 20,
        "VolumeType": "gp3",
        "Iops": 3000,
        "Throughput": 125,
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "us-test-1a.etcd-events.minimal-ipv6.example.com"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "us-test-1a/us-test-1a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeustest1aetcdmainminimalipv6examplecom": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-test-1a",
        "Size": 20,
        "VolumeType": "gp3",
        "Iops": 3000,
        "Throughput": 125,
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "us-test-1a.etcd-main.minimal-ipv6.example.com"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "us-test-1a/us-test-1a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingV2Listenerapiminimalipv6examplecom443": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "AWSElasticLoadBalancingV2TargetGrouptcpminimalipv6examplebne5ih"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "AWSElasticLoadBalancingV2LoadBalancerapiminimalipv6examplecom"
        },
        "Port": 443,
        "Protocol": "TCP"
      }
    },
    "AWSElasticLoadBalancingV2LoadBalancerapiminimalipv6examplecom": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "api-minimal-ipv6-example--jhj9te",
        "Scheme": "internet-facing",
        "SubnetMappings": [
          {
            "SubnetId": {
              "Ref": "AWSEC2Subnetustest1aminimalipv6examplecom"
            }
          }
        ],
        "Type": "network",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "api.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingV2TargetGrouptcpminimalipv6examplebne5ih": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "tcp-minimal-ipv6-example--bne5ih",
        "Port": 443,
        "Protocol": "TCP",
        "VpcId": {
          "Ref": "AWSEC2VPCminimalipv6examplecom"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "tcp-minimal-ipv6-example--bne5ih"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ],
        "HealthCheckProtocol": "TCP",
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2
      }
    },
    "AWSIAMInstanceProfilemastersminimalipv6examplecom": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "InstanceProfileName": "masters.minimal-ipv6.example.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersminimalipv6examplecom"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilenodesminimalipv6examplecom": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "InstanceProfileName": "nodes.minimal-ipv6.example.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesminimalipv6examplecom"
          }
        ]
      }
    },
    "AWSIAMPolicymastersminimalipv6examplecom": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "masters.minimal-ipv6.example.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersminimalipv6examplecom"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/KubernetesCluster": "minimal-ipv6.example.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/kubernetes.io/cluster/minimal-ipv6.example.com": "owned"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": "autoscaling:CompleteLifecycleAction",
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "minimal-ipv6.example.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": "autoscaling:DescribeLifecycleHooks",
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": "autoscaling:DescribeAutoScalingInstances",
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "ec2:DescribeLaunchTemplateVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DescribeAutoScalingInstances"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "minimal-ipv6.example.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeVpcs",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "iam:ListServerCertificates",
                "iam:GetServerCertificate"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets",
                "route53:GetHostedZone"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::hostedzone/Z1AFAKE1ZON3YO"
              ]
            },
            {
              "Action": [
                "route53:GetChange"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*"
              ]
            },
            {
              "Action": [
                "route53:ListHostedZones"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "minimal-ipv6.example.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicynodesminimalipv6examplecom": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "nodes.minimal-ipv6.example.com",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesminimalipv6examplecom"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": "autoscaling:DescribeAutoScalingInstances",
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolemastersminimalipv6examplecom": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "masters.minimal-ipv6.example.com",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "masters.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSIAMRolenodesminimalipv6examplecom": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "nodes.minimal-ipv6.example.com",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "minimal-ipv6.example.com"
          },
          {
            "Key": "Name",
            "Value": "nodes.minimal-ipv6.example.com"
          },
          {
            "Key": "kubernetes.io/cluster/minimal-ipv6.example.com",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSRoute53RecordSetapiminimalipv6examplecom": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "api.minimal-ipv6.example.com",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingV2LoadBalancerapiminimalipv6examplecom",
              "DNSName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "AWSElasticLoadBalancingV2LoadBalancerapiminimalipv6examplecom",
              "CanonicalHostedZoneID"
            ]
          },
          "EvaluateTargetHealth": false
        },
        "HostedZoneId": "/hostedzone/Z1AFAKE1ZON3YO"
      }
    }
  }
}
