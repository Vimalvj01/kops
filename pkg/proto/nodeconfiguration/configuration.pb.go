// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/nodeconfiguration/configuration.proto

package nodeconfiguration

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigurationRequest) Reset()         { *m = GetConfigurationRequest{} }
func (m *GetConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigurationRequest) ProtoMessage()    {}
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_606e813b8a8360c9, []int{0}
}

func (m *GetConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigurationRequest.Unmarshal(m, b)
}
func (m *GetConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigurationRequest.Merge(m, src)
}
func (m *GetConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigurationRequest.Size(m)
}
func (m *GetConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigurationRequest proto.InternalMessageInfo

type GetConfigurationResponse struct {
	ClusterFullConfig    string   `protobuf:"bytes,1,opt,name=cluster_full_config,json=clusterFullConfig,proto3" json:"cluster_full_config,omitempty"`
	InstanceGroupConfig  string   `protobuf:"bytes,2,opt,name=instance_group_config,json=instanceGroupConfig,proto3" json:"instance_group_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigurationResponse) Reset()         { *m = GetConfigurationResponse{} }
func (m *GetConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigurationResponse) ProtoMessage()    {}
func (*GetConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_606e813b8a8360c9, []int{1}
}

func (m *GetConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigurationResponse.Unmarshal(m, b)
}
func (m *GetConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigurationResponse.Merge(m, src)
}
func (m *GetConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigurationResponse.Size(m)
}
func (m *GetConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigurationResponse proto.InternalMessageInfo

func (m *GetConfigurationResponse) GetClusterFullConfig() string {
	if m != nil {
		return m.ClusterFullConfig
	}
	return ""
}

func (m *GetConfigurationResponse) GetInstanceGroupConfig() string {
	if m != nil {
		return m.InstanceGroupConfig
	}
	return ""
}

func init() {
	proto.RegisterType((*GetConfigurationRequest)(nil), "nodeconfiguration.GetConfigurationRequest")
	proto.RegisterType((*GetConfigurationResponse)(nil), "nodeconfiguration.GetConfigurationResponse")
}

func init() {
	proto.RegisterFile("pkg/proto/nodeconfiguration/configuration.proto", fileDescriptor_606e813b8a8360c9)
}

var fileDescriptor_606e813b8a8360c9 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xbb, 0x4b, 0xc7, 0x30,
	0x14, 0x85, 0xa9, 0x83, 0x60, 0x26, 0x9b, 0x22, 0x56, 0x27, 0xe9, 0xe2, 0x0b, 0x12, 0xa8, 0x8b,
	0xb3, 0x82, 0xdd, 0x1c, 0xea, 0xe6, 0x52, 0x6a, 0x7a, 0x5b, 0x42, 0x42, 0x6e, 0xcc, 0xc3, 0xd1,
	0xd5, 0x7f, 0x5b, 0x6c, 0x2c, 0x58, 0x8b, 0xf2, 0x1b, 0x93, 0xef, 0x7c, 0xe1, 0x9c, 0x10, 0x6e,
	0xd5, 0xc4, 0xad, 0xc3, 0x80, 0xdc, 0xe0, 0x00, 0x02, 0xcd, 0x28, 0xa7, 0xe8, 0xfa, 0x20, 0xd1,
	0xf0, 0xd5, 0x89, 0xcd, 0x29, 0x9a, 0x6f, 0x62, 0xd5, 0x09, 0x39, 0x6e, 0x20, 0xdc, 0xff, 0xbc,
	0x6b, 0xe1, 0x35, 0x82, 0x0f, 0xd5, 0x3b, 0x29, 0xb7, 0xc8, 0x5b, 0x34, 0x1e, 0x28, 0x23, 0x85,
	0xd0, 0xd1, 0x07, 0x70, 0xdd, 0x18, 0xb5, 0xee, 0xd2, 0xa3, 0x65, 0x76, 0x96, 0x5d, 0x1c, 0xb4,
	0xf9, 0x37, 0x7a, 0x88, 0x5a, 0x27, 0x9d, 0xd6, 0xe4, 0x48, 0x1a, 0x1f, 0x7a, 0x23, 0xa0, 0x9b,
	0x1c, 0x46, 0xbb, 0x18, 0x7b, 0xb3, 0x51, 0x2c, 0xb0, 0xf9, 0x62, 0xc9, 0xa9, 0x3f, 0x32, 0x52,
	0x3e, 0xe2, 0x00, 0xab, 0x06, 0x4f, 0xe0, 0xde, 0xa4, 0x00, 0xaa, 0xc8, 0xe1, 0xef, 0x72, 0xf4,
	0x8a, 0x6d, 0xf6, 0xb1, 0x3f, 0xc6, 0x9d, 0x5e, 0xef, 0x94, 0x4d, 0x6b, 0xef, 0x2e, 0x9f, 0xcf,
	0xd5, 0xad, 0x67, 0x12, 0xb9, 0x42, 0xeb, 0xff, 0xfb, 0xf6, 0x97, 0xfd, 0x19, 0xdc, 0x7c, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x19, 0x1c, 0x60, 0x49, 0x9c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeConfigurationServiceClient is the client API for NodeConfigurationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeConfigurationServiceClient interface {
	GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*GetConfigurationResponse, error)
}

type nodeConfigurationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeConfigurationServiceClient(cc *grpc.ClientConn) NodeConfigurationServiceClient {
	return &nodeConfigurationServiceClient{cc}
}

func (c *nodeConfigurationServiceClient) GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*GetConfigurationResponse, error) {
	out := new(GetConfigurationResponse)
	err := c.cc.Invoke(ctx, "/nodeconfiguration.NodeConfigurationService/GetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeConfigurationServiceServer is the server API for NodeConfigurationService service.
type NodeConfigurationServiceServer interface {
	GetConfiguration(context.Context, *GetConfigurationRequest) (*GetConfigurationResponse, error)
}

// UnimplementedNodeConfigurationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeConfigurationServiceServer struct {
}

func (*UnimplementedNodeConfigurationServiceServer) GetConfiguration(ctx context.Context, req *GetConfigurationRequest) (*GetConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfiguration not implemented")
}

func RegisterNodeConfigurationServiceServer(s *grpc.Server, srv NodeConfigurationServiceServer) {
	s.RegisterService(&_NodeConfigurationService_serviceDesc, srv)
}

func _NodeConfigurationService_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeConfigurationServiceServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeconfiguration.NodeConfigurationService/GetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeConfigurationServiceServer).GetConfiguration(ctx, req.(*GetConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeConfigurationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeconfiguration.NodeConfigurationService",
	HandlerType: (*NodeConfigurationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfiguration",
			Handler:    _NodeConfigurationService_GetConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/nodeconfiguration/configuration.proto",
}
