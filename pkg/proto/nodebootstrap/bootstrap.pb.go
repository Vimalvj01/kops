/*
Copyright 2020 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/nodebootstrap/bootstrap.proto

package nodebootstrap

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateKubeletBootstrapTokenRequest struct {
	NodeName             string           `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	PublicKey            *PublicKey       `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	NodeCredentials      *NodeCredentials `protobuf:"bytes,3,opt,name=node_credentials,json=nodeCredentials,proto3" json:"node_credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateKubeletBootstrapTokenRequest) Reset()         { *m = CreateKubeletBootstrapTokenRequest{} }
func (m *CreateKubeletBootstrapTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateKubeletBootstrapTokenRequest) ProtoMessage()    {}
func (*CreateKubeletBootstrapTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8d6cd155a1d47f4, []int{0}
}

func (m *CreateKubeletBootstrapTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateKubeletBootstrapTokenRequest.Unmarshal(m, b)
}
func (m *CreateKubeletBootstrapTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateKubeletBootstrapTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateKubeletBootstrapTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateKubeletBootstrapTokenRequest.Merge(m, src)
}
func (m *CreateKubeletBootstrapTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateKubeletBootstrapTokenRequest.Size(m)
}
func (m *CreateKubeletBootstrapTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateKubeletBootstrapTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateKubeletBootstrapTokenRequest proto.InternalMessageInfo

func (m *CreateKubeletBootstrapTokenRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateKubeletBootstrapTokenRequest) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CreateKubeletBootstrapTokenRequest) GetNodeCredentials() *NodeCredentials {
	if m != nil {
		return m.NodeCredentials
	}
	return nil
}

// NodeCredentials allows a node to provide any secrets etc that can help verify its identity
type NodeCredentials struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeCredentials) Reset()         { *m = NodeCredentials{} }
func (m *NodeCredentials) String() string { return proto.CompactTextString(m) }
func (*NodeCredentials) ProtoMessage()    {}
func (*NodeCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8d6cd155a1d47f4, []int{1}
}

func (m *NodeCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeCredentials.Unmarshal(m, b)
}
func (m *NodeCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeCredentials.Marshal(b, m, deterministic)
}
func (m *NodeCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeCredentials.Merge(m, src)
}
func (m *NodeCredentials) XXX_Size() int {
	return xxx_messageInfo_NodeCredentials.Size(m)
}
func (m *NodeCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_NodeCredentials proto.InternalMessageInfo

type CreateKubeletBootstrapTokenResponse struct {
	//  Token token = 1;
	Certificate          *Certificate `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateKubeletBootstrapTokenResponse) Reset()         { *m = CreateKubeletBootstrapTokenResponse{} }
func (m *CreateKubeletBootstrapTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateKubeletBootstrapTokenResponse) ProtoMessage()    {}
func (*CreateKubeletBootstrapTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8d6cd155a1d47f4, []int{2}
}

func (m *CreateKubeletBootstrapTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateKubeletBootstrapTokenResponse.Unmarshal(m, b)
}
func (m *CreateKubeletBootstrapTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateKubeletBootstrapTokenResponse.Marshal(b, m, deterministic)
}
func (m *CreateKubeletBootstrapTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateKubeletBootstrapTokenResponse.Merge(m, src)
}
func (m *CreateKubeletBootstrapTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateKubeletBootstrapTokenResponse.Size(m)
}
func (m *CreateKubeletBootstrapTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateKubeletBootstrapTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateKubeletBootstrapTokenResponse proto.InternalMessageInfo

func (m *CreateKubeletBootstrapTokenResponse) GetCertificate() *Certificate {
	if m != nil {
		return m.Certificate
	}
	return nil
}

type PublicKey struct {
	PemData              []byte   `protobuf:"bytes,1,opt,name=pem_data,json=pemData,proto3" json:"pem_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8d6cd155a1d47f4, []int{3}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPemData() []byte {
	if m != nil {
		return m.PemData
	}
	return nil
}

type Certificate struct {
	PemData              []byte   `protobuf:"bytes,1,opt,name=pem_data,json=pemData,proto3" json:"pem_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Certificate) Reset()         { *m = Certificate{} }
func (m *Certificate) String() string { return proto.CompactTextString(m) }
func (*Certificate) ProtoMessage()    {}
func (*Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8d6cd155a1d47f4, []int{4}
}

func (m *Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Certificate.Unmarshal(m, b)
}
func (m *Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Certificate.Marshal(b, m, deterministic)
}
func (m *Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Certificate.Merge(m, src)
}
func (m *Certificate) XXX_Size() int {
	return xxx_messageInfo_Certificate.Size(m)
}
func (m *Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_Certificate proto.InternalMessageInfo

func (m *Certificate) GetPemData() []byte {
	if m != nil {
		return m.PemData
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateKubeletBootstrapTokenRequest)(nil), "nodebootstrap.CreateKubeletBootstrapTokenRequest")
	proto.RegisterType((*NodeCredentials)(nil), "nodebootstrap.NodeCredentials")
	proto.RegisterType((*CreateKubeletBootstrapTokenResponse)(nil), "nodebootstrap.CreateKubeletBootstrapTokenResponse")
	proto.RegisterType((*PublicKey)(nil), "nodebootstrap.PublicKey")
	proto.RegisterType((*Certificate)(nil), "nodebootstrap.Certificate")
}

func init() {
	proto.RegisterFile("pkg/proto/nodebootstrap/bootstrap.proto", fileDescriptor_f8d6cd155a1d47f4)
}

var fileDescriptor_f8d6cd155a1d47f4 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x89, 0x82, 0x36, 0x53, 0xa5, 0xba, 0x78, 0x88, 0x2d, 0x48, 0x49, 0x51, 0x7b, 0x4a,
	0xb0, 0x1e, 0xf4, 0xe0, 0xa9, 0xf5, 0x22, 0x85, 0x22, 0xd1, 0x93, 0x97, 0xb2, 0xd9, 0x8c, 0xb2,
	0xa4, 0xd9, 0x5d, 0x77, 0xb7, 0x42, 0xef, 0xbe, 0x86, 0x8f, 0xe3, 0x7b, 0x49, 0x57, 0xfb, 0x2f,
	0x60, 0xc4, 0xdb, 0x30, 0xf3, 0xfb, 0x66, 0xe6, 0x9b, 0x5d, 0x38, 0x57, 0xf9, 0x4b, 0xac, 0xb4,
	0xb4, 0x32, 0x16, 0x32, 0xc3, 0x54, 0x4a, 0x6b, 0xac, 0xa6, 0x2a, 0x5e, 0x46, 0x91, 0xab, 0x92,
	0xfd, 0x8d, 0x72, 0xf8, 0xe9, 0x41, 0x38, 0xd0, 0x48, 0x2d, 0x0e, 0xa7, 0x29, 0x4e, 0xd0, 0xf6,
	0x17, 0xa5, 0x47, 0x99, 0xa3, 0x48, 0xf0, 0x75, 0x8a, 0xc6, 0x92, 0x16, 0xf8, 0x73, 0xdd, 0x58,
	0xd0, 0x02, 0x03, 0xaf, 0xed, 0x75, 0xfd, 0xa4, 0x36, 0x4f, 0x8c, 0x68, 0x81, 0xe4, 0x0a, 0x40,
	0x4d, 0xd3, 0x09, 0x67, 0xe3, 0x1c, 0x67, 0xc1, 0x56, 0xdb, 0xeb, 0xd6, 0x7b, 0x41, 0xb4, 0x31,
	0x27, 0xba, 0x77, 0xc0, 0x10, 0x67, 0x89, 0xaf, 0x16, 0x21, 0xb9, 0x83, 0x03, 0xd7, 0x95, 0x69,
	0xcc, 0x50, 0x58, 0x4e, 0x27, 0x26, 0xd8, 0x76, 0xf2, 0x93, 0x92, 0x7c, 0x24, 0x33, 0x1c, 0xac,
	0xa8, 0xa4, 0x21, 0x36, 0x13, 0xe1, 0x21, 0x34, 0x4a, 0x4c, 0xc8, 0xa0, 0x53, 0xe9, 0xcc, 0x28,
	0x29, 0x0c, 0x92, 0x1b, 0xa8, 0x33, 0xd4, 0x96, 0x3f, 0x73, 0x46, 0x2d, 0xfe, 0xac, 0xdf, 0x2c,
	0xcd, 0x1f, 0xac, 0x88, 0x64, 0x1d, 0x0f, 0xcf, 0xc0, 0x5f, 0x5a, 0x23, 0xc7, 0x50, 0x53, 0x58,
	0x8c, 0x33, 0x6a, 0xa9, 0x3b, 0xd2, 0x5e, 0xb2, 0xab, 0xb0, 0xb8, 0xa5, 0x96, 0x86, 0x5d, 0xa8,
	0xaf, 0xf5, 0xa8, 0x20, 0x7b, 0x1f, 0x1e, 0x1c, 0xcd, 0xad, 0x2c, 0xd7, 0x7d, 0x40, 0xfd, 0xc6,
	0x19, 0x92, 0x77, 0x0f, 0x5a, 0x15, 0x86, 0xc8, 0x45, 0x79, 0xe7, 0x3f, 0x9f, 0xb5, 0xd9, 0xfb,
	0x8f, 0xe4, 0xfb, 0x5e, 0xfd, 0xd3, 0xa7, 0x4e, 0x7e, 0x6d, 0x22, 0x2e, 0xe3, 0x5c, 0x2a, 0x13,
	0xff, 0xf2, 0xef, 0xd2, 0x1d, 0x97, 0xbc, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x86, 0x30, 0xa8,
	0x4b, 0x99, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeBootstrapServiceClient is the client API for NodeBootstrapService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeBootstrapServiceClient interface {
	CreateKubeletBootstrapToken(ctx context.Context, in *CreateKubeletBootstrapTokenRequest, opts ...grpc.CallOption) (*CreateKubeletBootstrapTokenResponse, error)
}

type nodeBootstrapServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeBootstrapServiceClient(cc *grpc.ClientConn) NodeBootstrapServiceClient {
	return &nodeBootstrapServiceClient{cc}
}

func (c *nodeBootstrapServiceClient) CreateKubeletBootstrapToken(ctx context.Context, in *CreateKubeletBootstrapTokenRequest, opts ...grpc.CallOption) (*CreateKubeletBootstrapTokenResponse, error) {
	out := new(CreateKubeletBootstrapTokenResponse)
	err := c.cc.Invoke(ctx, "/nodebootstrap.NodeBootstrapService/CreateKubeletBootstrapToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeBootstrapServiceServer is the server API for NodeBootstrapService service.
type NodeBootstrapServiceServer interface {
	CreateKubeletBootstrapToken(context.Context, *CreateKubeletBootstrapTokenRequest) (*CreateKubeletBootstrapTokenResponse, error)
}

// UnimplementedNodeBootstrapServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeBootstrapServiceServer struct {
}

func (*UnimplementedNodeBootstrapServiceServer) CreateKubeletBootstrapToken(ctx context.Context, req *CreateKubeletBootstrapTokenRequest) (*CreateKubeletBootstrapTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKubeletBootstrapToken not implemented")
}

func RegisterNodeBootstrapServiceServer(s *grpc.Server, srv NodeBootstrapServiceServer) {
	s.RegisterService(&_NodeBootstrapService_serviceDesc, srv)
}

func _NodeBootstrapService_CreateKubeletBootstrapToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateKubeletBootstrapTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeBootstrapServiceServer).CreateKubeletBootstrapToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodebootstrap.NodeBootstrapService/CreateKubeletBootstrapToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeBootstrapServiceServer).CreateKubeletBootstrapToken(ctx, req.(*CreateKubeletBootstrapTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeBootstrapService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodebootstrap.NodeBootstrapService",
	HandlerType: (*NodeBootstrapServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateKubeletBootstrapToken",
			Handler:    _NodeBootstrapService_CreateKubeletBootstrapToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/nodebootstrap/bootstrap.proto",
}
