syntax = "proto3";
package nodebootstrap;

option go_package = "k8s.io/kops/pkg/proto/nodebootstrap";

service NodeBootstrapService {
  rpc CreateKubeletBootstrapToken(CreateKubeletBootstrapTokenRequest) returns (CreateKubeletBootstrapTokenResponse);
}

message CreateKubeletBootstrapTokenRequest {
  string node_name = 1;
  PublicKey public_key = 2;
  NodeCredentials node_credentials = 3;
}

// NodeCredentials allows a node to provide any secrets etc that can help verify its identity
message NodeCredentials {
}

message CreateKubeletBootstrapTokenResponse {
//  Token token = 1;
  Certificate certificate = 2;
}

//message Token {
//  string bearer_token = 1;
//}


message PublicKey {
  bytes pem_data = 1;
}

message Certificate {
  bytes pem_data = 1;
}
